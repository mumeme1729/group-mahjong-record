{"version":3,"sources":["features/home/Home.module.css","features/group/Group.module.css","features/auth/authSlice.ts","features/home/homeSlice.ts","features/auth/Activate.tsx","features/auth/SignUp.tsx","features/group/groupSlice.ts","features/auth/Login.tsx","features/auth/WhatIs.tsx","features/img/home.jpg","features/img/grouphome.jpg","features/img/mahjong.jpg","features/img/battle.jpg","features/img/profiledetail.jpg","features/img/recode.jpg","features/img/editrecode.jpg","features/img/setting.jpg","features/auth/HowToUse.tsx","features/auth/Auth.tsx","features/auth/Auth_done.tsx","features/auth/PasswordConfirm.tsx","features/auth/PasswordReset.tsx","features/group/Game.tsx","features/group/GameResults.tsx","features/group/GroupImageTrimming.tsx","features/group/GroupSettings.tsx","features/img/fish_shark.png","features/group/GroupHome.tsx","features/group/GroupMember.tsx","features/group/MatchRecord.tsx","features/img/good_neko.jpg","features/img/yosi_neko.jpg","features/img/nomal_neko.jpg","features/img/bad_neko.jpg","features/group/MemberDetail.tsx","features/home/Contact.tsx","features/home/Disclaimer.tsx","features/home/Footer.tsx","features/home/same.svg","features/home/ImageTrimming.tsx","features/home/Profile.tsx","features/home/Header.tsx","features/home/BelongToGroupList.tsx","features/home/Search.tsx","features/home/Home.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/auth/Auth.module.css"],"names":["module","exports","apiUrl","process","fetchAsyncRegister","createAsyncThunk","auth","a","axios","post","headers","catch","error","response","res","data","fetchAsyncActivateUser","token","get","fetchAsyncGetUser","email","fetchAsyncCreateProf","nickName","Authorization","localStorage","localJWT","fetchAsyncUpdateProf","profile","put","id","fetchAsyncUpdateProfImage","profileimage","uploadData","FormData","append","text","img","name","fetchAsyncLogin","authen","fetchAsyncGetMyProf","fetchAsyncPasswordReset","fetchAsyncPasswordConfirm","password","authSlice","createSlice","initialState","openSignIn","isloadingactive","login_user_profile","userProfile","created_at","reducers","setOpenSignIn","state","resetOpenSignIn","setIsLoadingActive","resetIsLoadingActive","extraReducers","builder","addCase","fulfilled","action","payload","detail","setItem","access","actions","selectLoginUserProfile","selectOpenSignIn","selectLoadingActive","fetchAsyncGetBelongToGroup","reverse","fetchAsyncCreateGroup","newGroup","groupData","title","fetchAsyncPostContact","homeSlice","backUrl","isOpenProfile","isOpenImageTrimming","belongToGroup","created_on","is_active","setBackUrl","resetBackUrl","setOpenProfile","resetOpenProfile","setImageTrimming","resetImageTrimming","selectBelongToGroup","home","selectBackUrl","selectIsOpenProfile","selectIsOpenImageTrimming","Activate","dispatch","useDispatch","history","useHistory","params","useParams","backurl","useSelector","loading","useState","falseLogin","setfalseLogin","isloginloading","setIsLoginLoading","useEffect","fetchLoader","className","initialErrors","initialValues","onSubmit","values","result","match","push","validationSchema","Yup","shape","required","min","handleSubmit","handleChange","handleBlur","errors","touched","isValid","styles","auth_login_main_container","auth_login_main_body","auth_activate_p","login_failure_p","auth_login_title_container","auth_login_h2","CircularProgress","TextField","placeholder","type","onChange","onBlur","value","activate_login_btn","Button","variant","color","disabled","modalStyle","overlay","background","zIndex","content","top","left","backgroundColor","width","height","transform","SignUp","sendEmail","setSendEmail","successCreateAccount","setSuccessCreateAccount","password2","length","auth_packet","resultRegister","oneOf","login_signup_h2","textfield","fullWidth","switch_login_signup_btn_container","switch_login_signup_btn","onClick","isOpen","onRequestClose","style","ariaHideApp","send_mail_container","send_mail_p","fetchAsyncParticipationGroup","participations","userGroup","forEach","member","String","patch","date","fetchAsyncCreateRate","rate","fetchAsyncGetGroup","fetchAsyncUpdateGroup","group","fetchAsyncUpdateGroupImage","groupimage","fetchAsyncGetGameResults","group_id","fetchAsyncCreateGame","fetchAsyncDeleteGame","delete","fetchAsyncCreateGameResults","score","fetchAsyncEditGameResults","game_results","fetchAsyncPutRate","rate_info","rate_id","renponse","fetchAsyncRateIsActive","fetchAsyncGetSelectProfile","groupSlice","isOpenSettings","isopengroupimagetrimming","isload","isloadresults","groupId","user_id","gameresults","results","game_id","rank","setOpenSettings","resetOpenSettings","setOpenGroupImageTrimming","resetOpenGroupImageTrimming","startLoad","endLoad","startLoadResults","endLoadResults","setGroupId","selecGroup","selectGameResults","selectOpenSettings","selectOpenGroupImageTrimming","selectSelectProfile","selectIsStartLoad","selectIsLoadResults","selectGroupId","Login","groupid","to","link_border","WhatIs","auth_what_container","auth_what","auth_what_h2","auth_what_p","HowToUse","auth_how_to","auth_how_to_h2","auth_how_to_container","auth_how_to_body","how_to_p","how_to_p_2","src","how_to_image_login","alt","grouphome","how_to_description_div","how_to_p_title","battle","recode","editrecode","setting","mahjong","how_to_p_3","Auth","openhowto","setHowTo","location","useLocation","pathname","auth_container","auth_body","auth_body_header_img","auth_body_header","auth_title_h1","auth_title_p","auth_login_signup_container","auth_login_signup","auth_description_container","auth_description_body","auth_description_btn_div","auth_description_btn","auth_description_btn_h2","auth_description_btn_h2_underline","Auth_done","PasswordConfirm","password_reset_container","password_reset_body","password_reset_h3","password_reset_p","password1","packet","new_password1","new_password2","uid","label","password_reset_btn","PasswordReset","sendemal","Game","groupmember","openModal","setOpenModal","score1","setScore1","score2","setScore2","score3","setScore3","score4","setScore4","memts","setMemts","uma","setUma","ratelist","memberprofile","map","m","filter","gr","newGame","e","preventDefault","culcScore","ranklist","i","culcscore","cscore","Math","floor","ceil","r","pro","scoresum","recodeScore","sort","b","comp","ratesum","rateave","round","s","resultspacket","game_main_container","game_main_body","page_title_select_member","group_title_h2","game_container","includes","game_user_btn","game_body","game_selected_profile","game_avater","Avatar","game_start_btn","Number","target","match_radio_box_container","checked","GameResults","opendeleteresults","setOpenDeleteResults","slice","allgameresults","rateInfo","rateinfo","gm","deletegame","all","gameRate","ar","rm","window","reload","editGame","editscore","es","edits","TableRow","gameresult_container","TableCell","component","scope","results_table_p_blue","results_table_p_red","results_table_p","defaultValue","gameresults_btn_container","leavegroup_p","leavegroup_container","leavegroup_body","GroupImageTrimming","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","useCallback","croppedArea","setSrc","createImage","url","Promise","resolve","reject","image","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","toBlob","blob","updateImage","croppedImage","Date","now","newImage","File","lastModified","image_trimming_container","image_trimming_body","aspect","onCropChange","onZoomChange","image_tring_select","profile_image_icon_input","accept","event","files","reader","FileReader","readAsDataURL","IconButton","fileInput","getElementById","click","image_slider","Slider","max","step","aria-labelledby","z","modalStyle2","GroupSettings","isopensettings","setTitle","setText","setPassword","openleavegroup","setOpenLeaveGroup","loginuserprofile","updateGroup","updateText","updatePassword","updateTitle","leaveGroup","rate_pkt","groupsetting_modal_img","helperText","multiline","groupsetting_btn","leavegroup","leavegroup_p_c","GroupHome","istrue","setIsTrue","isopenpasswordwindow","setIsOpenPasswordWindow","notmatchpass","setNotMatchPass","useLayoutEffect","profileresults","isParti","participationGroup","flag","pkt","participationGroupWithPassword","classes","makeStyles","table","minWidth","maxWidth","useStyles","group_home_container","group_home_body_container","group_home_body_top","group_home_body_top_groupinfo","group_home_body_top_groupinfo_container","group_home_title","group_img","groupImage","group_home_body_top_groupinfo_title","share_btn","FacebookShareButton","FacebookIcon","size","share_btn_icon","TwitterShareButton","TwitterIcon","LineShareButton","LineIcon","EmailShareButton","EmailIcon","group_home_body_circular_container","group_home_body","group_home_container_left","group_home_menu","grouphome_btn","scrollTo","hgrouphome_menu_btn_h3","group_home_container_right","group_home_container_right_bottom","group_home_results","Table","aria-label","TableHead","gameresult","TableBody","participation_btn_container","participation_btn_body","participation_btn","participation_btn_h3","group_home_modal_container","group_home_modal_btn","GroupMember","updateRate","page_title_group_member","update_rate_btn","mem","MatchRecord","setDate","enddate","setEndDate","isopentotal","kurokawa","setKurokawa","startday","endday","parse","selectgameresults","tartgetday","resultssize","offset","setOffset","parPage","selectresult","selectprof","gamecount","rank1","rank2","rank3","rank4","table2","table3","matchresult_title","selectdate_container","selectdate_body","InputLabelProps","shrink","selectdate_container_div","selectdate_container_h3","match_recode_table","prof","toFixed","match_total","result_matchrecode","result_page_container","result_page_body","limit","total","handleClick","results_table_not_exist_div","MemberDetail","nickname","finduser","rank_list","status","rank_status","rs","status_icon","ummm","status_mozi","good","soso","bad","average_rank","top_rate","las_rate","rentai_rate","average_score","las","rentai","setscore","memberdetail_container_top","memberdetail_container_top_body","memberdetail_prof","memberdetail_prof_p_container","memberdetail_prof_p_name","memberdetail_img","memberdetail_prof_avatar","memberdetail_img_status","memberdetail_img_status_mozi","memberdetail_img_status_icon","memberdetail_prof_p","memberdetail_chart","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","domain","PolarRadiusAxis","tick","axisLine","Radar","stroke","fill","fillOpacity","memberdetail_mid_container","label_y","label_y_p_1","label_y_p_2","label_y_p_3","label_y_p_4","memberdetail_chart_score","LineChart","margin","right","bottom","CartesianGrid","YAxis","ticks","tickSize","reversed","Line","strokeWidth","dot","isAnimationActive","align","match_recode_not_exist","Contact","sendmail","setSendMail","contact_container","contact_body","contact_packet","sender","message","rows","Disclaimer","Footer","footer_container","footer_p_div","footer_p","footer_link","ImageTrimming","isopenimagetrimming","Profile","isopenprofile","setName","updateProfile","updateName","profile_btn_container","profile_btn","removeItem","Header","loginUserProfile","header_container","header_body","header_link","header_body_left","header_title_h3","header_img","header_body_right","header_nickname","BelongToGroupList","belong_to_group_container","belong_to_group_body_top","belong_to_group_img","belong_to_group_body_bottom","belong_to_group_h3","Search","groupName","setGroupName","setImage","rate_results","binaryData","URL","createObjectURL","Blob","create_group_container","hidden","Home","belongtogroup","rejected","home_container","home_grouplist_container","App","basename","path","exact","store","configureStore","reducer","authReducer","homeReducer","groupReducer","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.337573b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"Home_header_container__19sOs\",\"header_body\":\"Home_header_body__CR6Vx\",\"header_link\":\"Home_header_link__2Syya\",\"header_title_h3\":\"Home_header_title_h3__3REQX\",\"header_img\":\"Home_header_img__3JLwL\",\"header_nickname\":\"Home_header_nickname__3mwrs\",\"header_body_left\":\"Home_header_body_left__3zX9r\",\"header_body_right\":\"Home_header_body_right__ZgIts\",\"home_container\":\"Home_home_container__3w-iu\",\"home_grouplist_container\":\"Home_home_grouplist_container__8sOUI\",\"create_group_container\":\"Home_create_group_container__FxsxA\",\"belong_to_group_container\":\"Home_belong_to_group_container__18FcG\",\"belong_to_group_body_top\":\"Home_belong_to_group_body_top__3vQ7w\",\"belong_to_group_img\":\"Home_belong_to_group_img__vcUip\",\"belong_to_group_body_bottom\":\"Home_belong_to_group_body_bottom__msn_U\",\"belong_to_group_h3\":\"Home_belong_to_group_h3__3k_kf\",\"profile_btn\":\"Home_profile_btn__2s_C3\",\"image_trimming_container\":\"Home_image_trimming_container__241El\",\"image_tring_select\":\"Home_image_tring_select__2dVZh\",\"image_trimming_body\":\"Home_image_trimming_body__2lMTT\",\"profile_image_icon_input\":\"Home_profile_image_icon_input__trVl4\",\"image_slider\":\"Home_image_slider__3V7Vj\",\"footer_container\":\"Home_footer_container__28NHv\",\"footer_p_div\":\"Home_footer_p_div__1H5Ih\",\"footer_link\":\"Home_footer_link__182sb\",\"contact_container\":\"Home_contact_container__28KDr\",\"contact_body\":\"Home_contact_body__1s7MC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group_home_container\":\"Group_group_home_container__2c8zs\",\"group_img\":\"Group_group_img__wiAhE\",\"group_home_body\":\"Group_group_home_body__2dMK1\",\"match_total\":\"Group_match_total__2Spu8\",\"group_home_body_circular_container\":\"Group_group_home_body_circular_container__-2kEf\",\"group_title_h2\":\"Group_group_title_h2__1BxSH\",\"group_home_body_top\":\"Group_group_home_body_top__2MBD0\",\"group_home_body_top_groupinfo_container\":\"Group_group_home_body_top_groupinfo_container__3LcOo\",\"group_home_title\":\"Group_group_home_title__1aKMA\",\"group_home_title_p\":\"Group_group_home_title_p__2nP_l\",\"group_home_body_top_groupinfo_title\":\"Group_group_home_body_top_groupinfo_title__3SxU0\",\"share_btn\":\"Group_share_btn__1sDV0\",\"share_btn_icon\":\"Group_share_btn_icon__1NE2E\",\"group_home_container_left\":\"Group_group_home_container_left__2cBfk\",\"grouphome_btn\":\"Group_grouphome_btn__Krkzy\",\"group_home_menu\":\"Group_group_home_menu__M1o_T\",\"hgrouphome_menu_btn_h3\":\"Group_hgrouphome_menu_btn_h3__1Bh3g\",\"group_home_container_right\":\"Group_group_home_container_right__1RmHN\",\"results_table_p\":\"Group_results_table_p__1aWae\",\"results_table_p_blue\":\"Group_results_table_p_blue__2ByBw\",\"results_table_p_red\":\"Group_results_table_p_red__2NRYV\",\"group_home_results\":\"Group_group_home_results__3qLTe\",\"participation_btn_container\":\"Group_participation_btn_container__5vHHj\",\"participation_btn_h3\":\"Group_participation_btn_h3__1332m\",\"participation_btn\":\"Group_participation_btn__1Wtg5\",\"page_title_group_member\":\"Group_page_title_group_member__LIc5c\",\"update_rate_btn\":\"Group_update_rate_btn__2ElyP\",\"gameresult_container\":\"Group_gameresult_container__3x1wp\",\"gameresult_body\":\"Group_gameresult_body__1e-kB\",\"match_recode_table\":\"Group_match_recode_table__Awj4a\",\"selectdate_container\":\"Group_selectdate_container__204qM\",\"selectdate_body\":\"Group_selectdate_body__3wtpY\",\"result_matchrecode\":\"Group_result_matchrecode__3FNTK\",\"selectdate_container_h3\":\"Group_selectdate_container_h3__2jgJw\",\"gameresults_btn_container\":\"Group_gameresults_btn_container__3z4DF\",\"gameresults_circular\":\"Group_gameresults_circular__3tn4S\",\"matchresult_title\":\"Group_matchresult_title__1zZjZ\",\"results_table_not_exist_div\":\"Group_results_table_not_exist_div__U_YXp\",\"result_page_body\":\"Group_result_page_body__2sLFf\",\"game_main_container\":\"Group_game_main_container__1OCvn\",\"game_main_body\":\"Group_game_main_body__1ZLuH\",\"page_title_select_member\":\"Group_page_title_select_member__2h6hx\",\"game_container\":\"Group_game_container__1fAN_\",\"game_body\":\"Group_game_body__1xFer\",\"game_avater\":\"Group_game_avater__kkZXT\",\"game_user_btn\":\"Group_game_user_btn__nkQ2_\",\"game_selected_profile\":\"Group_game_selected_profile__vlm7z\",\"game_start_btn\":\"Group_game_start_btn__2q6e3\",\"radar_chart\":\"Group_radar_chart__2SWQO\",\"memberdetail_container_top\":\"Group_memberdetail_container_top__3WeFx\",\"memberdetail_container_top_body\":\"Group_memberdetail_container_top_body__3FSaN\",\"memberdetail_prof\":\"Group_memberdetail_prof__-cus5\",\"memberdetail_prof_p_container\":\"Group_memberdetail_prof_p_container__2WACe\",\"memberdetail_img\":\"Group_memberdetail_img__3TJv-\",\"memberdetail_img_status\":\"Group_memberdetail_img_status__qBVPf\",\"memberdetail_img_status_img\":\"Group_memberdetail_img_status_img__3QHG_\",\"memberdetail_img_status_mozi\":\"Group_memberdetail_img_status_mozi__3OqIP\",\"memberdetail_img_status_icon\":\"Group_memberdetail_img_status_icon__22Zqo\",\"memberdetail_prof_p_name\":\"Group_memberdetail_prof_p_name__1B4wE\",\"memberdetail_prof_p\":\"Group_memberdetail_prof_p__11dJV\",\"memberdetail_prof_avatar\":\"Group_memberdetail_prof_avatar__o3UJE\",\"match_recode_not_exist\":\"Group_match_recode_not_exist__M2mmF\",\"memberdetail_mid_container\":\"Group_memberdetail_mid_container__5W-iQ\",\"label_y\":\"Group_label_y__3wCP-\",\"label_y_p_1\":\"Group_label_y_p_1__308ZD\",\"label_y_p_2\":\"Group_label_y_p_2__XikSa\",\"label_y_p_3\":\"Group_label_y_p_3__1-EmS\",\"label_y_p_4\":\"Group_label_y_p_4__1KwZX\",\"leavegroup\":\"Group_leavegroup__2HrrU\",\"leavegroup_p_c\":\"Group_leavegroup_p_c__2p_6P\",\"leavegroup_container\":\"Group_leavegroup_container__3Kbl4\",\"leavegroup_body\":\"Group_leavegroup_body__3W7sV\",\"groupsetting_modal_img\":\"Group_groupsetting_modal_img__32yUr\",\"groupsetting_btn\":\"Group_groupsetting_btn__2dtaV\",\"group_home_modal_container\":\"Group_group_home_modal_container__aaLnV\",\"group_home_modal_btn\":\"Group_group_home_modal_btn__2cjJN\",\"memberdetail_chart\":\"Group_memberdetail_chart__1ZLQC\"};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_AUTHEN, PROPS_PASSWORD_CONFIRM, PROPS_PROFILE, PROPS_UPDATE_PROFILE, PROPS_UPDATE_PROFILE_IMAGE} from '../types'\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//新規登録\r\nexport const fetchAsyncRegister=createAsyncThunk(\r\n    \"auth/register\",\r\n    async (auth: PROPS_AUTHEN) => {\r\n        const res = await axios.post(`${apiUrl}mahjong/register/`, auth, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }).catch(error=>{\r\n          return error.response\r\n        });\r\n        return res.data;\r\n    }\r\n);\r\n\r\n//有効化\r\nexport const fetchAsyncActivateUser = createAsyncThunk(\"activate/get\", async (token:string) => {\r\n  const res = await axios.get(`${apiUrl}mahjong/activate/${token}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return res.data;\r\n});\r\n//ユーザーが存在するか\r\nexport const fetchAsyncGetUser=createAsyncThunk(\r\n  \"user/get\",\r\n  async (email: string) => {\r\n    const res = await axios.get(`${apiUrl}mahjong/checkuser/${email}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//プロフィール作成\r\nexport const fetchAsyncCreateProf = createAsyncThunk(\r\n  \"profile/post\",\r\n  async (nickName: PROPS_PROFILE) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/profile/`, nickName, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//アップデート(プロフィール以外)\r\nexport const fetchAsyncUpdateProf = createAsyncThunk(\r\n  \"profile/put\",\r\n  async (profile:PROPS_UPDATE_PROFILE) => {\r\n    const res = await axios.put(\r\n      `${apiUrl}mahjong/profile/${profile.id}/`,\r\n      profile,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  }\r\n);\r\nexport const fetchAsyncUpdateProfImage = createAsyncThunk(\r\n  \"profileimage/put\",\r\n  async (profileimage:PROPS_UPDATE_PROFILE_IMAGE ) => {\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"nickName\", profileimage.nickName);\r\n    uploadData.append(\"text\", profileimage.text);\r\n    profileimage.img &&uploadData.append(\"img\",profileimage.img,profileimage.name);\r\n    const res = await axios.put(\r\n      `${apiUrl}mahjong/profile/${profileimage.id}/`,\r\n      uploadData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    \r\n    return res.data;\r\n  }\r\n);\r\n//ログイン\r\nexport const fetchAsyncLogin = createAsyncThunk(\r\n    \"auth/post\",\r\n    async (authen: PROPS_AUTHEN) => {\r\n      const res = await axios.post(`${apiUrl}authen/jwt/create`, authen, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).catch(error=>{\r\n        return error.response\r\n      });\r\n      return res.data;\r\n      //取得に成功したらローカルに保存\r\n    }\r\n);\r\n\r\n//ログインしたユーザーのプロフィール\r\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\r\n  const res = await axios.get(`${apiUrl}mahjong/loginuserprofile/`, {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.localJWT}`,\r\n    },\r\n  });\r\n  return res.data[0];\r\n});\r\n//パスワードリセット\r\nexport const fetchAsyncPasswordReset = createAsyncThunk(\r\n  \"passwordreset/post\",\r\n  async (email: {email:string}) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/auth/password_reset/`, email, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).catch(error=>{\r\n      return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//パスワード再設定\r\nexport const fetchAsyncPasswordConfirm=createAsyncThunk(\r\n  \"passwordconfirm/post\",\r\n  async(password:PROPS_PASSWORD_CONFIRM)=>{\r\n    const res = await axios.post(`${apiUrl}rest-auth/password/reset/confirm/`, password, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).catch(error=>{\r\n      return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const authSlice=createSlice({\r\n    name:'auth',\r\n    initialState:{\r\n      openSignIn: true,\r\n      isloadingactive:false,\r\n      login_user_profile: {\r\n        id: 0,\r\n        nickName: \"\",\r\n        text:\"\",\r\n        userProfile: 0,\r\n        created_at: \"\",\r\n        img: \"\",\r\n      },\r\n    },\r\n    reducers:{\r\n      setOpenSignIn(state) {\r\n        state.openSignIn = true;\r\n      },\r\n      resetOpenSignIn(state) {\r\n        state.openSignIn = false;\r\n      },\r\n      setIsLoadingActive(state){\r\n        state.isloadingactive=true;\r\n      },\r\n      resetIsLoadingActive(state){\r\n        state.isloadingactive=false;\r\n      },\r\n    },\r\n    extraReducers:(builder)=>{\r\n        //ログインが成功したらjwtをローカルに保存\r\n        builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\r\n            if(action.payload.detail!==\"No active account found with the given credentials\"){\r\n              localStorage.setItem(\"localJWT\", action.payload.access);\r\n            };\r\n        });\r\n        builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\r\n          state.login_user_profile = action.payload;\r\n        }); \r\n        builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\r\n          state.login_user_profile = action.payload;\r\n        });    \r\n        builder.addCase(fetchAsyncUpdateProfImage.fulfilled,(state,action)=>{\r\n          state.login_user_profile=action.payload;\r\n        }); \r\n    },\r\n});\r\n\r\nexport const {\r\n  setOpenSignIn,\r\n  resetOpenSignIn,\r\n  setIsLoadingActive,\r\n  resetIsLoadingActive,\r\n} = authSlice.actions;\r\n\r\nexport const selectLoginUserProfile = (state: RootState) => state.auth.login_user_profile;\r\nexport const selectOpenSignIn=(state:RootState)=>state.auth.openSignIn;\r\nexport const selectLoadingActive=(state:RootState)=>state.auth.isloadingactive;\r\nexport default authSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_CONTACT,PROPS_CREATE_GROUP} from '../types'\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//所属しているグループを取得\r\nexport const fetchAsyncGetBelongToGroup = createAsyncThunk(\"belongtogroup/get\", async () => {\r\n    const res = await axios.get(`${apiUrl}mahjong/groupmember/`, {\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    });\r\n    return res.data.reverse();\r\n});\r\n\r\n//グループ新規作成\r\nexport const fetchAsyncCreateGroup = createAsyncThunk(\r\n    \"group/post\",\r\n    async (newGroup: PROPS_CREATE_GROUP) => {\r\n      const groupData = new FormData();\r\n      groupData.append(\"title\",newGroup.title);\r\n      groupData.append(\"text\",newGroup.text);\r\n      groupData.append(\"password\",newGroup.password);\r\n      newGroup.img && groupData.append(\"img\", newGroup.img, newGroup.img.name);\r\n      const res = await axios.post(`${apiUrl}mahjong/group/`, groupData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      })\r\n      return res.data;\r\n});\r\n\r\n//お問い合わせ\r\nexport const fetchAsyncPostContact=createAsyncThunk(\r\n  \"contact/post\",\r\n  async (data:PROPS_CONTACT)=>{\r\n    const res = await axios.post(`${apiUrl}mahjong/contact/`, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  });\r\n\r\nexport const homeSlice=createSlice({\r\n    name:'home',\r\n    initialState:{\r\n        backUrl:\"\",\r\n        isOpenProfile:false,\r\n        isOpenImageTrimming:false,\r\n        belongToGroup:[{\r\n            id: 0,\r\n            title: \"\",\r\n            text:\"\",\r\n            password:\"\",\r\n            img:\"\",\r\n            profile:[\r\n                {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                    is_active:true,                    \r\n                }\r\n            ],\r\n        }],\r\n    },\r\n    reducers:{\r\n      setBackUrl(state,action){\r\n        state.backUrl=action.payload;\r\n      },\r\n      resetBackUrl(state){\r\n        state.backUrl=\"\";\r\n      },\r\n      setOpenProfile(state){\r\n        state.isOpenProfile=true;\r\n      },\r\n      resetOpenProfile(state){\r\n        state.isOpenProfile=false;\r\n      },\r\n      setImageTrimming(state){\r\n        state.isOpenImageTrimming=true;\r\n      },\r\n      resetImageTrimming(state){\r\n        state.isOpenImageTrimming=false;\r\n      }\r\n    },\r\n    extraReducers:(builder)=>{\r\n        builder.addCase(fetchAsyncGetBelongToGroup.fulfilled, (state, action) => {\r\n            state.belongToGroup = action.payload;\r\n        });\r\n      //   // builder.addCase(fetchAsyncCreateGroup.fulfilled, (state, action) => {\r\n      //   //   return {\r\n      //   //     ...state,\r\n      //   //     belongToGroup: [ action.payload,...state.belongToGroup],\r\n      //   // };\r\n      // });\r\n    },\r\n});\r\n\r\nexport const {\r\n setBackUrl,\r\n resetBackUrl,\r\n setOpenProfile,\r\n resetOpenProfile,\r\n setImageTrimming,\r\n resetImageTrimming,\r\n} = homeSlice.actions;\r\n\r\nexport const selectBelongToGroup=(state:RootState)=>state.home.belongToGroup;\r\nexport const selectBackUrl=(state:RootState)=>state.home.backUrl;\r\nexport const selectIsOpenProfile=(state:RootState)=>state.home.isOpenProfile;\r\nexport const selectIsOpenImageTrimming=(state:RootState)=>state.home.isOpenImageTrimming;\r\nexport default homeSlice.reducer;","import { Button, CircularProgress, TextField } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncActivateUser, fetchAsyncCreateProf,fetchAsyncLogin, resetIsLoadingActive, selectLoadingActive, setIsLoadingActive } from './authSlice';\r\nimport * as Yup from \"yup\";\r\nimport { resetBackUrl, selectBackUrl } from '../home/homeSlice';\r\nimport styles from './Auth.module.css';\r\n\r\nconst Activate:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ token: string }>();\r\n    const backurl=useSelector(selectBackUrl);\r\n    const loading=useSelector(selectLoadingActive);\r\n    const [falseLogin,setfalseLogin]=useState(false);\r\n    const [isloginloading,setIsLoginLoading]=useState(false);\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if(params.token!==\"\"){\r\n              dispatch(setIsLoadingActive());\r\n              await dispatch(fetchAsyncActivateUser(params.token));\r\n              dispatch(resetIsLoadingActive());   \r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.token]);\r\n    return (\r\n\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\"}}\r\n\r\n                onSubmit={async (values) => {\r\n                    setIsLoginLoading(true);\r\n                    const result = await dispatch(fetchAsyncLogin(values));\r\n                    if (fetchAsyncLogin.fulfilled.match(result)) {\r\n                        if(result.payload.detail!==\"No active account found with the given credentials\"){\r\n                            const res=await dispatch(fetchAsyncCreateProf({ nickName: \"no name\"}));\r\n                            if(fetchAsyncCreateProf.fulfilled.match(res)){\r\n                                if(backurl===\"\"){\r\n                                    setIsLoginLoading(false);\r\n                                    history.push('/home');\r\n                                }else{\r\n                                    setIsLoginLoading(false);\r\n                                    history.push(backurl);\r\n                                    dispatch(resetBackUrl());\r\n                                }\r\n                            }\r\n                        }else{\r\n                            values.email=\"\";\r\n                            values.password=\"\";\r\n                            setfalseLogin(true);\r\n                            setIsLoginLoading(false);\r\n                        }\r\n                    }else{\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                        setfalseLogin(true);\r\n                        setIsLoginLoading(false);\r\n                    }   \r\n                }}\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email(\"メールアドレスのフォーマットが不正です。\")\r\n                    .required(\"メールアドレスは必須です。\"),\r\n                password: Yup.string().required(\"パスワードは必須です。\").min(4),\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    !loading &&\r\n                    <div className={styles.auth_login_main_container}>\r\n                       <div className={styles.auth_login_main_body}>\r\n                           <p className={styles.auth_activate_p}> 登録が完了しました</p>\r\n                           <p className={styles.auth_activate_p}> 以下のログインフォームよりログインしてください</p>\r\n                        {falseLogin?<p className={styles.login_failure_p}>ログインに失敗しました</p>:null}\r\n                        <div className={styles.auth_login_title_container}>\r\n                            <h2 className={styles.auth_login_h2}>ログイン</h2>\r\n                        </div>\r\n            \r\n                        {isloginloading &&<CircularProgress/>}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className={styles.auth_login_title_container}>\r\n                                <TextField\r\n                                    placeholder=\"email\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                <div >{errors.email}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                <div >{errors.password}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                <div className={styles.activate_login_btn}>\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">ログイン</Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Activate\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport {Button,TextField} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport Modal from \"react-modal\";\r\nimport styles from './Auth.module.css';\r\nimport {\r\n    fetchAsyncGetUser,\r\n    fetchAsyncRegister,\r\n    setOpenSignIn,\r\n} from './authSlice';\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:4,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 180,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst SignUp:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [sendEmail,setSendEmail]=useState(false);\r\n    const [successCreateAccount,setSuccessCreateAccount]=useState(false);\r\n    return (\r\n        <>\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\",password2:\"\" }}\r\n                \r\n                onSubmit={async (values) => {\r\n                    const res=await dispatch(fetchAsyncGetUser(values.email));\r\n                    if(res.payload.length===0){\r\n                        setSendEmail(true);\r\n                        setSuccessCreateAccount(false);\r\n                        const auth_packet={email: values.email,password: values.password}\r\n                        const resultRegister = await dispatch(fetchAsyncRegister(auth_packet));\r\n                        //新規作成に成功したらログイン\r\n                        if (fetchAsyncRegister.fulfilled.match(resultRegister)) {\r\n                            if (resultRegister.payload.email===values.email){\r\n                                setSuccessCreateAccount(false);\r\n                            }else{\r\n                                values.email=\"\";\r\n                                values.password=\"\";\r\n                                values.password2=\"\";\r\n                                setSendEmail(false);\r\n                                setSuccessCreateAccount(true);\r\n                            }\r\n                        }else{\r\n                            values.email=\"\";\r\n                            values.password=\"\";\r\n                            values.password2=\"\";\r\n                            setSendEmail(false);\r\n                            setSuccessCreateAccount(true);\r\n                        }  \r\n                    } else{\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                        values.password2=\"\";\r\n                        setSendEmail(false);\r\n                        setSuccessCreateAccount(true);\r\n                    }  \r\n                }\r\n            }\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                            .email(\"メールアドレスのフォーマットが不正です。\")\r\n                            .required(\"メールアドレスは必須です。\"),\r\n                    password: Yup.string().required(\"パスワードは必須です。\").min(8),\r\n                    password2:Yup.string().required(\"確認パスワードは必須です。\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    <div className=\"auth_login_main_container\">\r\n                        {/* <div className=\"css_styles.auth_progress\">\r\n                            {isLoadingAuth && <CircularProgress />}\r\n                        </div> */}\r\n                        {successCreateAccount\r\n                        ?\r\n                            <div>\r\n                                <p className={styles.login_failure_p}>このメールアドレスは既に登録されています</p>\r\n                            </div>:null}\r\n                        <div className=\"\">\r\n                            <h2 className={styles.login_signup_h2}>アカウント作成</h2>\r\n                        </div>\r\n                        \r\n                        <form onSubmit={handleSubmit}>\r\n                            <div >\r\n                                <TextField\r\n                                    className={styles.textfield}\r\n                                    placeholder=\"  メールアドレス\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    fullWidth\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                    <div >{errors.email}</div>\r\n                                    ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    className={styles.textfield}\r\n                                    placeholder=\"  パスワード\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                    <div >{errors.password}</div>\r\n                                    ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                <TextField\r\n                                    className={styles.textfield}\r\n                                    placeholder=\"  確認の為もう一度パスワードを入力\"\r\n                                    type=\"password\"\r\n                                    name=\"password2\"\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password2}\r\n                                />\r\n                                {touched.password2 && errors.password2 ? (\r\n                                    <div >{errors.password2}</div>\r\n                                    ) : null}\r\n                                <div className=\"\">\r\n                                    <br/>\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                        アカウント作成\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <span className={styles.switch_login_signup_btn} onClick={async () => {\r\n                                            dispatch(setOpenSignIn());              \r\n                                        }}>\r\n                                            アカウントをお持ちの方はこちら\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n        <Modal\r\n                isOpen={sendEmail}\r\n                onRequestClose={()=>{\r\n                    setSendEmail(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className={styles.send_mail_container}>\r\n                <div>\r\n                    <p className={styles.send_mail_p}>ご登録いただいたメールアドレスに確認メールを送信しました。</p>\r\n                    <p className={styles.send_mail_p}>メールより本登録をお願いします。</p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\" color=\"primary\"\r\n                        onClick={()=>{setSendEmail(false)}}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n                </div>\r\n                </div>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_CREATE_GAME,PROPS_CREATE_GAME_RESLTS, PROPS_CREATE_RATE, PROPS_EDIT_GAME_RESULTS, PROPS_PARTICIPATION, PROPS_RATE, PROPS_RATE_IS_ACTIVE, PROPS_UPDATE_GROUP, PROPS_UPDATE_GROUP_IMAGE} from '../types'\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//グループに参加\r\nexport const fetchAsyncParticipationGroup=createAsyncThunk(\r\n  \"group/patch\",\r\n  async(participations:PROPS_PARTICIPATION)=>{\r\n    const uploadData = new FormData();\r\n    participations.userGroup.forEach((member)=>{\r\n      uploadData.append(\"userGroup\", String(member));\r\n    })\r\n    const res = await axios.patch(`${apiUrl}mahjong/group/${participations.id}/`,uploadData ,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n        return error.response;\r\n    }); \r\n    return res.date;\r\n  });\r\n//レート作成\r\nexport const fetchAsyncCreateRate = createAsyncThunk(\r\n  \"rate/post\",\r\n  async (rate:PROPS_CREATE_RATE) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/rate/`, rate, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    .catch(error => {\r\n        return error.response;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n\r\n//所属しているグループを取得\r\nexport const fetchAsyncGetGroup = createAsyncThunk(\"group/get\", async (id:string) => {\r\n    const res = await axios.get(`${apiUrl}mahjong/selectgroupmember/`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n      params:{\r\n        id:`${id}`,\r\n      },\r\n    });\r\n    return res.data[0];\r\n });\r\n //グループ更新\r\n export const fetchAsyncUpdateGroup = createAsyncThunk(\r\n  \"groupinfo/patch\",\r\n  async (group:PROPS_UPDATE_GROUP) => {\r\n    const res = await axios.patch(\r\n      `${apiUrl}mahjong/group/${group.id}/`,\r\n      group,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    return res.data;\r\n  }\r\n);\r\nexport const fetchAsyncUpdateGroupImage = createAsyncThunk(\r\n  \"groupimage/patch\",\r\n  async (groupimage:PROPS_UPDATE_GROUP_IMAGE ) => {\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"title\", groupimage.title);\r\n    uploadData.append(\"text\", groupimage.text);\r\n    uploadData.append(\"password\",groupimage.password);\r\n    groupimage.img &&uploadData.append(\"img\",groupimage.img,groupimage.name);\r\n    const res = await axios.patch(\r\n      `${apiUrl}mahjong/group/${groupimage.id}/`,\r\n      uploadData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    return res.data;\r\n  }\r\n);\r\n //ゲーム結果\r\n export const fetchAsyncGetGameResults = createAsyncThunk(\"gameresults/get\", async (id:string) => {\r\n  const res = await axios.get(`${apiUrl}mahjong/results/`, {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.localJWT}`,\r\n    },\r\n    params:{\r\n      group_id:`${id}`,\r\n    },\r\n  });\r\n  return res.data;\r\n});\r\n//ゲーム開始\r\nexport const fetchAsyncCreateGame = createAsyncThunk(\r\n  \"game/post\",\r\n  async (id: PROPS_CREATE_GAME) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/game/`, id, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  }\r\n);\r\n//ゲーム削除\r\nexport const fetchAsyncDeleteGame = createAsyncThunk(\r\n  \"game/delete\",\r\n  async (id: number) => {\r\n    await axios.delete(`${apiUrl}mahjong/game/${id}`,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return id;\r\n  }\r\n);\r\n//スコア記録\r\nexport const fetchAsyncCreateGameResults=createAsyncThunk(\r\n  \"gameresults/post\",\r\n  async (score: PROPS_CREATE_GAME_RESLTS) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/gameresults/`, score, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  }\r\n);\r\n//スコア更新\r\nexport const fetchAsyncEditGameResults=createAsyncThunk(\r\n  \"gameresults/patch\",\r\n  async (game_results: PROPS_EDIT_GAME_RESULTS) => {\r\n    const res = await axios.patch(`${apiUrl}mahjong/gameresults/${game_results.id}/`, game_results, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n        return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//レート更新\r\nexport const fetchAsyncPutRate=createAsyncThunk(\r\n  \"rate/patch\",\r\n  async(rate_info:PROPS_RATE)=>{\r\n    const res = await axios.patch(`${apiUrl}mahjong/rate/${rate_info.rate_id}/`, rate_info, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n      return error.renponse;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//グループからユーザーを脱退\r\nexport const fetchAsyncRateIsActive=createAsyncThunk(\r\n  \"rateisactive/patch\",\r\n  async(rate_info:PROPS_RATE_IS_ACTIVE)=>{\r\n    const res = await axios.patch(`${apiUrl}mahjong/rate/${rate_info.rate_id}/`, rate_info, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n      return error.response;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//選択したユーザー\r\nexport const fetchAsyncGetSelectProfile=createAsyncThunk(\r\n  \"selectprof/get\",\r\n  async(id:string)=>{\r\n    const res=await axios.get(`${apiUrl}mahjong/selectuserprofile/`,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n      params:{\r\n        id:`${id}`,\r\n      },\r\n    });\r\n    return res.data[0];\r\n  }\r\n);\r\n\r\nexport const groupSlice=createSlice({\r\n    name:'home',\r\n    initialState:{\r\n      isOpenSettings:false,\r\n      isopengroupimagetrimming:false,\r\n      isload:false,\r\n      isloadresults:false,\r\n      groupId:\"\",\r\n        group:{\r\n            id: 0,\r\n            title: \"\",\r\n            text:\"\",\r\n            password:\"\",\r\n            img:\"\",\r\n            profile:[\r\n                {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                    rate_id:0,\r\n                    group_id:0,\r\n                    user_id: 0,\r\n                    rate: 1500,\r\n                    is_active:false,\r\n                }\r\n            ],\r\n        },\r\n        gameresults:[\r\n          {\r\n            id:0,\r\n            group_id:0,\r\n            created_at:\"\",\r\n            results:[\r\n              {\r\n                id:0,\r\n                game_id:0,\r\n                user_id:0,\r\n                rank:0,\r\n                score:0,\r\n                profile:\r\n                  {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                  }\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        profile:\r\n          {\r\n            id: 0,\r\n            nickName: \"\",\r\n            text:\"\",\r\n            userProfile: 0,\r\n            created_on: \"\",\r\n            img: \"\",\r\n          }\r\n    },\r\n    reducers:{\r\n      setOpenSettings(state) {\r\n        state.isOpenSettings = true;\r\n      },\r\n      resetOpenSettings(state) {\r\n        state.isOpenSettings = false;\r\n      },\r\n      setOpenGroupImageTrimming(state) {\r\n        state.isopengroupimagetrimming = true;\r\n      },\r\n      resetOpenGroupImageTrimming(state) {\r\n        state.isopengroupimagetrimming = false;\r\n      },\r\n      startLoad(state){\r\n        state.isload=true;\r\n      },\r\n      endLoad(state){\r\n        state.isload=false;\r\n      },\r\n      startLoadResults(state){\r\n        state.isloadresults=true;\r\n      },\r\n      endLoadResults(state){\r\n        state.isloadresults=false;\r\n      },\r\n      setGroupId(state,action){\r\n        state.groupId = action.payload;\r\n      }\r\n    },\r\n    extraReducers:(builder)=>{\r\n      builder.addCase(fetchAsyncGetGroup.fulfilled, (state, action) => {\r\n        state.group = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncGetSelectProfile.fulfilled, (state, action) => {\r\n        state.profile = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncGetGameResults.fulfilled, (state, action) => {\r\n        state.gameresults = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncUpdateGroupImage.fulfilled, (state, action) => {\r\n        state.group.img = action.payload.img;\r\n        state.group.title = action.payload.title;\r\n        state.group.text=action.payload.text;\r\n        state.group.password=action.payload.password;\r\n      });\r\n      builder.addCase(fetchAsyncUpdateGroup.fulfilled, (state, action) => {\r\n        state.group.title = action.payload.title;\r\n        state.group.text=action.payload.text;\r\n        state.group.password=action.payload.password;\r\n      });\r\n      // builder.addCase(fetchAsyncDeleteGame.fulfilled,(state,action)=>{\r\n      //     return {\r\n      //       ...state,\r\n      //       gameresults:state.gameresults.filter((g)=>g.id!==action.payload),\r\n      //     };\r\n      // });\r\n\r\n    },\r\n});\r\n\r\nexport const {\r\n setOpenSettings,\r\n resetOpenSettings,\r\n setOpenGroupImageTrimming,\r\n resetOpenGroupImageTrimming,\r\n startLoad,\r\n endLoad,\r\n startLoadResults,\r\n endLoadResults,\r\n setGroupId\r\n} = groupSlice.actions;\r\n\r\nexport const selecGroup=(state:RootState)=>state.group.group;\r\nexport const selectGameResults=(state:RootState)=>state.group.gameresults;\r\nexport const selectOpenSettings=(state:RootState)=>state.group.isOpenSettings;\r\nexport const selectOpenGroupImageTrimming=(state:RootState)=>state.group.isopengroupimagetrimming;\r\nexport const selectSelectProfile=(state:RootState)=>state.group.profile;\r\nexport const selectIsStartLoad=(state:RootState)=>state.group.isload;\r\nexport const selectIsLoadResults=(state:RootState)=>state.group.isloadresults;\r\nexport const selectGroupId=(state:RootState)=>state.group.groupId;\r\nexport default groupSlice.reducer;","import React,{useState} from 'react'\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport {CircularProgress,Button,TextField} from \"@material-ui/core\";\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    fetchAsyncLogin,\r\n    fetchAsyncGetMyProf,\r\n    fetchAsyncCreateProf,\r\n    resetOpenSignIn,\r\n} from './authSlice';\r\nimport { selectGroupId,setGroupId } from '../group/groupSlice';\r\nimport { resetBackUrl, selectBackUrl } from '../home/homeSlice';\r\n\r\nconst Login:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [falseLogin,setfalseLogin]=useState(false);\r\n    const history = useHistory();\r\n    const backurl=useSelector(selectBackUrl);\r\n    const groupid =useSelector(selectGroupId);\r\n    const [isloginloading,setIsLoginLoading]=useState(false);\r\n    return (\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\"}}\r\n\r\n                onSubmit={async (values) => {\r\n                    setIsLoginLoading(true);\r\n                    const result = await dispatch(fetchAsyncLogin(values));\r\n                    if (fetchAsyncLogin.fulfilled.match(result)) {\r\n                        if(result.payload.detail!==\"No active account found with the given credentials\"){\r\n                            const login=await dispatch(fetchAsyncGetMyProf());\r\n                            if(login.payload.length===0){\r\n                                await dispatch(fetchAsyncCreateProf({ nickName: \"no name\"}));\r\n                            }\r\n                            if(groupid == \"\"){\r\n                                setIsLoginLoading(false);\r\n                                history.push('/home');\r\n                            }else{\r\n                                setIsLoginLoading(false);\r\n                                history.push(`/group/${groupid}`);\r\n                                dispatch(setGroupId(\"\"));\r\n                            }\r\n                        }else{\r\n                            //有効化されていない\r\n                            values.email=\"\";\r\n                            values.password=\"\";\r\n                            setfalseLogin(true);\r\n                            setIsLoginLoading(false);\r\n                        }\r\n                    }else{\r\n                        //fetch失敗\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                        setfalseLogin(true);\r\n                        setIsLoginLoading(false);\r\n                    } \r\n                    \r\n                }}\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email(\"メールアドレスのフォーマットが不正です。\")\r\n                    .required(\"メールアドレスは必須です。\"),\r\n                password: Yup.string().required(\"パスワードは必須です。\").min(4),\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    <div className=\"auth_login_main_container\">\r\n                        {/* <div className=\"css_styles.auth_progress\">\r\n                            {isLoadingAuth && <CircularProgress />}\r\n                        </div> */}\r\n                        {falseLogin?<p className={styles.login_failure_p}>ログインに失敗しました</p>:null}\r\n                        <div className=\"\">\r\n                            <h2 className={styles.login_signup_h2}>ログイン</h2>\r\n                        </div>\r\n                        {isloginloading &&<CircularProgress/>}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div >\r\n                                <TextField\r\n                                    className={styles.textfield}\r\n                                    placeholder=\"  email\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                    fullWidth\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                <div >{errors.email}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    className={styles.textfield}\r\n                                    placeholder=\"  password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    fullWidth\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                <div >{errors.password}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                \r\n                                <div className=\"\">\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">ログイン</Button>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <span className={styles.switch_login_signup_btn} onClick={async () => {\r\n                                            dispatch(resetOpenSignIn());              \r\n                                        }}>\r\n                                            アカウントをお持ちでない方はこちら\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <Link to='/password/reset' className={styles.link_border}>\r\n                                            <span className={styles.switch_login_signup_btn}>パスワードをお忘れですか？</span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport styles from './Auth.module.css';\r\nconst WhatIs:React.FC = () => {\r\n    return (\r\n        <>\r\n        <div className={styles.auth_what_container}>\r\n            <div className={styles.auth_what}>\r\n                <h2 className={styles.auth_what_h2}>グループ麻雀レコードとは</h2>\r\n            </div>\r\n            <p className={styles.auth_what_p}>グループを作成してグループごとに麻雀の成績を管理することができます。</p>\r\n            <p className={styles.auth_what_p}>グループ数に上限はないため何個でもグループを作成、参加することができます。</p>\r\n            <p className={styles.auth_what_p}>グループごとに麻雀の結果によるレートが存在します。</p>\r\n            <p className={styles.auth_what_p}>そのためグループ内で誰が一番勝っているか一目瞭然！</p>\r\n            <p className={styles.auth_what_p}>麻雀の成績は累計、1日、1週間、と好きな区間で集計結果を表示できます。</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WhatIs\r\n","export default __webpack_public_path__ + \"static/media/home.62c4063f.jpg\";","export default __webpack_public_path__ + \"static/media/grouphome.ecc8c5d2.jpg\";","export default __webpack_public_path__ + \"static/media/mahjong.b672d188.jpg\";","export default __webpack_public_path__ + \"static/media/battle.64b36da2.jpg\";","export default __webpack_public_path__ + \"static/media/profiledetail.c7baf832.jpg\";","export default __webpack_public_path__ + \"static/media/recode.42fd27bf.jpg\";","export default __webpack_public_path__ + \"static/media/editrecode.59e0fc17.jpg\";","export default __webpack_public_path__ + \"static/media/setting.2d0603b3.jpg\";","import React from 'react'\r\nimport styles from './Auth.module.css';\r\nimport home from '../img/home.jpg';\r\nimport grouphome from '../img/grouphome.jpg';\r\nimport mahjong from '../img/mahjong.jpg';\r\nimport battle from '../img/battle.jpg';\r\nimport member from '../img/profiledetail.jpg';\r\nimport recode from '../img/recode.jpg';\r\nimport editrecode from '../img/editrecode.jpg';\r\nimport setting from '../img/setting.jpg';\r\nconst HowToUse:React.FC = () => {\r\n    return (\r\n        <>\r\n            <div className={styles.auth_what_container}>\r\n            <div className={styles.auth_how_to}>\r\n                <h2 className={styles.auth_how_to_h2}>使い方</h2>\r\n            </div>\r\n            <div className={styles.auth_how_to_container}>\r\n                <div className={styles.auth_how_to_body}>\r\n                    <div>\r\n                        <p className={styles.how_to_p}>1. ログイン又はアカウントを作成します</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className={styles.how_to_p}>2. グループを作成します。</p>\r\n                        <p className={styles.how_to_p_2}>作成せずに友人などからの招待でグループに参加することも可能です。</p>\r\n                        <p className={styles.how_to_p_2}>グループは何個でも作成、参加できます。</p>\r\n                        <img src={home} className={styles.how_to_image_login} alt=\"img\"/>\r\n                    </div>\r\n                    <div>\r\n                        <p className={styles.how_to_p}>3. グループのホームに移動します</p>\r\n                        <p className={styles.how_to_p_2}>シェアボタンからグループをシェアできます。</p>\r\n                        <img src={grouphome} className={styles.how_to_image_login} alt=\"img\"/>\r\n                        <p className={styles.how_to_p}>グループホームでの各機能紹介</p>\r\n                        <div　className={styles.how_to_description_div}>\r\n                            <p className={styles.how_to_p_title}>3-1.対局</p>\r\n                            <img src={battle} className={styles.how_to_image_login} alt=\"img\"/>\r\n                            <p　className={styles.how_to_p_2}>対局ボタンを押すことで対局画面へと移行します。</p>\r\n                            <p　className={styles.how_to_p_2}>対局者4人を選択します。この際選択順で東南西北が決定します。</p>\r\n                            <p　className={styles.how_to_p_2}>合計得点が100000点になるように入力することで記録できます。</p>\r\n                            <p　className={styles.how_to_p_2}>ウマは5-10、10-20、10-30から選択します。</p>\r\n                        </div>\r\n                        <div　className={styles.how_to_description_div}>\r\n                            <p className={styles.how_to_p_title}>3-2.メンバー</p>\r\n                            <img src={member} className={styles.how_to_image_login} alt=\"img\"/>\r\n                            <p　className={styles.how_to_p_2}>グループに参加しているメンバーが表示されます。</p>\r\n                            <p　className={styles.how_to_p_2}>アイコンをクリックすることでメンバーごとの成績が表示できます。</p>\r\n                        </div>\r\n                        <div　className={styles.how_to_description_div}>\r\n                            <p className={styles.how_to_p_title}>3-3.対局記録</p>\r\n                            <img src={recode} width=\"340px\" alt=\"img\"/>\r\n                            <p　className={styles.how_to_p_2}>対局記録を表示します。</p>\r\n                            <p　className={styles.how_to_p_2}>日付を選択することで表示したい記録の区間を選択できます。</p>\r\n                            <p　className={styles.how_to_p_2}>日付を選択するしていない場合すべての累計が表示されます。</p>\r\n                            <img src={editrecode} className={styles.how_to_image_login} alt=\"img\"/>\r\n                            <p　className={styles.how_to_p_2}>対局記録を選択することで記録の編集・削除を行えます。</p>\r\n                            <p　className={styles.how_to_p_2}>編集画面では得点の合計が0になるようにしてください。</p>\r\n                        </div>\r\n                        <div　className={styles.how_to_description_div}>\r\n                            <p className={styles.how_to_p_title}>3-4.設定</p>\r\n                            <img src={setting} className={styles.how_to_image_login} alt=\"img\"/>\r\n                            <p　className={styles.how_to_p_2}>設定モーダルを開きます。</p>\r\n                            <p　className={styles.how_to_p_2}>画像、名前、紹介文、パスワードを変更できます。</p>\r\n                            <p　className={styles.how_to_p_2}>名前、パスワードは30文字、紹介文は200文字まで設定できます。</p>\r\n                            <p　className={styles.how_to_p_2}>グループを抜けるをクリックするとグループを抜けることができます。グループを抜けてもデータは残るので再度グループに参加することで引き続き記録できます。</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p className={styles.how_to_p}>4. ルールとマナーを守って楽しく対局しよう!!</p>\r\n                        <img src={mahjong} className={styles.how_to_image_login}alt=\"img\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div>\r\n                        <p className={styles.how_to_p_3}>※オカ(トップ賞)は+20です。</p>\r\n                        <p className={styles.how_to_p_3}>※レートの初期値は1500です。</p>\r\n                        <p className={styles.how_to_p_3}>※ヘッダーのユーザーアイコンでユーザー名等の変更が行えます。</p>\r\n                        <p className={styles.how_to_p_3}>※ヘッダーのユーザーアイコンからログアウトできます。</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HowToUse\r\n","import React, {  useState } from 'react'\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { selectOpenSignIn,} from './authSlice';\r\nimport SignUp from './SignUp';\r\nimport Login from './Login';\r\nimport styles from './Auth.module.css';\r\nimport img from '../img/fish_shark.png';\r\nimport titlelogo from '../img/title_logo.jpg'\r\nimport WhatIs from './WhatIs';\r\nimport HowToUse from './HowToUse';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst Auth:React.FC = () => {\r\n    const openSignIn = useSelector(selectOpenSignIn); \r\n    const [openhowto,setHowTo]=useState<boolean>(false);\r\n    const location = useLocation();\r\n    \r\n\r\n    return (\r\n        <>  \r\n            {localStorage.localJWT && location.pathname==='/'? null:\r\n            <div className={styles.auth_container}>\r\n                <div className={styles.auth_body}>\r\n                    <div className={styles.auth_body_header_img}>\r\n                        <div className={styles.auth_body_header}>\r\n                            <br/>\r\n                            <br/>\r\n                            <h1 className={styles.auth_title_h1}>グループ麻雀レコード</h1>\r\n                            <p className={styles.auth_title_p}>グループごとに麻雀の成績を管理</p>\r\n                        </div>\r\n                        <div className={styles.auth_login_signup_container}>\r\n                            <div className={styles.auth_login_signup}>\r\n                                {!openSignIn\r\n                                ?<>\r\n                                    {/* サインアップ */}\r\n                                    <SignUp/>\r\n                                </>\r\n                                :<> \r\n                                    {/* サインイン  */}\r\n                                    <Login/>\r\n                                </>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={styles.auth_description_container}>\r\n                        <div className={styles.auth_description_body}>\r\n                            <div className={styles.auth_description_btn_div}>\r\n                                <button className={styles.auth_description_btn} onClick={()=>{setHowTo(false)}}>\r\n                                    {!openhowto?\r\n                                        <h2 className={styles.auth_description_btn_h2_underline}>What is</h2>\r\n                                    :   <h2 className={styles.auth_description_btn_h2}>What is</h2>}\r\n                                </button>\r\n                            </div>\r\n                            <div className={styles.auth_description_btn_div}>\r\n                                <button className={styles.auth_description_btn} onClick={()=>{setHowTo(true)}}>\r\n                                    {openhowto?\r\n                                        <h2 className={styles.auth_description_btn_h2_underline}>How to use</h2>\r\n                                    :   <h2 className={styles.auth_description_btn_h2}>How to use</h2>}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!openhowto?\r\n                        <WhatIs/>\r\n                    :\r\n                        <HowToUse/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Auth_done:React.FC = () => {\r\n    return (\r\n        <div>\r\n            メールを送信しました。メールより本登録をお願いします。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth_done\r\n","import { Formik } from 'formik';\r\nimport React from 'react'\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button,TextField } from '@material-ui/core';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncPasswordConfirm } from './authSlice';\r\n\r\nconst PasswordConfirm:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ uid: string,token:string }>();\r\n    return (\r\n        <div className={styles.password_reset_container}>\r\n            <div className={styles.password_reset_body}>\r\n                <h3 className={styles.password_reset_h3}>新しいパスワードを入力</h3>\r\n                <p className={styles.password_reset_p}>新しいパスワードを入力してください。</p>\r\n                <p className={styles.password_reset_p}>パスワードは8文字以上です。</p>\r\n            <Formik\r\n                    initialErrors={{ password1: \"required\" }}\r\n                    initialValues={{ password1: \"\",password2:\"\"}}\r\n                    onSubmit={async (values) => {\r\n                        if(values.password1===values.password2){\r\n                            const packet={new_password1:values.password1,new_password2:values.password2,uid:params.uid,token:params.token};\r\n                            await dispatch(fetchAsyncPasswordConfirm(packet));\r\n                        }\r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        password1: Yup.string().required(\"パスワードは必須です。\").min(8),\r\n                        password2:Yup.string().required(\"確認パスワードは必須です。\").oneOf([Yup.ref(\"password1\"), null], \"Passwords must match\")\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"パスワード\"\r\n                                        placeholder=\"パスワード\"\r\n                                        type=\"password\"\r\n                                        name=\"password1\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password1}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.password1 && errors.password1 ? (\r\n                                        <div >{errors.password1}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"確認パスワード\"\r\n                                        placeholder=\"確認パスワード\"\r\n                                        type=\"password\"\r\n                                        name=\"password2\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password2}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.password2 && errors.password2 ? (\r\n                                        <div >{errors.password2}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                            \r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n                <div className=\"\">\r\n                    <p className={styles.password_reset_btn} onClick={()=>{history.push('/')}}>\r\n                        ログイン画面へ\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordConfirm\r\n","import { Formik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button,TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncPasswordReset } from './authSlice';\r\nconst PasswordReset:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [sendemal,setSendEmail]=useState(false);\r\n    return (\r\n        <div className={styles.password_reset_container}>\r\n            <div className={styles.password_reset_body}>\r\n            {!sendemal?\r\n            <>\r\n            <h3 className={styles.password_reset_h3}>パスワード再設定</h3>\r\n            <p className={styles.password_reset_p}>登録したメールアドレスを入力してください。</p>\r\n            <p className={styles.password_reset_p}>パスワード再設定用のURLをメールに送信します。</p>\r\n            <Formik\r\n                    initialErrors={{ email: \"required\" }}\r\n                    initialValues={{ email: \"\"}}\r\n                    \r\n                    onSubmit={async (values) => {\r\n                        setSendEmail(true);\r\n                        const result= await dispatch(fetchAsyncPasswordReset({email:values.email}));\r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string()\r\n                                .email(\"メールアドレスが不正です。\")\r\n                                .required(\"メールアドレスは必須です。\"),\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"メールアドレス\"\r\n                                        placeholder=\"メールアドレス\"\r\n                                        type=\"input\"\r\n                                        name=\"email\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.email && errors.email ? (\r\n                                        <div >{errors.email}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                            \r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n                </>:\r\n                    <div>\r\n                        <h3 className={styles.password_reset_h3}>メールを送信しました。</h3>\r\n                    </div>\r\n                }\r\n                <div className=\"\">\r\n                    <p className={styles.password_reset_btn} onClick={()=>{history.push('/')}}>\r\n                        ログイン画面へ\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n","import { Avatar, TextField,} from '@material-ui/core';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGroup, selecGroup,fetchAsyncCreateGame,fetchAsyncPutRate, fetchAsyncCreateGameResults } from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport Modal from \"react-modal\";\r\n\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst Game:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const [openModal,setOpenModal]=useState(false);\r\n    const [score1,setScore1]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score2,setScore2]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score3,setScore3]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score4,setScore4]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [memts,setMemts]=useState<number[]>([]);\r\n    const [uma, setUma] = useState('5-10');\r\n    \r\n    let ratelist:{\r\n        rate_id: number;\r\n        group_id: number;\r\n        user_id: number;\r\n        rate: number;\r\n    }[]=[]\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGroup(params.id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n    \r\n    const setUserId=(id:number):void=>{\r\n        if(!memts.includes(id)){\r\n            setMemts([\r\n                ...memts,\r\n                id,\r\n            ]);\r\n        }else{\r\n            setMemts(memts.filter((i) => i !== id));\r\n        }\r\n    }\r\n    //選択したメンバーのプロフィール\r\n    const memberprofile=memts.map((m)=>{\r\n         return groupmember.filter((gr)=>{\r\n            return gr.userProfile===m;\r\n        })[0]\r\n    })\r\n\r\n    const newGame = async (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        setOpenModal(true);\r\n    };\r\n    //スコア計算\r\n    function culcScore(ranklist:{id:number,score:number}[]):{id:number,score:number,rank:number}[]{\r\n        let score:{id:number,score:number,rank:number}[]=[]\r\n        ratelist=[]\r\n        let i=1;\r\n        ranklist.forEach((rank)=>{\r\n            let culcscore:number=0\r\n            if(rank.score>=0){\r\n                let cscore=(rank.score+400)/1000;\r\n                cscore=Math.floor(cscore);\r\n                culcscore=cscore-30;\r\n            }else{\r\n                let cscore=(rank.score-400)/1000;\r\n                cscore=Math.ceil(cscore);\r\n                culcscore=cscore-30;\r\n            }\r\n            // ウマの計算\r\n            if(uma===\"5-10\"){\r\n                if(i===1){culcscore=culcscore+20+10;}\r\n                if(i===2){culcscore=culcscore+5;}\r\n                if(i===3){culcscore=culcscore-5;}\r\n                if(i===4){culcscore=culcscore-10};\r\n            }else if(uma===\"10-20\"){\r\n                if(i===1){culcscore=culcscore+20+20;}\r\n                if(i===2){culcscore=culcscore+10;}\r\n                if(i===3){culcscore=culcscore-10;}\r\n                if(i===4){culcscore=culcscore-20};\r\n            }else if(uma===\"10-30\"){\r\n                if(i===1){culcscore=culcscore+20+30;}\r\n                if(i===2){culcscore=culcscore+10;}\r\n                if(i===3){culcscore=culcscore-10;}\r\n                if(i===4){culcscore=culcscore-30};\r\n            }\r\n\r\n            let r:{id:number,score:number,rank:number}={id:rank.id,score:culcscore,rank:i}\r\n            i=i+1;\r\n            score.push(r);\r\n            //レート計算\r\n            const profile=memberprofile.filter((pro)=>{\r\n                return pro.userProfile===rank.id\r\n            })[0]\r\n            const rate={rate_id:profile.rate_id,group_id:profile.group_id,user_id:profile.user_id,rate:profile.rate}\r\n            ratelist.push(rate)\r\n        });\r\n        //点数調整\r\n        let scoresum=score[1].score+score[2].score+score[3].score;\r\n        if(scoresum+score[0].score!==0){\r\n            score[0].score=0-scoresum;\r\n        }\r\n        return score;\r\n    }\r\n\r\n    const recodeScore=async(e:React.MouseEvent<HTMLElement>)=>{\r\n        e.preventDefault();\r\n        let ranklist:{id:number,score:number}[]=[]\r\n        if(score1.score+score2.score+score3.score+score4.score===100000){\r\n            ranklist.push(score1,score2,score3,score4);\r\n            ranklist.sort(function(a, b) {\r\n                let comp=0;\r\n                if (a.score < b.score) {\r\n                    comp= 1;\r\n                } else if(a.score>b.score){\r\n                    comp= -1;\r\n                }\r\n                return comp;\r\n             });\r\n\r\n            let score=culcScore(ranklist);//計算済みのスコア\r\n \r\n            //レート計算\r\n            if(ratelist.length===4){\r\n                let ratesum=0;\r\n                ratelist.forEach((r)=>{\r\n                    ratesum+=r.rate;\r\n                })\r\n                let rateave=Math.round(ratesum/4);\r\n                let i=1;\r\n                ratelist.forEach((r)=>{\r\n                    if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                    i+=1;\r\n                });\r\n                ratelist.map(async(r)=>{\r\n                    await dispatch(fetchAsyncPutRate(r));\r\n                });\r\n            };\r\n            //ゲームを作る\r\n            const packet={group_id:params.id};\r\n            const results=await dispatch(fetchAsyncCreateGame(packet));\r\n            if(fetchAsyncCreateGame.fulfilled.match(results)){\r\n                score.map(async(s)=>{\r\n                    const resultspacket={game_id:results.payload.id,user_id:s.id,rank:s.rank,score:s.score}\r\n                    await dispatch(fetchAsyncCreateGameResults(resultspacket));\r\n                })\r\n            }\r\n            setOpenModal(false);\r\n            history.push(`/group/${params.id}`)\r\n        };\r\n    }\r\n    return (\r\n        <>  \r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.game_main_container}>\r\n                <div className={styles.game_main_body}>\r\n                    <div className={styles.page_title_select_member}>\r\n                        <h2 className={styles.group_title_h2}>対局者を選択</h2>\r\n                        <p>東→南→西→北の席順で選択してください。</p>\r\n                    </div>\r\n                    <div className={styles.game_container}>        \r\n                        {groupmember.map((member)=>(\r\n                            member.is_active &&\r\n                                <div key={member.id} >\r\n                                    <Button  onClick={()=>setUserId(member.userProfile)} className={styles.game_user_btn}>\r\n                                        <div className={styles.game_body}>\r\n                                            {!memts.includes(member.userProfile)\r\n                                            ?\r\n                                                <div>\r\n                                                    <div className={styles.game_avater}>\r\n                                                        {member.img!==\"\"?\r\n                                                        <Avatar alt=\"who?\" src={member.img} style={{height:'70px',width:'70px'}}/>\r\n                                                        :null}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {member.nickName}\r\n                                                        <br/>\r\n                                                        {member.rate}\r\n                                                    </div>\r\n                                                </div>\r\n                                            :\r\n                                                <div className={styles.game_selected_profile}>\r\n                                                    <div className={styles.game_avater}>\r\n                                                        {member.img!==\"\"?\r\n                                                        <Avatar alt=\"who?\" src={member.img} style={{height:'70px',width:'70px'}}/>\r\n                                                        :null}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {member.nickName}\r\n                                                        <br/>\r\n                                                        {member.rate}\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </Button>\r\n                                </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.game_start_btn}>\r\n                        <Button\r\n                            disabled={memts.length!==4}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={newGame}\r\n                        >\r\n                            対局開始\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                    setMemts([]);\r\n                    setScore1({id:0,score:0})\r\n                    setScore2({id:0,score:0})\r\n                    setScore3({id:0,score:0})\r\n                    setScore4({id:0,score:0})\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <h2>対局結果</h2>\r\n                {/* {startLoad && <CircularProgress/>} */}\r\n                {memberprofile.length===4?\r\n                    <div>\r\n                        <div>\r\n                            東: {memberprofile[0].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                onChange={(e) => setScore1({id:memberprofile[0].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            南: {memberprofile[1].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                onChange={(e) => setScore2({id:memberprofile[1].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            西: {memberprofile[2].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                onChange={(e) => setScore3({id:memberprofile[2].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            北: {memberprofile[3].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                onChange={(e) => setScore4({id:memberprofile[3].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <div> \r\n                    </div>\r\n                }\r\n                <div>\r\n                    <p>合計:{score1.score+score2.score+score3.score+score4.score}</p>\r\n                    <div className={styles.match_radio_box_container}>\r\n                        <span>ウマ：</span>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"5-10\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '5-10'}\r\n                            />\r\n                            5-10\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"10-20\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '10-20'}\r\n                            />\r\n                            10-20\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"10-30\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '10-30'}\r\n                            />\r\n                            10-30\r\n                        </label>\r\n                    </div>\r\n                    <div className={styles.game_start_btn}>\r\n                        <Button\r\n                            disabled={score1.score+score2.score+score3.score+score4.score!==100000}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={recodeScore}\r\n                        >\r\n                            記録\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Game\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { PROPS_GAME_RESULTS } from '../types'\r\nimport { fetchAsyncDeleteGame, fetchAsyncEditGameResults, fetchAsyncGetGameResults, fetchAsyncPutRate, selecGroup, selectGameResults } from './groupSlice';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport styles from \"./Group.module.css\";\r\nimport { Button,TableRow, TextField } from '@material-ui/core';\r\nimport Modal from \"react-modal\";\r\n\r\nconst GameResults:React.FC<PROPS_GAME_RESULTS> = (gameresults) => {\r\n    const params = useParams<{ id: string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    let results=gameresults.results;\r\n    const [openModal,setOpenModal]=useState(false);\r\n    const [opendeleteresults,setOpenDeleteResults]=useState(false);\r\n    const created_at=gameresults.created_at.slice(0,10);\r\n    const allgameresults=useSelector(selectGameResults);\r\n    const [score1,setScore1]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score2,setScore2]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score3,setScore3]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score4,setScore4]=useState<{id:number,score:number}>({id:0,score:0});\r\n    \r\n    function rateInfo(){\r\n        let rateinfo:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n        groupmember.forEach((gm)=>{\r\n            const rate={rate_id:gm.rate_id,group_id:gm.group_id,user_id:gm.user_id,rate:1500}\r\n            rateinfo.push(rate)\r\n        })\r\n        return rateinfo\r\n    }\r\n    const deletegame=async(id:number)=>{\r\n        let rate=rateInfo()//1500に初期化\r\n        //レート更新\r\n        allgameresults.forEach((all)=>{\r\n            let gameRate:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n            let ratesum=0;\r\n            \r\n            all.results.forEach((ar)=>{\r\n                if(ar.game_id!==id){\r\n                    const rm=rate.filter((r)=>{\r\n                        return r.user_id===ar.user_id\r\n                    })[0];\r\n                    ratesum+=rm.rate;\r\n                    gameRate.push(rm);\r\n                }\r\n            })\r\n            \r\n            if(gameRate.length!==0){\r\n                let rateave=Math.round(ratesum/4);//レートの平均\r\n                //レート更新\r\n                let i=1;\r\n                gameRate.forEach((r)=>{\r\n                    if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                    i+=1;\r\n                });\r\n            }\r\n        })\r\n        rate.map(async(r)=>{\r\n                await dispatch(fetchAsyncPutRate(r));\r\n        });\r\n        const result=await dispatch(fetchAsyncDeleteGame(id));\r\n        if(fetchAsyncDeleteGame.fulfilled.match(result)){\r\n            setScore1({id:0,score:0});\r\n            setScore2({id:0,score:0});\r\n            setScore3({id:0,score:0});\r\n            setScore4({id:0,score:0});\r\n        }\r\n        setOpenModal(false);\r\n        setOpenDeleteResults(false);\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    const editGame=async()=>{\r\n        let score:{id:number,score:number}[]=[]\r\n        score.push(score1,score2,score3,score4);\r\n        score.sort(function(a, b) {\r\n            let comp=0;\r\n            if (a.score < b.score) {\r\n                comp= 1;\r\n            } else if(a.score>b.score){\r\n                comp= -1;\r\n            }\r\n            return comp;\r\n         });\r\n        let editscore:{id:number,score:number,rank:number}[]=[]\r\n        let i=1;\r\n        score.forEach((s)=>{\r\n            let es={id:s.id,score:s.score,rank:i}\r\n            editscore.push(es);\r\n            i+=1;\r\n        });\r\n        editscore.map(async(edits)=>{\r\n            await dispatch(fetchAsyncEditGameResults(edits));\r\n        });\r\n        await dispatch(fetchAsyncGetGameResults(params.id));\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const modalStyle={\r\n        overlay: {\r\n            background: 'rgba(0, 0, 0, 0.2)',\r\n            zIndex:2,\r\n          },\r\n        content: {   \r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          backgroundColor: 'white',\r\n          width: 260,\r\n          height: 460,\r\n          transform: \"translate(-50%, -50%)\",\r\n          },\r\n    };\r\n    const modalStyle2={\r\n        overlay: {\r\n            background: 'rgba(0, 0, 0, 0.2)',\r\n            zIndex:6,\r\n          },\r\n        content: {  \r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          backgroundColor: 'white',\r\n          width: 280,\r\n          height: 130,\r\n          transform: \"translate(-50%, -50%)\",\r\n          },\r\n    };\r\n    function setcss(score:number){\r\n        if(score>=0){\r\n            return styles.results_table_p_blue\r\n        }else{\r\n            return styles.results_table_p_red\r\n        }\r\n    }\r\n\r\n    const openConfirmModal=()=>{\r\n        setOpenDeleteResults(true);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <TableRow key={gameresults.id+gameresults.group_id} onClick={()=>{\r\n                    setOpenModal(true)\r\n                    setScore1({id:results[0].id,score:results[0].score});\r\n                    setScore2({id:results[1].id,score:results[1].score});\r\n                    setScore3({id:results[2].id,score:results[2].score});\r\n                    setScore4({id:results[3].id,score:results[3].score});\r\n                }} className={styles.gameresult_container}>\r\n                <TableCell  >{created_at}</TableCell>\r\n                {results.map((result)=>(\r\n                    <TableCell component=\"th\" scope=\"row\" key={result.id} >\r\n                        <p className={setcss(result.score)}>{result.score} </p>\r\n                        <p className={styles.results_table_p}>{result.profile.nickName}</p>\r\n                    </TableCell> \r\n                ))}\r\n            </TableRow>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <h2>記録編集</h2>\r\n                    <div>\r\n                        {results.length===4?\r\n                        <>\r\n                            <div>\r\n                                {results[0].profile.nickName}\r\n                                <br/>\r\n                                <TextField\r\n                                    placeholder=\"点数\"\r\n                                    type=\"number\"\r\n                                    defaultValue={results[0].score}\r\n                                    onChange={(e) => setScore1({id:results[0].id,score:Number(e.target.value)})}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {results[1].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[1].score}\r\n                                        onChange={(e) => setScore2({id:results[1].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                            <div>\r\n                                {results[2].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[2].score}\r\n                                        onChange={(e) => setScore3({id:results[2].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                            <div>\r\n                                {results[3].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[3].score}\r\n                                        onChange={(e) => setScore4({id:results[3].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                        </>\r\n                    :null}\r\n                    </div>\r\n                <div>\r\n                    <p>合計:{score1.score+score2.score+score3.score+score4.score}</p>\r\n                    <div className={styles.gameresults_btn_container}>\r\n                        <Button\r\n                            disabled={score1.score+score2.score+score3.score+score4.score!==0}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{editGame()}}\r\n                        >\r\n                            記録\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            //onClick={()=>{deletegame(results[0].game_id)}}\r\n                            onClick={()=>{openConfirmModal()}}\r\n                        >\r\n                            削除\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={opendeleteresults}\r\n                onRequestClose={()=>{\r\n                    setOpenDeleteResults(false);\r\n                }}\r\n                style={modalStyle2}\r\n                ariaHideApp={false}\r\n            >\r\n                <div>\r\n                    <p className={styles.leavegroup_p}>本当に記録を削除しますか？</p>\r\n                </div>\r\n                <div className={styles.leavegroup_container}>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\" color=\"secondary\"\r\n                            onClick={()=>{deletegame(results[0].game_id)}}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{setOpenDeleteResults(false)}}\r\n                        >\r\n                            キャンセル\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameResults\r\n","import {Button, IconButton, Slider } from '@material-ui/core'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport Cropper from 'react-easy-crop'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch } from '../../app/store'\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport styles from \"../home/Home.module.css\";\r\nimport { fetchAsyncUpdateGroupImage, resetOpenGroupImageTrimming, selecGroup, selectOpenGroupImageTrimming } from './groupSlice';\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:100,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 480,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupImageTrimming:React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const isopengroupimagetrimming=useSelector(selectOpenGroupImageTrimming);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const group=useSelector(selecGroup);\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, []);\r\n\r\n  const [src, setSrc] = useState<any>(null);  \r\n\r\n  const onSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== null) {\r\n        if(event.target.files.length!==0){\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () =>{\r\n                setSrc(reader.result);\r\n            });\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n  }; \r\n//トリミング\r\nconst createImage = (url: string) =>\r\n  new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\nconst getCroppedImg=async(imageSrc: any, pixelCrop: { width: number; height: number; x: number; y: number; }|null)=>{\r\n    const image = await createImage(imageSrc)\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    if(pixelCrop!==null){\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        if(ctx !== null){\r\n            ctx.drawImage(\r\n                image,\r\n                pixelCrop.x * scaleX,\r\n                pixelCrop.y * scaleY,\r\n                pixelCrop.width * scaleX,\r\n                pixelCrop.height * scaleY,\r\n                0,\r\n                0,\r\n                pixelCrop.width,\r\n                pixelCrop.height\r\n            );\r\n        }\r\n    }\r\n    return new Promise((resolve, reject)=>{\r\n        canvas.toBlob((blob) => {\r\n            if (!blob) {\r\n                return;\r\n            }\r\n            resolve(blob)\r\n        }, \"image/jpeg\");\r\n    });\r\n}\r\n\r\nasync function updateImage(croppedImage:any){\r\n    const name:string=String(group.id)+String(Date.now())+\".jpg\";\r\n    if(createImage!==null){\r\n        const newImage=new File([croppedImage],name,{type:\"image/jpg\",lastModified:Date.now()});\r\n        const packet = { id: group.id,title:group.title,text:group.text,password:group.password,img: newImage,name:name,};\r\n        const results=await dispatch(fetchAsyncUpdateGroupImage(packet)); \r\n        if(fetchAsyncUpdateGroupImage.fulfilled.match(results)){\r\n            dispatch(resetOpenGroupImageTrimming());\r\n        }\r\n    }  \r\n};\r\n\r\nasync function showCroppedImage(){\r\n    const croppedImage =  await getCroppedImg(\r\n        src,\r\n        croppedAreaPixels,\r\n    )\r\n    await updateImage(croppedImage);\r\n};\r\n\r\nconst handlerEditPicture = () => {\r\n    const fileInput = document.getElementById(\"editInputImage\");\r\n    fileInput?.click();\r\n};\r\n  \r\n  return (\r\n        <Modal\r\n            isOpen={isopengroupimagetrimming}\r\n            onRequestClose={async () => {\r\n                dispatch(resetOpenGroupImageTrimming());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div className={styles.image_trimming_container}>\r\n                <div className={styles.image_trimming_body}>\r\n                    <Cropper\r\n                    image={src}\r\n                    crop={crop}\r\n                    zoom={zoom}\r\n                    aspect={1.75 / 1}\r\n                    onCropChange={setCrop}\r\n                    onCropComplete={onCropComplete}\r\n                    onZoomChange={setZoom}\r\n                    />\r\n                    <div className={styles.image_tring_select}>\r\n                        <input type=\"file\" id=\"editInputImage\" className={styles.profile_image_icon_input}\r\n                            accept=\".jpg,.gif,.png,image/gif,image/jpeg,image/png\"\r\n                            onChange={onSelectFile}\r\n                        />\r\n                        <IconButton onClick={handlerEditPicture}>\r\n                            <PhotoLibraryIcon /> 画像を選択\r\n                        </IconButton>    \r\n                        <Button\r\n                            // disabled={!profile?.nickName}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={showCroppedImage}\r\n                        >\r\n                        適応\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.image_slider}>\r\n                        <Slider\r\n                            value={zoom}\r\n                            min={1}\r\n                            max={4}\r\n                            step={0.1}\r\n                            aria-labelledby=\"Zoom\"\r\n                            onChange={(e,zoom) => {\r\n                                let z=Number(zoom)\r\n                                setZoom(z)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupImageTrimming\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAsyncRateIsActive, fetchAsyncUpdateGroup, resetOpenSettings, selecGroup, selectOpenSettings, setOpenGroupImageTrimming } from './groupSlice';\r\nimport { Button, IconButton, TextField } from '@material-ui/core';\r\nimport GroupImageTrimming from './GroupImageTrimming';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport { selectLoginUserProfile } from '../auth/authSlice';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styles from \"./Group.module.css\";\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:4,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 520,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst modalStyle2={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:6,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 280,\r\n      height: 180,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupSettings:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const isopensettings=useSelector(selectOpenSettings);\r\n    const group=useSelector(selecGroup);\r\n    const [title,setTitle]=useState(\"\");\r\n    const [text,setText]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [openleavegroup,setOpenLeaveGroup]=useState(false);\r\n    const groupmember=group.profile;\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    \r\n    const updateGroup = async () => {\r\n        let updateTitle=title;\r\n        let updateText=text;\r\n        let updatePassword=password;\r\n        if(updateTitle===\"\"){updateTitle=group.title}\r\n        if(updateText===\"\"){updateText=group.text}\r\n        if(updatePassword===\"\"){updatePassword=group.password}\r\n        const packet = { id: group.id, title:updateTitle,text:updateText,password:updatePassword};\r\n        await dispatch(fetchAsyncUpdateGroup(packet));   \r\n        dispatch(resetOpenSettings());\r\n    };\r\n\r\n    const openConfirmModal=()=>{\r\n        setOpenLeaveGroup(true);\r\n    }\r\n\r\n    const leaveGroup=async()=>{\r\n        let rate_id:number=0;\r\n            groupmember.forEach((gm)=>{\r\n                if(gm.userProfile===loginuserprofile.userProfile){\r\n                    rate_id=gm.rate_id\r\n                }\r\n            })\r\n        const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:false}\r\n        const results=await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n        if(fetchAsyncRateIsActive.fulfilled.match(results)){\r\n            dispatch(resetOpenSettings());\r\n            history.push('/home');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isopensettings}\r\n                onRequestClose={()=>{\r\n                    dispatch(resetOpenSettings());\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >   \r\n                {group.img!==null?\r\n                    <img src={group.img} onClick={()=>{dispatch(setOpenGroupImageTrimming())}} width=\"250px\" height=\"auto\" className={styles.groupsetting_modal_img} alt=\"setting_img\"/>\r\n                :\r\n                <IconButton onClick={()=>{dispatch(setOpenGroupImageTrimming())}}>\r\n                    <PhotoLibraryIcon /> 画像を選択\r\n                </IconButton>}\r\n                <GroupImageTrimming/>\r\n                <br/>\r\n                <br/>\r\n                <div>\r\n                    <TextField placeholder=\"名前\" type=\"text\" defaultValue={group.title} label=\"グループ名\" \r\n                        helperText={`${title.length}/30`}\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=30){\r\n                                setTitle(e.target.value)\r\n                            }\r\n                        }}/>\r\n                </div>\r\n                    <TextField placeholder=\"紹介\" type=\"text\" defaultValue={group.text} multiline fullWidth label=\"紹介\"\r\n                        helperText={`${text.length}/200`}\r\n                        onChange={(event) => {\r\n                            if(event.target.value.length<=199){\r\n                                setText(event.target.value)\r\n                            }\r\n                        }}/>\r\n                <br />\r\n                <br />\r\n                    <TextField placeholder=\"パスワード\" type=\"text\" defaultValue={group.password} multiline fullWidth label=\"パスワード\"\r\n                        onChange={(event) => {\r\n                            if(event.target.value.length<=199){\r\n                                setPassword(event.target.value)\r\n                            }\r\n                        }}/>\r\n                <br />\r\n                <div className={styles.groupsetting_btn}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={updateGroup}\r\n                    >\r\n                        更新\r\n                    </Button>\r\n                </div>\r\n                <br/>\r\n                <p\r\n                    onClick={()=>{openConfirmModal()}}\r\n                    className={styles.leavegroup}\r\n                >\r\n                    グループから抜ける\r\n                </p>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={openleavegroup}\r\n                onRequestClose={()=>{\r\n                    setOpenLeaveGroup(false);\r\n                }}\r\n                style={modalStyle2}\r\n                ariaHideApp={false}\r\n            >\r\n                <div>\r\n                    <p className={styles.leavegroup_p}>本当にグループを抜けますか？</p>\r\n                    <p className={styles.leavegroup_p_c}> ※ グループを抜けても対局記録は消えません</p>\r\n                </div>\r\n                <div className={styles.leavegroup_container}>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\" color=\"secondary\"\r\n                            onClick={()=>{leaveGroup()}}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{setOpenLeaveGroup(false)}}\r\n                        >\r\n                            キャンセル\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupSettings\r\n","export default __webpack_public_path__ + \"static/media/fish_shark.2115d784.png\";","import React,{useLayoutEffect,useState }  from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n    endLoad,\r\n    fetchAsyncCreateRate, \r\n    fetchAsyncGetGameResults, \r\n    fetchAsyncGetGroup,\r\n    fetchAsyncParticipationGroup,\r\n    fetchAsyncRateIsActive,selecGroup, \r\n    selectGameResults, \r\n    selectIsStartLoad, \r\n    setOpenSettings, \r\n    startLoad,\r\n    setGroupId,\r\n} from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nimport GameResults from './GameResults';\r\nimport { Button, CircularProgress, makeStyles, TextField,} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { fetchAsyncGetMyProf, selectLoginUserProfile } from '../auth/authSlice';\r\nimport { \r\n    FacebookShareButton, \r\n    FacebookIcon,\r\n    TwitterShareButton, \r\n    TwitterIcon,\r\n    LineShareButton,\r\n    LineIcon,\r\n    EmailShareButton,\r\n    EmailIcon,\r\n} from 'react-share'\r\nimport Modal from \"react-modal\";\r\nimport GroupSettings from './GroupSettings';\r\nimport groupImage from '../img/fish_shark.png';\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 150,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupHome:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const gameresults=useSelector(selectGameResults);\r\n    const isload=useSelector(selectIsStartLoad);\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const [istrue,setIsTrue]=useState(false);\r\n    const [password,setPassword]=useState(\"\");\r\n    const [isopenpasswordwindow,setIsOpenPasswordWindow]=useState(false);\r\n    const [notmatchpass,setNotMatchPass]=useState(false);\r\n    useLayoutEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            dispatch(startLoad())\r\n            if (localStorage.localJWT) {\r\n                const results=await dispatch(fetchAsyncGetGroup(params.id));\r\n                if(fetchAsyncGetGroup.fulfilled.match(results)){\r\n                    const member:{\r\n                        id: number;\r\n                        nickName: string;\r\n                        text: string;\r\n                        userProfile: number;\r\n                        created_on: string;\r\n                        img: string;\r\n                        rate_id: number;\r\n                        group_id: number;\r\n                        user_id: number;\r\n                        rate: number;\r\n                        is_active:boolean;\r\n                    }[]=results.payload.profile\r\n                    const profileresults=await dispatch(fetchAsyncGetMyProf());\r\n                    if(fetchAsyncGetMyProf.fulfilled.match(profileresults)){\r\n                        const profile: {\r\n                            id: number;\r\n                            nickName: string;\r\n                            text: string;\r\n                            userProfile: number;\r\n                            created_at: string;\r\n                            img: string;\r\n                        }=profileresults.payload;\r\n                        const isParti=member.map((m)=>{\r\n                            return (m.userProfile===profile.userProfile && m.is_active)\r\n                        })\r\n                        setIsTrue(isParti.includes(true))\r\n                    }\r\n                }\r\n                const res=await dispatch(fetchAsyncGetGameResults(params.id));\r\n                if(fetchAsyncGetGameResults.fulfilled.match(res)){\r\n                    dispatch(endLoad())\r\n                }\r\n            }else{\r\n                dispatch(setGroupId(params.id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n\r\n\r\n    //グループに参加\r\n    const participationGroup=async()=>{\r\n        if(group.password===\"\" || group.password===null){\r\n            let member:number[]=[]\r\n            let flag=true;\r\n            let rate_id=0;\r\n            groupmember.forEach((gm)=>{\r\n                member.push(gm.user_id);\r\n                if((!gm.is_active) && (gm.userProfile===loginuserprofile.userProfile)){\r\n                    flag=false;\r\n                    rate_id=gm.rate_id;\r\n                }\r\n            })\r\n            if(flag){\r\n                member.push(loginuserprofile.userProfile);\r\n                const pkt={id:group.id,userGroup:member}\r\n                const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n                if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                    const rate_pkt={group_id:group.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                    await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                }\r\n            }else{\r\n                const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n            }\r\n            setIsTrue(true);\r\n            \r\n        }else{\r\n            setIsOpenPasswordWindow(true);\r\n        }\r\n    }\r\n    const participationGroupWithPassword=async()=>{\r\n        if (password===group.password){\r\n            let member:number[]=[]\r\n            let flag=true;\r\n            let rate_id=0;\r\n            groupmember.forEach((gm)=>{\r\n                member.push(gm.userProfile);\r\n                if((!gm.is_active)&& (gm.userProfile===loginuserprofile.userProfile)){\r\n                    flag=false;\r\n                    rate_id=gm.rate_id;\r\n                }\r\n            })\r\n            if(flag){\r\n                member.push(loginuserprofile.userProfile);\r\n                const pkt={id:group.id,userGroup:member}\r\n                const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n                if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                    const rate_pkt={group_id:group.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                    await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                }\r\n            }else{\r\n                const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n            }\r\n            setIsTrue(true);\r\n            setNotMatchPass(false);\r\n            setPassword(\"\");\r\n            setIsOpenPasswordWindow(false);\r\n        }else{\r\n            setNotMatchPass(true);\r\n            setPassword(\"\");\r\n        }\r\n    }\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 300,\r\n            maxWidth:700,\r\n            background:'white',\r\n        },\r\n        });\r\n        const classes = useStyles();\r\n    return (\r\n        <>\r\n            <GroupSettings/>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/home/`)}>ホーム</Button>\r\n                <div className={styles.group_home_container}>\r\n                    <div className={styles.group_home_body_container}>\r\n                        <div className={styles.group_home_body_top}>\r\n                            <div  className={styles.group_home_body_top_groupinfo}>\r\n                                <div className={styles.group_home_body_top_groupinfo_container}>\r\n                                    <div className={styles.group_home_title}>\r\n                                        <h2 className={styles.group_title_h2}>{group.title}</h2>\r\n                                    </div>\r\n                                    <div>\r\n                                        {group.img!==null?\r\n                                            <img src={group.img} className={styles.group_img} alt=\"group_img\"/>\r\n                                        :   <img src={groupImage} className={styles.group_img} alt=\"group_img\"/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={styles.group_home_body_top_groupinfo_title}>\r\n                                        {/* <div className={styles.group_home_title}>\r\n                                            <h2 className={styles.group_title_h2}>{group.title}</h2>\r\n                                        </div>\r\n                                        {group.text} */}\r\n                                        {group.text}\r\n                                        <div className={styles.share_btn}>\r\n                                            <div>\r\n                                            <FacebookShareButton url={`https://groupmahjongrecord.com/group/${params.id}` } >\r\n                                                <FacebookIcon  round size='50px'/>\r\n                                            </FacebookShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <TwitterShareButton url={`https://groupmahjongrecord.com/group/${params.id}`}>\r\n                                                <TwitterIcon  round size='50px'/>\r\n                                            </TwitterShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <LineShareButton url={`https://groupmahjongrecord.com/group/${params.id}`}>\r\n                                                <LineIcon size='50px'/>\r\n                                            </LineShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <EmailShareButton url={`https://groupmahjongrecord.com/group/${params.id}`}>\r\n                                                <EmailIcon size='50px'/>\r\n                                            </EmailShareButton>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                        </div>\r\n                        {isload?\r\n                        <div className={styles.group_home_body_circular_container}>\r\n                            <div>\r\n                                <p>読み込み中</p>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </div>\r\n                        :     \r\n                        <div className={styles.group_home_body}>\r\n                            {istrue?\r\n                            <>\r\n                                <div className={styles.group_home_container_left}>\r\n                                    <div className={styles.group_home_menu}>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/game`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>対局 </h3>　\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/member`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>メンバー</h3>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/matchrecord`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>対局記録</h3>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{dispatch(setOpenSettings())}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>　設定　</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles.group_home_container_right}>\r\n                                    <div className={styles.group_home_container_right_bottom}>\r\n                                        <div className={styles.group_home_results}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>直近の対局記録</h3>\r\n                                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\" >\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell><p className={styles.results_table_p}>日付</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>1位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>2位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>3位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>4位</p></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                {gameresults.slice(0,7).map((gameresult)=>(\r\n                                                <TableBody  key={gameresult.id} className={styles.gameresult_container}>\r\n                                                    <GameResults  {...gameresult}/>\r\n                                                </TableBody>\r\n                                                ))}\r\n                                                </Table>\r\n                                            {/* </TableContainer> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>:\r\n                                <div className={styles.participation_btn_container}>\r\n                                    <div className={styles.participation_btn_body}>\r\n                                        <Button className={styles.participation_btn} onClick={()=>{participationGroup()}}>\r\n                                            <h3 className={styles.participation_btn_h3}>グループに参加</h3>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>   \r\n                        }\r\n                    </div>\r\n                </div>\r\n            <Modal\r\n                isOpen={isopenpasswordwindow}\r\n                onRequestClose={()=>{\r\n                    setIsOpenPasswordWindow(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className={styles.group_home_modal_container}>\r\n                    {notmatchpass && <p className={styles.results_table_p_red}>パスワードが一致しません</p>}\r\n                    <TextField\r\n                        placeholder=\"パスワード\"\r\n                        type=\"text\"\r\n                        defaultValue={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <div className={styles.group_home_modal_btn}>\r\n                        <Button\r\n                            // disabled={password!==group.password}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{participationGroupWithPassword()}}\r\n                        >\r\n                            グループに参加\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupHome\r\n","import { Avatar, Button } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGameResults, fetchAsyncGetGroup, fetchAsyncPutRate,  selecGroup, selectGameResults } from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nconst GroupMember:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string ,user_id:string}>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const allgameresults=useSelector(selectGameResults);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGroup(params.id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n\r\n    function rateInfo(){\r\n        let rateinfo:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n        groupmember.forEach((gm)=>{\r\n            const rate={rate_id:gm.rate_id,group_id:gm.group_id,user_id:gm.user_id,rate:1500}\r\n            rateinfo.push(rate)\r\n        })\r\n        return rateinfo\r\n    }\r\n\r\n    const updateRate=async()=>{\r\n        const res=await dispatch(fetchAsyncGetGameResults(params.id));\r\n        if(fetchAsyncGetGameResults.fulfilled.match(res)){\r\n            let rate=rateInfo()//1500に初期化\r\n            //レート更新\r\n            allgameresults.forEach((all)=>{\r\n                let gameRate:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n                let ratesum=0;\r\n                all.results.forEach((ar)=>{\r\n                    const rm=rate.filter((r)=>{\r\n                        return r.user_id===ar.user_id\r\n                    })[0];\r\n                    ratesum+=rm.rate;\r\n                    gameRate.push(rm);\r\n                    \r\n                })\r\n                if(gameRate.length!==0){\r\n                    let rateave=Math.round(ratesum/4);//レートの平均\r\n                    //レート更新\r\n                    let i=1;\r\n                    gameRate.forEach((r)=>{\r\n                        if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                        i+=1;\r\n                    });\r\n                }\r\n            })\r\n            rate.map(async(r)=>{\r\n                await dispatch(fetchAsyncPutRate(r));\r\n            });\r\n            await dispatch(fetchAsyncGetGroup(params.id));\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.game_main_container}>\r\n            <div className={styles.game_main_body}>\r\n                <div className={styles.page_title_group_member}>\r\n                    <h2 className={styles.group_title_h2}>グループメンバー</h2> \r\n                    <div className={styles.update_rate_btn}>\r\n                        <Button color=\"primary\" onClick={()=>{updateRate()}}>\r\n                            レート更新\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.game_container}> \r\n                    {groupmember.map((mem)=>(\r\n                        mem.is_active &&\r\n                            <div key={mem.id}>\r\n                                <div className={styles.game_body}>\r\n                                    <Button onClick={()=>{history.push(`/group/${params.id}/member/${mem.user_id}/`)}}>\r\n                                        <div>\r\n                                            <div className={styles.game_avater}>\r\n                                                {mem.img!==\"\"?\r\n                                                <Avatar alt=\"who?\" src={mem.img} style={{height:'70px',width:'70px'}}/>\r\n                                                :null}\r\n                                            </div>\r\n                                            <div>\r\n                                                {mem.nickName}\r\n                                                <br/>\r\n                                                {mem.rate}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    ))}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupMember\r\n","import { Button, CircularProgress, TextField } from '@material-ui/core';\r\nimport React, { useLayoutEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport GameResults from './GameResults';\r\nimport { endLoadResults, fetchAsyncGetGameResults, selectGameResults, selectIsLoadResults, startLoadResults } from './groupSlice';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from \"./Group.module.css\";\r\nimport Pagination from \"material-ui-flat-pagination\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:4,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 420,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst MatchRecord:React.FC = () => {\r\n    const params = useParams<{ id: string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const gameresults=useSelector(selectGameResults);\r\n    const [date,setDate]=useState(\"\");\r\n    const [enddate,setEndDate]=useState(\"\");\r\n    const isloadresults=useSelector(selectIsLoadResults);\r\n    const history = useHistory();\r\n    const [isopentotal,setOpenModal]=useState(false);\r\n    const [kurokawa, setKurokawa] = useState('5');\r\n    let sum=0;\r\n\r\n    useLayoutEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                dispatch(startLoadResults())\r\n                await dispatch(fetchAsyncGetGameResults(params.id));\r\n                dispatch(endLoadResults())\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n\r\n    let startday = 0;\r\n    let endday = 99999935200000;\r\n    if(date!==\"\"){startday = Date.parse(date);}\r\n    if(enddate!==\"\"){ endday = Date.parse(enddate);}\r\n    const selectgameresults=gameresults.filter((result)=>{\r\n        let tartgetday=Date.parse(result.created_at.slice(0,10));\r\n        return startday<=tartgetday && tartgetday<=endday\r\n    });\r\n    //戦績ページング\r\n    let resultssize=selectgameresults.length;\r\n    // const [startresults,setStartredults]=useState(0);\r\n    // const [endresults,setEndresults]=useState(10);\r\n    const [offset,setOffset]=useState(0);\r\n    const [parPage,setparPage]=useState(10);\r\n    const handleClick = (offset:number) => {\r\n        setOffset(offset);\r\n    }\r\n    let profile:{user_id:number,nickName:string,score:number,gamecount:number,rank1:number,rank2:number,rank3:number,rank4:number}[]=[];\r\n    selectgameresults.forEach((selectresult)=>{\r\n        selectresult.results.forEach((r)=>{\r\n            if(profile.length!==0){\r\n                let selectprof=profile.filter((pro)=>{\r\n                return pro.user_id===r.profile.userProfile;\r\n                })\r\n                //プロフィールがない時\r\n                if(selectprof.length===0){\r\n                    if(r.rank===1){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:1,rank2:0,rank3:0,rank4:0});}\r\n                    if(r.rank===2){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:1,rank3:0,rank4:0});}\r\n                    if(r.rank===3){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:1,rank4:0});}\r\n                    if(r.rank===4){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:0,rank4:1});}\r\n                }else{\r\n                //　情報更新\r\n                    selectprof[0].gamecount+=1;\r\n                    if(r.rank===1){selectprof[0].rank1+=1;}\r\n                    if(r.rank===2){selectprof[0].rank2+=1;}\r\n                    if(r.rank===3){selectprof[0].rank3+=1;}\r\n                    if(r.rank===4){selectprof[0].rank4+=1;}\r\n                    selectprof[0].score+=r.score;\r\n                }\r\n            }else{\r\n                if(r.rank===1){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:1,rank2:0,rank3:0,rank4:0});}\r\n                if(r.rank===2){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:1,rank3:0,rank4:0});}\r\n                if(r.rank===3){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:1,rank4:0});}\r\n                if(r.rank===4){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:0,rank4:1});}\r\n            }\r\n        })\r\n    })\r\n    \r\n      \r\n    const useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n        maxWidth:1200,\r\n    },\r\n    table2:{\r\n        minWidth: 300,\r\n        maxWidth:700,\r\n        background:'white',\r\n    },\r\n    table3:{\r\n        minWidth: 260,\r\n        maxWidth:260,\r\n        background:'white',\r\n    }\r\n    });\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <>\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.matchresult_title}>\r\n                <h2 className={styles.group_title_h2}>対局記録</h2>\r\n            </div>\r\n            <div className={styles.selectdate_container}>\r\n                <div className={styles.selectdate_body}>\r\n                    <TextField\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        onChange={(e)=>setDate(e.target.value)}\r\n                        defaultValue={date}\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <div className={styles.selectdate_container_div}>\r\n                        <h3　className={styles.selectdate_container_h3}>～</h3>\r\n                    </div>\r\n                     <TextField\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        onChange={(e)=>setEndDate(e.target.value)}\r\n                        defaultValue={enddate}\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {isloadresults?\r\n                <div className={styles.group_home_body_circular_container}>\r\n                    <div>\r\n                        <p>計算中...</p>\r\n                        <CircularProgress />\r\n                    </div>\r\n                </div>\r\n            :      \r\n             profile.length!==0?\r\n                <div >\r\n                    <div className={styles.match_recode_table}>\r\n                        <div>\r\n                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><p className={styles.results_table_p}>成績集計結果</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>合計スコア</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>平均スコア</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>平均順位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>1位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>2位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>3位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>4位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>対局数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>トップ率</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>ラス率</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>連対率</p></TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {profile.map((prof)=>(\r\n                                        <TableRow key={prof.user_id}>\r\n                                            <TableCell component=\"th\" scope=\"row\"><p className={styles.results_table_p}>{prof.nickName}</p></TableCell>\r\n                                            <TableCell>\r\n                                                {prof.score>=0?\r\n                                                    <p className={styles.results_table_p_blue}>{prof.score}</p>\r\n                                                :<p className={styles.results_table_p_red}>{prof.score}</p>}\r\n                                            </TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(prof.score/prof.gamecount).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{((1*prof.rank1+2*prof.rank2+3*prof.rank3+4*prof.rank4)/prof.gamecount).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank1}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank2}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank3}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank4}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.gamecount}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank1)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank4)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank1+prof.rank2)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className={styles.match_total}>\r\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={()=>{setOpenModal(true)}}>集計</Button>\r\n                    </div>\r\n                    <br/>\r\n                    <div className={styles.result_matchrecode}>\r\n                        <Table className={classes.table2} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><p className={styles.results_table_p}>日付</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>1位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>2位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>3位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>4位</p></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            {selectgameresults.slice(offset, offset + parPage).map((gameresult)=>(\r\n                            <TableBody  key={gameresult.id} className={styles.gameresult_container}>   \r\n                                <GameResults {...gameresult}/>\r\n                            </TableBody>\r\n                            ))}\r\n                        </Table>\r\n                    </div>\r\n                    <br/>\r\n                    <div className={styles.result_page_container}>\r\n                        <div className={styles.result_page_body}>\r\n                            <Pagination\r\n                                limit={parPage}\r\n                                offset={offset}\r\n                                total={resultssize}\r\n                                onClick={(e, offset) =>handleClick(offset)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className={styles.results_table_not_exist_div}>\r\n                    <p className={styles.results_table_p}>対局記録がありません</p>\r\n                </div>\r\n            }\r\n        </div>\r\n        <Modal\r\n            isOpen={isopentotal}\r\n            onRequestClose={()=>{\r\n                setOpenModal(false)\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <h3>集計結果</h3>\r\n            <div>\r\n            <div className={styles.match_radio_box_container}>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"5\"\r\n                            onChange={(e)=>{setKurokawa(e.target.value)}}\r\n                            checked={kurokawa === '5'}\r\n                            />\r\n                            1/2黒川レート\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"10\"\r\n                            onChange={(e)=>{setKurokawa(e.target.value)}}\r\n                            checked={kurokawa === '10'}\r\n                            />\r\n                            黒川レート\r\n                        </label>\r\n                    </div>\r\n                    <div className={styles.match_recode_table}>\r\n                        <div>\r\n                            <Table className={classes.table3} size=\"small\" aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><p className={styles.results_table_p}>名前</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>集計</p></TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {profile.map((prof)=>(\r\n                                        <TableRow key={prof.user_id}>\r\n                                            <TableCell component=\"th\" scope=\"row\"><p className={styles.results_table_p}>{prof.nickName}</p></TableCell>\r\n                                            {kurokawa==='5'?\r\n                                                <TableCell>\r\n                                                    {prof.score>=0?\r\n                                                        <p className={styles.results_table_p_blue}>{((prof.score*0.5)*100)%100===50 ? (prof.score*0.5)*100 : (prof.score*0.5)*100 }</p>\r\n                                                    :\r\n                                                        <p className={styles.results_table_p_red}>{((prof.score*0.5)*100)%100===-50 ? (prof.score*0.5)*100 : (prof.score*0.5)*100}</p>}\r\n                                                </TableCell>\r\n                                            :\r\n                                                <TableCell>\r\n                                                    {prof.score>=0?\r\n                                                        <p className={styles.results_table_p_blue}>{(prof.score*1)*100}</p>\r\n                                                    :\r\n                                                        <p className={styles.results_table_p_red}>{(prof.score*1)*100}</p>}\r\n                                                </TableCell>\r\n                                            }\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </Modal>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MatchRecord\r\n","export default __webpack_public_path__ + \"static/media/good_neko.b50127f7.jpg\";","export default __webpack_public_path__ + \"static/media/yosi_neko.9e482296.jpg\";","export default __webpack_public_path__ + \"static/media/nomal_neko.644f98c3.jpg\";","export default __webpack_public_path__ + \"static/media/bad_neko.40b8e1a3.jpg\";","import { Avatar, Button } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGameResults, fetchAsyncGetSelectProfile, selectGameResults, selectSelectProfile } from './groupSlice';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PolarAngleAxis, PolarGrid, PolarRadiusAxis, Radar, RadarChart} from 'recharts';\r\nimport { LineChart, Line, CartesianGrid, YAxis } from 'recharts';\r\n import styles from \"./Group.module.css\";\r\n// import good from \"../img/good.jpg\";\r\n// import soso from \"../img/soso.jpg\";\r\n// import ummm from \"../img/ummm.jpg\";\r\n// import bad from \"../img/bad.jpg\";\r\n\r\nimport good from \"../img/good_neko.jpg\";\r\nimport soso from \"../img/yosi_neko.jpg\";\r\nimport ummm from \"../img/nomal_neko.jpg\";\r\nimport bad from \"../img/bad_neko.jpg\";\r\nconst MemberDetail:React.FC = () => {\r\n    const params = useParams<{ id: string,user_id:string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const gameresults=useSelector(selectGameResults);\r\n    const history = useHistory();\r\n    const prof=useSelector(selectSelectProfile);\r\n\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGameResults(params.id));\r\n                await dispatch(fetchAsyncGetSelectProfile(params.user_id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id,params.user_id]);\r\n\r\n    let rank1:number = 0;\r\n    let rank2:number = 0;\r\n    let rank3:number = 0;\r\n    let rank4:number = 0;\r\n    let score:number = 0;\r\n    let gamecount:number = 0;\r\n    let nickname:string=\"\";\r\n    let img:string=\"\";\r\n    let text:string=\"\";\r\n    let finduser=false;\r\n    let rank_list:{rank:number}[]=[]\r\n    let status:number = 0;\r\n    gameresults.map((gameresult)=>{\r\n       return gameresult.results.forEach((r)=>{\r\n            if(String(r.user_id)===params.user_id){\r\n                gamecount+=1;\r\n                score+=r.score;\r\n                if(r.rank===1){rank1+=1}\r\n                if(r.rank===2){rank2+=1}\r\n                if(r.rank===3){rank3+=1}\r\n                if(r.rank===4){rank4+=1}\r\n                nickname=r.profile.nickName;\r\n                text=r.profile.text;\r\n                img=r.profile.img;\r\n                finduser=true;\r\n                if(gamecount<=7){\r\n                    rank_list.push({rank:r.rank});\r\n                }\r\n            }\r\n        })\r\n    });\r\n    let rank_status = rank_list.slice(0,4);\r\n    rank_list.reverse()\r\n\r\n    //調子\r\n    \r\n    rank_status.forEach((rs)=>{\r\n        status += rs.rank;\r\n    });\r\n    status /=4;\r\n    let status_icon:string = ummm;\r\n    let status_mozi:string =\"\";\r\n    if(status == 0){\r\n        status_icon = ummm;\r\n        status_mozi = \"普通...\"\r\n    }\r\n    else if(status <2.1){\r\n        status_icon = good;\r\n        status_mozi = \"最高！！！\"\r\n    }else if(status >= 2.1 && status <=2.3){\r\n        status_icon = soso;\r\n        status_mozi = \"調子はヨシ！\"\r\n    }else if(status > 2.3 && status<=2.5){\r\n        status_icon = ummm;\r\n        status_mozi = \"普通...\"\r\n    }else if(status >2.5){\r\n        status_icon = bad;\r\n        status_mozi = \"流れが悪い\"\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 700,\r\n            maxWidth:1200,\r\n        },\r\n        });\r\n    \r\n    const classes = useStyles();\r\n    \r\n    //平均ランク\r\n    let average_rank=0;\r\n    let top_rate=0;\r\n    let las_rate=0;\r\n    let rentai_rate=0;\r\n    let average_score=0;\r\n    if(finduser){\r\n        let rank=(1*rank1+2*rank2+3*rank3+4*rank4)/gamecount;\r\n        if((rank)<=2.3){\r\n            average_rank=100;\r\n        }else if((rank)>2.3 && (rank)<2.5){\r\n            average_rank=75;\r\n        }else if((rank)>=2.5 && (rank)<2.7){\r\n            average_rank=50;\r\n        }else{\r\n            average_rank=25;\r\n        }\r\n        //トップ率\r\n        let top=((rank1)/gamecount)*100;\r\n        \r\n        if(top>=30){\r\n            top_rate=100;\r\n        }else if(top<30 && top>25){\r\n            top_rate=75;\r\n        }else if(top<=25 && top >20){\r\n            top_rate=50;\r\n        }else{\r\n            top_rate=25;\r\n        }\r\n        //ラス回避率\r\n        let las=100-(((rank4)/gamecount)*100);\r\n        if(las>=80){\r\n            las_rate=100;\r\n        }else if(las<80 && las>75){\r\n            las_rate=75;\r\n        }else if(las<=75 && las >70){\r\n            las_rate=50;\r\n        }else{\r\n            las_rate=25;\r\n        }\r\n        //連対\r\n        let rentai=((rank1+rank2)/gamecount)*100;\r\n        if(rentai>=60){\r\n            rentai_rate=100;\r\n        }else if(rentai<60 && rentai >55){\r\n            rentai_rate=75;\r\n        }else if(rentai <=55 && rentai>=50){\r\n            rentai_rate=50;\r\n        }else{\r\n            rentai_rate=25;\r\n        }\r\n        //スコア\r\n        let setscore=score/gamecount;\r\n        if(setscore>=10){\r\n            average_score=100;\r\n        }else if(setscore<10 && setscore>=0){\r\n            average_score=75;\r\n        }else if(setscore<0 && setscore>=-10){\r\n            average_score=50;\r\n        }else{\r\n            average_score=25;\r\n        }\r\n    }else{\r\n        nickname=prof.nickName;\r\n        text=prof.text;\r\n        img=prof.img;\r\n    }\r\n    const data = [\r\n        { rank: '平均スコア', value: average_score},\r\n        { rank: '平均順位', value: average_rank },\r\n        { rank: 'トップ率', value: top_rate },\r\n        { rank: 'ラス回避率', value: las_rate },\r\n        { rank: '連対率', value:rentai_rate },\r\n        ];\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/member/`)}>戻る</Button>\r\n            <div className={styles.memberdetail_container_top}>\r\n                <div className={styles.memberdetail_container_top_body}>\r\n                <div className={styles.memberdetail_prof}>\r\n                    <div className={styles.memberdetail_prof_p_container}>\r\n                        <h1 className={styles.memberdetail_prof_p_name}>{nickname}</h1>\r\n                       \r\n                    </div>\r\n                    <div className={styles.memberdetail_img}>\r\n                        <div className={styles.memberdetail_prof_avatar}>\r\n                            {img!==\"\"?\r\n                                // <div className={styles.memberdetail_prof_avatar}>\r\n                                    /* <Avatar alt=\"who?\" src={img} style={{height:'80px',width:'80px'}}/> */\r\n                                    <img src={img} height=\"200px\" width=\"200px\"/>\r\n                                \r\n                            :null}\r\n                        </div>\r\n                        <div className={styles.memberdetail_img_status}>\r\n                            <div className={styles.memberdetail_img_status_mozi}>\r\n                                <h4>{status_mozi}</h4>\r\n                            </div>\r\n                            <div className={styles.memberdetail_img_status_icon}>\r\n                                <img src={status_icon} height=\"110px\" width=\"110px\"/>\r\n                                {/* <Avatar alt=\"who?\" src={status_icon} style={{height:'110px',width:'110px'}}/> */}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                     {text!=='null'?\r\n                            <p className={styles.memberdetail_prof_p}>{text}</p>\r\n                        :null}\r\n\r\n                </div>\r\n                <div className={styles.memberdetail_chart}>\r\n                    <RadarChart // レーダーチャートのサイズや位置、データを指定\r\n                        height={250} //レーダーチャートの全体の高さを指定\r\n                        width={340} //レーダーチャートの全体の幅を指定\r\n                        cx=\"50%\" //要素の左を基準に全体の50%移動\r\n                        cy=\"50%\" //要素の上を基準に全体の50%移動\r\n                        outerRadius={100}\r\n                        data={data} //ここにArray型のデータを指定\r\n                        >\r\n                        <PolarGrid /> \r\n                        <PolarAngleAxis\r\n                            dataKey=\"rank\" \r\n                            domain={[100]}\r\n                        />\r\n                        <PolarRadiusAxis \r\n                            tick={false}\r\n                            axisLine={false}\r\n                            domain={[0,100]}\r\n                        />\r\n                        <Radar \r\n                            name=\"Mike\"   \r\n                            dataKey=\"value\" \r\n                            stroke=\"#8884d8\"  \r\n                            fill=\"#8884d8\" \r\n                            fillOpacity={0.6} \r\n                        />\r\n                    </RadarChart>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.memberdetail_mid_container}>\r\n                <div className={styles.label_y}>\r\n                    <p className={styles.label_y_p_1}>1位</p>\r\n                    <p className={styles.label_y_p_2}>2位</p>\r\n                    <p className={styles.label_y_p_3}>3位</p>\r\n                    <p className={styles.label_y_p_4}>4位</p>\r\n                </div>\r\n                <div className={styles.memberdetail_chart_score}>\r\n                    <LineChart  width={340} height={160} data={rank_list} margin={{ top: 5, right: 5, bottom: 5, left: 0 }}>\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <YAxis type=\"number\" ticks={[1,2,3,4]} tickSize={0} reversed domain={[1,4]}/>\r\n                        <Line  dataKey=\"rank\" stroke=\"#8884d8\" strokeWidth={4}  dot={{ stroke: 'blue', strokeWidth: 3 }} isAnimationActive={false}/>\r\n                    </LineChart>\r\n                </div>\r\n            </div>\r\n            {finduser?\r\n            <div>\r\n                <br/>\r\n                <div className={styles.match_recode_table}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>合計スコア</TableCell>\r\n                            <TableCell>平均スコア</TableCell>\r\n                            <TableCell>平均順位</TableCell>\r\n                            <TableCell>1位回数</TableCell>\r\n                            <TableCell>2位回数</TableCell>\r\n                            <TableCell>3位回数</TableCell>\r\n                            <TableCell>4位回数</TableCell>\r\n                            <TableCell>対局数</TableCell>\r\n                            <TableCell>トップ率</TableCell>\r\n                            <TableCell>ラス回避率</TableCell>\r\n                            <TableCell>連対率</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\" align=\"center\">{score}</TableCell>\r\n                                <TableCell align=\"center\">{(score/gamecount).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{((1*rank1+2*rank2+3*rank3+4*rank4)/gamecount).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{rank1}</TableCell>\r\n                                <TableCell align=\"center\">{rank2}</TableCell>\r\n                                <TableCell align=\"center\">{rank3}</TableCell>\r\n                                <TableCell align=\"center\">{rank4}</TableCell>\r\n                                <TableCell align=\"center\">{gamecount}</TableCell>\r\n                                <TableCell align=\"center\">{(((rank1)/gamecount)*100).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{100-Number((((rank4)/gamecount)*100).toFixed(1))}</TableCell>\r\n                                <TableCell align=\"center\">{(((rank1+rank2)/gamecount)*100).toFixed(1)}</TableCell>\r\n                            </TableRow>   \r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            :<div className={styles.match_recode_not_exist}>対局記録がありません</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberDetail\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React,{useState} from 'react'\r\nimport styles from \"./Home.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport { AppDispatch } from '../../app/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAsyncPostContact } from './homeSlice';\r\n\r\nconst Contact:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [sendmail,setSendMail]=useState(false);\r\n    return (\r\n        <div className={styles.contact_container}>\r\n            {!sendmail?\r\n            <div className={styles.contact_body}>\r\n                <h3>お問い合わせ</h3>\r\n                <Formik\r\n                    initialErrors={{ email: \"required\" }}\r\n                    initialValues={{ email: \"\",text: \"\",title:\"\"}}\r\n                    \r\n                    onSubmit={async (values) => {\r\n                        setSendMail(true);\r\n                        const contact_packet={sender: values.email,title:values.title,message:values.text}\r\n                        await dispatch(fetchAsyncPostContact(contact_packet));\r\n                        \r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string()\r\n                                .email(\"メールアドレスが不正です。\")\r\n                                .required(\"メールアドレスは必須です。\"),\r\n                        title: Yup.string().required(\"件名は必須です。\"),\r\n                        text: Yup.string().required(\"内容は必須です。\"),\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"メールアドレス\"\r\n                                        placeholder=\"メールアドレス\"\r\n                                        type=\"input\"\r\n                                        name=\"email\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.email && errors.email ? (\r\n                                        <div >{errors.email}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"件名\"\r\n                                        placeholder=\"件名(必須)\"\r\n                                        type=\"input\"\r\n                                        name=\"title\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.title}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.title && errors.title ? (\r\n                                        <div >{errors.title}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"お問い合わせ内容(必須)\"\r\n                                        type=\"input\"\r\n                                        name=\"text\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        fullWidth\r\n                                        value={values.text}\r\n                                        multiline\r\n                                        rows={10}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <br/>\r\n                                    {touched.text && errors.text ? (\r\n                                        <div >{errors.text}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <br/>\r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            :<div><h3>送信が完了しました。</h3></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport styles from \"./Home.module.css\";\r\n\r\nconst Disclaimer:React.FC = () => {\r\n    return (\r\n        <div className={styles.contact_container}>\r\n            <div className={styles.contact_body}>\r\n                <h1>免責事項</h1>\r\n                <p>・本サイトにおける内容の変更、中断、終了によって生じたいかなる損害についても一切責任を負いません。</p>\r\n                <p>・本サービスを利用したことにより直接的または間接的に利用者に発生した損害について、一切賠償責任を負いません。</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\nimport styles from \"./Home.module.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer:React.FC = () => {\r\n    return (\r\n        <footer className={styles.footer_container}>\r\n            <div className={styles.footer_p_div}>\r\n                <p className={styles.footer_p}>\r\n                    <Link to=\"/contact\" className={styles.footer_link} onClick={()=>{window.scrollTo(0, 0);}}>お問い合わせ</Link>\r\n                </p>\r\n            </div>\r\n            <div className={styles.footer_p_div}>\r\n                <p className={styles.footer_p}>\r\n                    <Link to=\"/disclaimer\" className={styles.footer_link} onClick={()=>{window.scrollTo(0, 0);}}>免責事項</Link>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/same.a406120e.svg\";","import {Button, IconButton, Slider } from '@material-ui/core'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport Cropper from 'react-easy-crop'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch } from '../../app/store'\r\nimport { resetImageTrimming, selectIsOpenImageTrimming } from './homeSlice'\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport styles from \"./Home.module.css\";\r\nimport { fetchAsyncUpdateProfImage, selectLoginUserProfile } from '../auth/authSlice';\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:99,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 480,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst ImageTrimming:React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const isopenimagetrimming=useSelector(selectIsOpenImageTrimming);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const profile=useSelector(selectLoginUserProfile);\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n    \r\n  }, []);\r\n\r\n  const [src, setSrc] = useState<any>(null);  \r\n\r\n  const onSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== null) {\r\n        if(event.target.files.length!==0){\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () =>{\r\n                setSrc(reader.result);\r\n            });\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n  }; \r\n//トリミング\r\nconst createImage = (url: string) =>\r\n  new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\nconst getCroppedImg=async(imageSrc: any, pixelCrop: { width: number; height: number; x: number; y: number; }|null)=>{\r\n    const image = await createImage(imageSrc)\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    if(pixelCrop!==null){\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        if(ctx !== null){\r\n            ctx.drawImage(\r\n                image,\r\n                pixelCrop.x * scaleX,\r\n                pixelCrop.y * scaleY,\r\n                pixelCrop.width * scaleX,\r\n                pixelCrop.height * scaleY,\r\n                0,\r\n                0,\r\n                pixelCrop.width,\r\n                pixelCrop.height\r\n            );\r\n        }\r\n    }\r\n    return new Promise((resolve, reject)=>{\r\n        canvas.toBlob((blob) => {\r\n            if (!blob) {\r\n                \r\n                return;\r\n            }\r\n            resolve(blob)\r\n        }, \"image/jpeg\");\r\n    });\r\n}\r\n\r\nasync function updateImage(croppedImage:any){\r\n    const name:string=String(profile.id)+String(Date.now())+\".jpg\";\r\n    if(createImage!==null){\r\n        const newImage=new File([croppedImage],name,{type:\"image/jpg\",lastModified:Date.now()});\r\n        const packet = { id: profile.id,nickName:profile.nickName,text:profile.text,img: newImage,name:name,};\r\n        const results=await dispatch(fetchAsyncUpdateProfImage(packet)); \r\n        if(fetchAsyncUpdateProfImage.fulfilled.match(results)){\r\n            dispatch(resetImageTrimming());\r\n        }\r\n    }  \r\n};\r\n\r\nasync function showCroppedImage(){\r\n    const croppedImage =  await getCroppedImg(\r\n        src,\r\n        croppedAreaPixels,\r\n    )\r\n    await updateImage(croppedImage);\r\n};\r\n\r\nconst handlerEditPicture = () => {\r\n    const fileInput = document.getElementById(\"editInputImage\");\r\n    fileInput?.click();\r\n};\r\n  \r\n  return (\r\n        <Modal\r\n            isOpen={isopenimagetrimming}\r\n            onRequestClose={async () => {\r\n                dispatch(resetImageTrimming());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div className={styles.image_trimming_container}>\r\n                <div className={styles.image_trimming_body}>\r\n                    <Cropper\r\n                    image={src}\r\n                    crop={crop}\r\n                    zoom={zoom}\r\n                    aspect={1 / 1}\r\n                    onCropChange={setCrop}\r\n                    onCropComplete={onCropComplete}\r\n                    onZoomChange={setZoom}\r\n                    />\r\n                    <div className={styles.image_tring_select}>\r\n                        <input type=\"file\" id=\"editInputImage\" className={styles.profile_image_icon_input}\r\n                            accept=\".jpg,.gif,.png,image/gif,image/jpeg,image/png\"\r\n                            onChange={onSelectFile}\r\n                        />\r\n                        <IconButton onClick={handlerEditPicture}>\r\n                            <PhotoLibraryIcon /> 画像を選択\r\n                        </IconButton>    \r\n                        <Button\r\n                            // disabled={!profile?.nickName}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={showCroppedImage}\r\n                        >\r\n                        適応\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.image_slider}>\r\n                        <Slider\r\n                            value={zoom}\r\n                            min={1}\r\n                            max={4}\r\n                            step={0.1}\r\n                            aria-labelledby=\"Zoom\"\r\n                            onChange={(e,zoom) => {\r\n                                let z=Number(zoom)\r\n                                setZoom(z)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImageTrimming\r\n","import { Avatar, Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncUpdateProf, selectLoginUserProfile} from '../auth/authSlice';\r\nimport { resetBackUrl, resetOpenProfile, selectIsOpenProfile, setImageTrimming } from './homeSlice';\r\nimport ImageTrimming from './ImageTrimming';\r\nimport styles from \"./Home.module.css\";\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:8,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst Profile:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const isopenprofile=useSelector(selectIsOpenProfile);\r\n    const profile=useSelector(selectLoginUserProfile);\r\n    const [name,setName]=useState(\"\");\r\n    const [text,setText]=useState(\"\");\r\n    const history = useHistory();\r\n    // let proftext=profile.text;\r\n    // if(proftext){\r\n    //     proftext=\"\"\r\n    // }\r\n    const updateProfile = async () => {\r\n        let updateName=name;\r\n        let updateText=text;\r\n        if(updateName===\"\"){updateName=profile.nickName}\r\n        if(updateText===\"\"){updateText=profile.text}\r\n        if(updateText===null){updateText=\"\"}\r\n        const packet = { id: profile.id, nickName: updateName,text:updateText};\r\n        await dispatch(fetchAsyncUpdateProf(packet));   \r\n        dispatch(resetOpenProfile());\r\n    };\r\n    function logout(){\r\n        localStorage.removeItem(\"localJWT\");\r\n        dispatch(resetBackUrl());\r\n        dispatch(resetOpenProfile());\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={isopenprofile}\r\n            onRequestClose={async () => {\r\n                dispatch(resetOpenProfile());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div>\r\n                <h2>プロフィールを編集</h2>\r\n                <div>\r\n                    <Button onClick={()=>{dispatch(setImageTrimming())}}>\r\n                        <Avatar alt=\"who?\" src={profile.img} style={{height:'70px',width:'70px'}}/>\r\n                    </Button>\r\n                    <ImageTrimming/>\r\n                    <div>\r\n                        <TextField placeholder=\"名前\" type=\"text\" defaultValue={profile.nickName} label=\"名前\"\r\n                            onChange={(e) => {\r\n                                if(e.target.value.length<=20){\r\n                                    setName(e.target.value)}\r\n                                }\r\n                            }/>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <TextField placeholder=\"自己紹介\" type=\"text\" defaultValue={profile.text} multiline fullWidth label=\"自己紹介\"\r\n                    onChange={(event) => {\r\n                        if(event.target.value.length<=200){\r\n                            setText(event.target.value)\r\n                        }\r\n                    }}/>\r\n                \r\n                <div className={styles.profile_btn_container}>\r\n                    <div className={styles.profile_btn}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={updateProfile}\r\n                        >\r\n                            プロフィール更新\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.profile_btn}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={logout}\r\n                        >\r\n                            ログアウト\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React,{useEffect, useLayoutEffect} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory, useLocation} from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { fetchAsyncGetMyProf, selectLoginUserProfile } from '../auth/authSlice';\r\nimport { setBackUrl, setOpenProfile } from './homeSlice';\r\nimport styles from \"./Home.module.css\";\r\nimport { Avatar, Button} from '@material-ui/core';\r\nimport img from './same.svg'\r\nimport Profile from './Profile';\r\n\r\n\r\n\r\nconst Header:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const loginUserProfile=useSelector(selectLoginUserProfile);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            //ログインしていたら\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetMyProf());//ログインしているユーザーのプロフィールを取得する\r\n                //await dispatch(fetchAsyncGetBelongToGroup());\r\n                if(location.pathname==='/'){\r\n                    history.push('/home');\r\n                }\r\n            }else{\r\n                if(!location.pathname.includes('/activate')){\r\n                    dispatch(setBackUrl(location.pathname));\r\n                    if(\r\n                        !(\r\n                            location.pathname.includes('/password_confirm') || \r\n                            location.pathname.includes('/contact') || \r\n                            location.pathname.includes('/disclaimer') || \r\n                            location.pathname.includes('/password/reset')\r\n                        )\r\n                    ){\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,history,location.pathname]);\r\n\r\n    return (\r\n        <>\r\n            {location.pathname!=='/'?\r\n            <div className={styles.header_container}>\r\n                <div className={styles.header_body}>\r\n                    <Link to='/home' className={styles.header_link}>\r\n                        <div className={styles.header_body_left}>\r\n                            <h3 className={styles.header_title_h3} >\r\n                                グループ麻雀レコード\r\n                            </h3>\r\n                            <img src={img} className={styles.header_img} width=\"70px\" height=\"70px\" alt=\"header_img\"/>    \r\n                        </div>\r\n                    </Link>\r\n                    {location.pathname.includes('/activate') || location.pathname.includes('/password') || location.pathname.includes('/contact') || location.pathname.includes('/disclaimer')?\r\n                    <div></div>\r\n                    :\r\n                        <div className={styles.header_body_right}>\r\n                            <div>\r\n                                <p className={styles.header_nickname}>{loginUserProfile.nickName}</p>  \r\n                            </div>\r\n                            <div>\r\n                                <Button\r\n                                    onClick={()=>{dispatch(setOpenProfile())}}\r\n                                >\r\n                                    <Avatar alt=\"who?\" src={loginUserProfile.img} style={{height:'55px',width:'55px'}}/>\r\n                                </Button>\r\n                            </div>\r\n                            <Profile />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            :null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Button,  } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {PROPS_BELONG_TO_GROUP} from '../types';\r\nimport styles from \"./Home.module.css\";\r\nimport groupImage from '../img/fish_shark.png';\r\n\r\nconst BelongToGroupList:React.FC<PROPS_BELONG_TO_GROUP> = (group) => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Button onClick={()=>{history.push(`/group/${group.id}`)}}> \r\n                <div className={styles.belong_to_group_container}>\r\n                    <div className={styles.belong_to_group_body_top}>\r\n                        {group.img!==null?\r\n                            <img src={group.img} className={styles.belong_to_group_img} alt=\"group_img\"/>\r\n                        :   <img src={groupImage} className={styles.belong_to_group_img} alt=\"group_img\"/>\r\n                        }\r\n                    </div>\r\n                    <div className={styles.belong_to_group_body_bottom}>\r\n                        <h3 className={styles.belong_to_group_h3}>{group.title}</h3>\r\n                    </div>    \r\n                </div>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BelongToGroupList\r\n","import { IconButton, TextField } from '@material-ui/core'\r\nimport React,{useState} from 'react'\r\nimport Modal from \"react-modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport { File } from \"../types\";\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncCreateGroup } from './homeSlice';\r\nimport { selectLoginUserProfile } from '../auth/authSlice';\r\nimport { fetchAsyncCreateRate, fetchAsyncParticipationGroup } from '../group/groupSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from \"./Home.module.css\";\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst Search:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [openModal,setOpenModal]=useState<boolean>(false);\r\n    const [groupName,setGroupName]=useState(\"\")\r\n    const [text,setText]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [image, setImage] = useState<File | null>(null);\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const history = useHistory();\r\n    let url=\"\";\r\n    const handlerEditPicture = () => {\r\n        const fileInput = document.getElementById(\"imageInput\");\r\n        fileInput?.click();\r\n    };\r\n\r\n    const newGroup = async (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        const packet = { title: groupName,text:text,password:password,img: image,};\r\n        const results=await dispatch(fetchAsyncCreateGroup(packet));\r\n        const group_id=results.payload.id;\r\n        if(fetchAsyncCreateGroup.fulfilled.match(results)){\r\n            let member:number[]=[]\r\n            member.push(loginuserprofile.userProfile);\r\n            const pkt={id:group_id,userGroup:member}\r\n            const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n            if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                const rate_pkt={group_id:group_id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                const rate_results=await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                if(fetchAsyncCreateRate.fulfilled.match(rate_results)){\r\n                    setGroupName(\"\");\r\n                    setImage(null);\r\n                    setOpenModal(false);\r\n                    history.push(`/group/${group_id}`)\r\n                }\r\n            }   \r\n        }\r\n        setGroupName(\"\");\r\n        setImage(null);\r\n        setOpenModal(false);\r\n    };\r\n\r\n      if(image!==null){\r\n        var binaryData = [];\r\n        binaryData.push(image);\r\n        url=window.URL.createObjectURL(new Blob(binaryData, {type: \"image/*\"}))\r\n      }\r\n    return (\r\n        <>\r\n            <div className={styles.create_group_container}>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>setOpenModal(true)}>グループを作る</Button>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                    url=\"\";\r\n                    setImage(null);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <form >\r\n                    <h2>グループ作成</h2>\r\n                    <br />\r\n                    <TextField\r\n                        placeholder=\"グループ名\"\r\n                        helperText={`${groupName.length}/30`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=30){\r\n                                setGroupName(e.target.value)\r\n                            }\r\n                        }}\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                        placeholder=\"紹介文\"\r\n                        type=\"text\"\r\n                        helperText={`${text.length}/200`}\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=200){\r\n                                setText(e.target.value)\r\n                            }\r\n                        }}\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                        placeholder=\"パスワード\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"imageInput\"\r\n                        hidden={true}\r\n                        onChange={(e) => setImage(e.target.files![0])}\r\n                    />\r\n                    <br />\r\n                    <IconButton onClick={handlerEditPicture}>\r\n                        <PhotoIcon />\r\n                    </IconButton>\r\n                    <div>\r\n                        {url!==\"\"?<img src={url} height=\"90px\" alt=\"same_img\"/>:null}\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                        disabled={!(groupName &&groupName.length<=30)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={newGroup}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{ useEffect} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { fetchAsyncGetMyProf,selectLoginUserProfile } from '../auth/authSlice';\r\nimport { fetchAsyncGetBelongToGroup, selectBelongToGroup } from './homeSlice';\r\nimport BelongToGroupList from './BelongToGroupList';\r\nimport styles from \"./Home.module.css\";\r\nimport Search from './Search';\r\n\r\nconst Home:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginUserProfile=useSelector(selectLoginUserProfile);\r\n    const belongtogroup=useSelector(selectBelongToGroup);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            //ログインしていたら\r\n            if (localStorage.localJWT) {\r\n                const result = await dispatch(fetchAsyncGetMyProf());//ログインしているユーザーのプロフィールを取得する\r\n                await dispatch(fetchAsyncGetBelongToGroup());\r\n                if (fetchAsyncGetMyProf.rejected.match(result)) {\r\n                    history.push('/')\r\n                }\r\n              }else{\r\n                history.push('/')\r\n              }\r\n            };\r\n        fetchLoader();\r\n    },[dispatch,history]);\r\n\r\n    return (\r\n        <div>\r\n            <Search/>\r\n            <div className={styles.home_container}>\r\n                {belongtogroup.length!==0 && belongtogroup[0].id!==0?\r\n                <div className={styles.home_grouplist_container}>\r\n                    {belongtogroup.map((group)=>( \r\n                        group.profile.map((prof)=>(\r\n                            prof.is_active &&prof.userProfile===loginUserProfile.userProfile && <BelongToGroupList key={group.id} {...group}/>\r\n                        ))\r\n                    ))}\r\n                </div>\r\n                :<>参加しているグループはありません</>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router, \r\n    Route,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport Activate from './features/auth/Activate';\r\nimport Auth from './features/auth/Auth';\r\nimport Auth_done from './features/auth/Auth_done';\r\nimport PasswordConfirm from './features/auth/PasswordConfirm';\r\nimport PasswordReset from './features/auth/PasswordReset';\r\nimport Game from './features/group/Game';\r\nimport GroupHome from './features/group/GroupHome';\r\nimport GroupMember from './features/group/GroupMember';\r\nimport MatchRecord from './features/group/MatchRecord';\r\nimport MemberDetail from './features/group/MemberDetail';\r\nimport Contact from './features/home/Contact';\r\nimport Disclaimer from './features/home/Disclaimer';\r\nimport Footer from './features/home/Footer';\r\nimport Header from './features/home/Header';\r\nimport Home from './features/home/Home';\r\n\r\n\r\nfunction App(){\r\n    return (\r\n        <div className=\"App\">\r\n            <Router basename = {process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path='/activate/:token' component={Activate}/>\r\n                    <Route path='/password/reset' component={PasswordReset}/>\r\n                    <Route path='/password_confirm/:uid/:token'component={PasswordConfirm}/>\r\n                    <Route path=\"/contact\" component={Contact}/>\r\n                    <Route path=\"/disclaimer\" component={Disclaimer}/>\r\n                    <Route exact path=\"/\" component={Auth}/>\r\n                    <Route path=\"/create_done\" component={Auth_done}/>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route exact path=\"/group/:id\" component={GroupHome}/>\r\n                    <Route exact path=\"/group/:id/member\" component={GroupMember}/>\r\n                    <Route exact path=\"/group/:id/member/:user_id\" component={MemberDetail}/>\r\n                    <Route exact path=\"/group/:id/matchrecord\" component={MatchRecord}/>\r\n                    <Route path=\"/group/:id/game\" component={Game}/>\r\n                    <Route component = {()=>(<div> 404 Not found </div>)} />\r\n                </Switch>\r\n                <Footer/>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport homeReducer from '../features/home/homeSlice';\r\nimport groupReducer from '../features/group/groupSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    home: homeReducer,\r\n    group:groupReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nexport type AppDispatch =typeof store.dispatch;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_body_header_img\":\"Auth_auth_body_header_img__Atbl9\",\"auth_title_h1\":\"Auth_auth_title_h1__3YroH\",\"auth_title_p\":\"Auth_auth_title_p__2Y8v1\",\"auth_login_signup_container\":\"Auth_auth_login_signup_container__1PhhG\",\"textfield\":\"Auth_textfield__1PJRa\",\"auth_login_signup\":\"Auth_auth_login_signup__1RfkY\",\"auth_description_container\":\"Auth_auth_description_container__17LM7\",\"auth_description_body\":\"Auth_auth_description_body__2LcWZ\",\"auth_description_btn_div\":\"Auth_auth_description_btn_div__FeQ48\",\"auth_description_btn\":\"Auth_auth_description_btn__1tPyi\",\"auth_description_btn_h2\":\"Auth_auth_description_btn_h2__ti_Xh\",\"auth_description_btn_h2_underline\":\"Auth_auth_description_btn_h2_underline__3onQ-\",\"auth_what_container\":\"Auth_auth_what_container__wzQaT\",\"auth_what\":\"Auth_auth_what__3_nFa\",\"auth_what_h2\":\"Auth_auth_what_h2__2uQ1z\",\"auth_what_p\":\"Auth_auth_what_p__FhCbl\",\"auth_how_to_container\":\"Auth_auth_how_to_container__3T2tg\",\"auth_how_to_body\":\"Auth_auth_how_to_body__FtpSD\",\"auth_how_to\":\"Auth_auth_how_to__16AfG\",\"auth_how_to_h2\":\"Auth_auth_how_to_h2__1-XBU\",\"how_to_p\":\"Auth_how_to_p__1-TL-\",\"how_to_p_title\":\"Auth_how_to_p_title__3aCMo\",\"how_to_p_2\":\"Auth_how_to_p_2__mVZDY\",\"how_to_p_3\":\"Auth_how_to_p_3__2snaj\",\"how_to_image_login\":\"Auth_how_to_image_login__36zYp\",\"send_mail_container\":\"Auth_send_mail_container__1pafG\",\"send_mail_p\":\"Auth_send_mail_p__1kfcR\",\"login_failure_p\":\"Auth_login_failure_p__1f9hX\",\"login_signup_h2\":\"Auth_login_signup_h2__1q4X_\",\"switch_login_signup_btn\":\"Auth_switch_login_signup_btn__30fGl\",\"switch_login_signup_btn_container\":\"Auth_switch_login_signup_btn_container__2Lu59\",\"link_border\":\"Auth_link_border__1Tgbg\",\"auth_login_main_container\":\"Auth_auth_login_main_container__3KKdi\",\"auth_login_title_container\":\"Auth_auth_login_title_container__2ZraG\",\"auth_login_h2\":\"Auth_auth_login_h2__OM6nd\",\"auth_activate_p\":\"Auth_auth_activate_p__3Qtmr\",\"activate_login_btn\":\"Auth_activate_login_btn__1r__o\",\"password_reset_container\":\"Auth_password_reset_container__11qMa\",\"password_reset_body\":\"Auth_password_reset_body__1Suft\",\"password_reset_h3\":\"Auth_password_reset_h3__tNgez\",\"password_reset_p\":\"Auth_password_reset_p__1zJqT\",\"password_reset_btn\":\"Auth_password_reset_btn__EduVB\"};"],"sourceRoot":""}