{"version":3,"sources":["features/auth/Auth.module.css","features/home/Home.module.css","features/auth/authSlice.ts","features/home/homeSlice.ts","features/auth/Activate.tsx","features/auth/SignUp.tsx","features/auth/Login.tsx","features/auth/fish_shark.png","features/auth/login.jpg","features/auth/home.jpg","features/auth/grouphome.jpg","features/auth/mahjong.jpg","features/auth/Auth.tsx","features/auth/Auth_done.tsx","features/auth/PasswordConfirm.tsx","features/auth/PasswordReset.tsx","features/group/groupSlice.ts","features/group/Game.tsx","features/group/GameResults.tsx","features/group/GroupImageTrimming.tsx","features/group/GroupSettings.tsx","features/group/GroupHome.tsx","features/group/GroupMember.tsx","features/group/MatchRecord.tsx","features/group/MemberDetail.tsx","features/home/Contact.tsx","features/home/Disclaimer.tsx","features/home/Footer.tsx","features/home/same.svg","features/home/ImageTrimming.tsx","features/home/Profile.tsx","features/home/Header.tsx","features/home/BelongToGroupList.tsx","features/home/Search.tsx","features/home/Home.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/group/Group.module.css"],"names":["module","exports","apiUrl","process","fetchAsyncRegister","createAsyncThunk","auth","a","axios","post","headers","catch","error","response","res","data","fetchAsyncActivateUser","token","get","fetchAsyncGetUser","email","fetchAsyncCreateProf","nickName","Authorization","localStorage","localJWT","fetchAsyncUpdateProf","profile","put","id","fetchAsyncUpdateProfImage","profileimage","uploadData","FormData","append","text","img","name","fetchAsyncLogin","authen","fetchAsyncGetMyProf","fetchAsyncPasswordReset","fetchAsyncPasswordConfirm","password","authSlice","createSlice","initialState","openSignIn","login_user_profile","userProfile","created_at","reducers","setOpenSignIn","state","resetOpenSignIn","extraReducers","builder","addCase","fulfilled","action","payload","detail","setItem","access","actions","selectLoginUserProfile","selectOpenSignIn","fetchAsyncGetBelongToGroup","reverse","fetchAsyncCreateGroup","newGroup","groupData","title","fetchAsyncPostContact","homeSlice","backUrl","isOpenProfile","isOpenImageTrimming","belongToGroup","created_on","is_active","setBackUrl","resetBackUrl","setOpenProfile","resetOpenProfile","setImageTrimming","resetImageTrimming","selectBelongToGroup","home","selectBackUrl","selectIsOpenProfile","selectIsOpenImageTrimming","Activate","dispatch","useDispatch","history","useHistory","params","useParams","backurl","useSelector","useEffect","console","log","fetchLoader","className","initialErrors","initialValues","onSubmit","values","result","match","push","validationSchema","Yup","shape","required","min","handleSubmit","handleChange","handleBlur","errors","touched","isValid","styles","auth_login_main_container","auth_login_main_body","auth_activate_p","auth_login_title_container","auth_login_h2","TextField","placeholder","type","onChange","onBlur","value","activate_login_btn","Button","variant","color","disabled","modalStyle","overlay","background","zIndex","content","top","left","backgroundColor","width","height","transform","SignUp","useState","sendEmail","setSendEmail","successCreateAccount","setSuccessCreateAccount","password2","length","auth_packet","resultRegister","oneOf","login_failure_p","login_signup_h2","switch_login_signup_btn_container","switch_login_signup_btn","onClick","isOpen","onRequestClose","style","ariaHideApp","send_mail_container","send_mail_p","Login","falseLogin","setfalseLogin","isloginloading","setIsLoginLoading","includes","CircularProgress","to","link_border","Auth","auth_container","auth_body","auth_body_header","src","auth_body_header_img","alt","auth_title_h1","auth_title_p","auth_login_signup","auth_what_container","auth_what","auth_what_h2","auth_what_p","auth_how_to","auth_how_to_h2","auth_how_to_container","auth_how_to_body","how_to_p","loginImage","how_to_image_login","grouphome","mahjong","Auth_done","PasswordConfirm","password_reset_container","password_reset_body","password_reset_h3","password_reset_p","password1","packet","new_password1","new_password2","uid","label","fullWidth","password_reset_btn","PasswordReset","sendemal","fetchAsyncParticipationGroup","participations","userGroup","forEach","member","String","patch","date","fetchAsyncCreateRate","rate","fetchAsyncGetGroup","fetchAsyncUpdateGroup","group","fetchAsyncUpdateGroupImage","groupimage","fetchAsyncGetGameResults","group_id","fetchAsyncCreateGame","fetchAsyncDeleteGame","delete","fetchAsyncCreateGameResults","score","fetchAsyncEditGameResults","game_results","fetchAsyncPutRate","rate_info","rate_id","renponse","fetchAsyncRateIsActive","fetchAsyncGetSelectProfile","groupSlice","isOpenSettings","isopengroupimagetrimming","isload","isloadresults","user_id","gameresults","results","game_id","rank","setOpenSettings","resetOpenSettings","setOpenGroupImageTrimming","resetOpenGroupImageTrimming","startLoad","endLoad","startLoadResults","endLoadResults","selecGroup","selectGameResults","selectOpenSettings","selectOpenGroupImageTrimming","selectSelectProfile","selectIsStartLoad","selectIsLoadResults","Game","groupmember","openModal","setOpenModal","score1","setScore1","score2","setScore2","score3","setScore3","score4","setScore4","memts","setMemts","uma","setUma","ratelist","memberprofile","map","m","filter","gr","newGame","e","preventDefault","culcScore","ranklist","i","culcscore","cscore","Math","floor","ceil","r","pro","recodeScore","sort","b","comp","ratesum","rateave","round","s","resultspacket","game_main_container","game_main_body","page_title_select_member","group_title_h2","game_container","game_user_btn","game_body","game_selected_profile","game_avater","Avatar","game_start_btn","Number","target","match_radio_box_container","checked","GameResults","opendeleteresults","setOpenDeleteResults","slice","allgameresults","rateInfo","rateinfo","gm","deletegame","all","gameRate","ar","rm","window","location","reload","editGame","editscore","es","edits","TableRow","gameresult_container","TableCell","component","scope","results_table_p_blue","results_table_p_red","results_table_p","defaultValue","gameresults_btn_container","leavegroup_p","leavegroup_container","leavegroup_body","GroupImageTrimming","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","useCallback","croppedArea","setSrc","createImage","url","Promise","resolve","reject","image","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","toBlob","blob","updateImage","croppedImage","Date","now","newImage","File","lastModified","image_trimming_container","image_trimming_body","aspect","onCropChange","onZoomChange","image_tring_select","profile_image_icon_input","accept","event","files","reader","FileReader","readAsDataURL","IconButton","fileInput","getElementById","click","image_slider","Slider","max","step","aria-labelledby","z","modalStyle2","GroupSettings","isopensettings","setTitle","setText","setPassword","openleavegroup","setOpenLeaveGroup","loginuserprofile","updateGroup","updateText","updatePassword","updateTitle","leaveGroup","rate_pkt","groupsetting_modal_img","helperText","multiline","groupsetting_btn","leavegroup","leavegroup_p_c","GroupHome","istrue","setIsTrue","isopenpasswordwindow","setIsOpenPasswordWindow","notmatchpass","setNotMatchPass","useLayoutEffect","profileresults","isParti","participationGroup","flag","pkt","participationGroupWithPassword","classes","makeStyles","table","minWidth","maxWidth","useStyles","group_home_body_circular_container","group_home_container","group_home_body_container","group_home_body_top","group_home_body_top_groupinfo","group_home_body_top_groupinfo_container","group_img","groupImage","group_home_body_top_groupinfo_title","group_home_title","share_btn","FacebookShareButton","FacebookIcon","size","share_btn_icon","TwitterShareButton","TwitterIcon","LineShareButton","LineIcon","EmailShareButton","EmailIcon","group_home_body","group_home_container_left","group_home_menu","grouphome_btn","scrollTo","hgrouphome_menu_btn_h3","group_home_container_right","group_home_container_right_bottom","group_home_results","Table","aria-label","TableHead","gameresult","TableBody","participation_btn_container","participation_btn_body","participation_btn","participation_btn_h3","group_home_modal_container","group_home_modal_btn","GroupMember","updateRate","page_title_group_member","update_rate_btn","mem","MatchRecord","setDate","enddate","setEndDate","startday","endday","parse","selectgameresults","tartgetday","selectresult","selectprof","gamecount","rank1","rank2","rank3","rank4","table2","matchresult_title","selectdate_container","selectdate_body","InputLabelProps","shrink","selectdate_container_div","selectdate_container_h3","match_recode_table","prof","toFixed","result_matchrecode","results_table_not_exist_div","MemberDetail","nickname","finduser","average_rank","top_rate","las_rate","rentai_rate","average_score","las","rentai","setscore","memberdetail_container_top","memberdetail_container_top_body","memberdetail_prof","memberdetail_prof_avatar","memberdetail_prof_p_container","memberdetail_prof_p_name","memberdetail_prof_p","memberdetail_chart","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","domain","PolarRadiusAxis","tick","axisLine","Radar","stroke","fill","fillOpacity","align","match_recode_not_exist","Contact","sendmail","setSendMail","contact_container","contact_body","contact_packet","sender","message","rows","Disclaimer","Footer","footer_container","footer_p_div","footer_p","footer_link","ImageTrimming","isopenimagetrimming","Profile","isopenprofile","setName","proftext","updateProfile","updateName","profile_btn_container","profile_btn","removeItem","Header","useLocation","loginUserProfile","pathname","header_container","header_body","header_link","header_body_left","header_title_h3","header_img","header_body_right","header_nickname","BelongToGroupList","belong_to_group_container","belong_to_group_body_top","belong_to_group_img","belong_to_group_body_bottom","belong_to_group_h3","Search","groupName","setGroupName","setImage","rate_results","binaryData","URL","createObjectURL","Blob","create_group_container","hidden","Home","belongtogroup","rejected","home_container","home_grouplist_container","App","basename","path","exact","store","configureStore","reducer","authReducer","homeReducer","groupReducer","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2315dc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_body_header\":\"Auth_auth_body_header__2-7uk\",\"auth_body_header_img\":\"Auth_auth_body_header_img__1QtnC\",\"auth_title_h1\":\"Auth_auth_title_h1__cMeBj\",\"auth_title_p\":\"Auth_auth_title_p__3VvQ9\",\"auth_login_signup\":\"Auth_auth_login_signup__1cQgD\",\"auth_what_container\":\"Auth_auth_what_container__1axCf\",\"auth_what\":\"Auth_auth_what__3JuVb\",\"auth_what_h2\":\"Auth_auth_what_h2__yl-Sw\",\"auth_what_p\":\"Auth_auth_what_p__3Hg4P\",\"auth_how_to_container\":\"Auth_auth_how_to_container__39ofB\",\"auth_how_to_body\":\"Auth_auth_how_to_body__2-BeO\",\"auth_how_to\":\"Auth_auth_how_to__3rhwi\",\"auth_how_to_h2\":\"Auth_auth_how_to_h2__F6u1o\",\"how_to_p\":\"Auth_how_to_p__n-jaJ\",\"how_to_image_login\":\"Auth_how_to_image_login__yPbZI\",\"send_mail_container\":\"Auth_send_mail_container__2Kedp\",\"send_mail_p\":\"Auth_send_mail_p__3_whK\",\"login_failure_p\":\"Auth_login_failure_p__2dRiS\",\"login_signup_h2\":\"Auth_login_signup_h2__3WuxG\",\"switch_login_signup_btn\":\"Auth_switch_login_signup_btn__2e_05\",\"switch_login_signup_btn_container\":\"Auth_switch_login_signup_btn_container__2yZFw\",\"link_border\":\"Auth_link_border__jWxMx\",\"auth_login_main_container\":\"Auth_auth_login_main_container__2nR-b\",\"auth_login_title_container\":\"Auth_auth_login_title_container__25vZr\",\"auth_login_h2\":\"Auth_auth_login_h2__wz5s1\",\"auth_activate_p\":\"Auth_auth_activate_p__1DZPT\",\"activate_login_btn\":\"Auth_activate_login_btn__IS2q1\",\"password_reset_container\":\"Auth_password_reset_container__mTRCS\",\"password_reset_body\":\"Auth_password_reset_body__2chTC\",\"password_reset_h3\":\"Auth_password_reset_h3__1qYsn\",\"password_reset_p\":\"Auth_password_reset_p__2wkQd\",\"password_reset_btn\":\"Auth_password_reset_btn__3fG2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"Home_header_container__2Qe7c\",\"header_body\":\"Home_header_body__SpmCY\",\"header_link\":\"Home_header_link__1JSQ6\",\"header_title_h3\":\"Home_header_title_h3__2EKWI\",\"header_img\":\"Home_header_img__2_diT\",\"header_nickname\":\"Home_header_nickname__3ArQ6\",\"header_body_left\":\"Home_header_body_left__2XJBe\",\"header_body_right\":\"Home_header_body_right__3if6x\",\"home_container\":\"Home_home_container__jg87J\",\"home_grouplist_container\":\"Home_home_grouplist_container__2-ell\",\"create_group_container\":\"Home_create_group_container__1OFAY\",\"belong_to_group_container\":\"Home_belong_to_group_container__3mM5w\",\"belong_to_group_body_top\":\"Home_belong_to_group_body_top__20bSU\",\"belong_to_group_img\":\"Home_belong_to_group_img__3l9Hj\",\"belong_to_group_body_bottom\":\"Home_belong_to_group_body_bottom__3_1hp\",\"belong_to_group_h3\":\"Home_belong_to_group_h3__26MlS\",\"profile_btn\":\"Home_profile_btn__2AANt\",\"image_trimming_container\":\"Home_image_trimming_container__2GxXz\",\"image_tring_select\":\"Home_image_tring_select__jWR3t\",\"image_trimming_body\":\"Home_image_trimming_body__37xPH\",\"profile_image_icon_input\":\"Home_profile_image_icon_input__YueXn\",\"image_slider\":\"Home_image_slider__1u6i_\",\"footer_container\":\"Home_footer_container__1gwje\",\"footer_p_div\":\"Home_footer_p_div__3Nltc\",\"footer_link\":\"Home_footer_link__1lp0U\",\"contact_container\":\"Home_contact_container__G_spf\",\"contact_body\":\"Home_contact_body__3Kke5\"};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_AUTHEN, PROPS_PASSWORD_CONFIRM, PROPS_PROFILE, PROPS_UPDATE_PROFILE, PROPS_UPDATE_PROFILE_IMAGE} from '../types'\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//新規登録\r\nexport const fetchAsyncRegister=createAsyncThunk(\r\n    \"auth/register\",\r\n    async (auth: PROPS_AUTHEN) => {\r\n        const res = await axios.post(`${apiUrl}mahjong/register/`, auth, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }).catch(error=>{\r\n          return error.response\r\n        });\r\n        return res.data;\r\n    }\r\n);\r\n\r\n//有効化\r\nexport const fetchAsyncActivateUser = createAsyncThunk(\"activate/get\", async (token:string) => {\r\n  const res = await axios.get(`${apiUrl}mahjong/activate/${token}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return res.data;\r\n});\r\n//ユーザーが存在するか\r\nexport const fetchAsyncGetUser=createAsyncThunk(\r\n  \"user/get\",\r\n  async (email: string) => {\r\n    const res = await axios.get(`${apiUrl}mahjong/checkuser/${email}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//プロフィール作成\r\nexport const fetchAsyncCreateProf = createAsyncThunk(\r\n  \"profile/post\",\r\n  async (nickName: PROPS_PROFILE) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/profile/`, nickName, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//アップデート(プロフィール以外)\r\nexport const fetchAsyncUpdateProf = createAsyncThunk(\r\n  \"profile/put\",\r\n  async (profile:PROPS_UPDATE_PROFILE) => {\r\n    const res = await axios.put(\r\n      `${apiUrl}mahjong/profile/${profile.id}/`,\r\n      profile,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  }\r\n);\r\nexport const fetchAsyncUpdateProfImage = createAsyncThunk(\r\n  \"profileimage/put\",\r\n  async (profileimage:PROPS_UPDATE_PROFILE_IMAGE ) => {\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"nickName\", profileimage.nickName);\r\n    uploadData.append(\"text\", profileimage.text);\r\n    profileimage.img &&uploadData.append(\"img\",profileimage.img,profileimage.name);\r\n    const res = await axios.put(\r\n      `${apiUrl}mahjong/profile/${profileimage.id}/`,\r\n      uploadData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    \r\n    return res.data;\r\n  }\r\n);\r\n//ログイン\r\nexport const fetchAsyncLogin = createAsyncThunk(\r\n    \"auth/post\",\r\n    async (authen: PROPS_AUTHEN) => {\r\n      const res = await axios.post(`${apiUrl}authen/jwt/create`, authen, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).catch(error=>{\r\n        return error.response\r\n      });\r\n      return res.data;\r\n      //取得に成功したらローカルに保存\r\n    }\r\n);\r\n\r\n//ログインしたユーザーのプロフィール\r\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\r\n  const res = await axios.get(`${apiUrl}mahjong/loginuserprofile/`, {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.localJWT}`,\r\n    },\r\n  });\r\n  return res.data[0];\r\n});\r\n//パスワードリセット\r\nexport const fetchAsyncPasswordReset = createAsyncThunk(\r\n  \"passwordreset/post\",\r\n  async (email: {email:string}) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/auth/password_reset/`, email, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).catch(error=>{\r\n      return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//パスワード再設定\r\nexport const fetchAsyncPasswordConfirm=createAsyncThunk(\r\n  \"passwordconfirm/post\",\r\n  async(password:PROPS_PASSWORD_CONFIRM)=>{\r\n    const res = await axios.post(`${apiUrl}rest-auth/password/reset/confirm/`, password, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).catch(error=>{\r\n      return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const authSlice=createSlice({\r\n    name:'auth',\r\n    initialState:{\r\n      openSignIn: true,\r\n      login_user_profile: {\r\n        id: 0,\r\n        nickName: \"\",\r\n        text:\"\",\r\n        userProfile: 0,\r\n        created_at: \"\",\r\n        img: \"\",\r\n      },\r\n    },\r\n    reducers:{\r\n      setOpenSignIn(state) {\r\n        state.openSignIn = true;\r\n      },\r\n      resetOpenSignIn(state) {\r\n        state.openSignIn = false;\r\n      },\r\n    },\r\n    extraReducers:(builder)=>{\r\n        //ログインが成功したらjwtをローカルに保存\r\n        builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\r\n            if(action.payload.detail!==\"No active account found with the given credentials\"){\r\n              localStorage.setItem(\"localJWT\", action.payload.access);\r\n            };\r\n        });\r\n        builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\r\n          state.login_user_profile = action.payload;\r\n        }); \r\n        builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\r\n          state.login_user_profile = action.payload;\r\n        });    \r\n        builder.addCase(fetchAsyncUpdateProfImage.fulfilled,(state,action)=>{\r\n          state.login_user_profile=action.payload;\r\n        }); \r\n    },\r\n});\r\n\r\nexport const {\r\n  setOpenSignIn,\r\n  resetOpenSignIn,\r\n} = authSlice.actions;\r\n\r\nexport const selectLoginUserProfile = (state: RootState) => state.auth.login_user_profile;\r\nexport const selectOpenSignIn=(state:RootState)=>state.auth.openSignIn;\r\nexport default authSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_CONTACT,PROPS_CREATE_GROUP} from '../types'\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//所属しているグループを取得\r\nexport const fetchAsyncGetBelongToGroup = createAsyncThunk(\"belongtogroup/get\", async () => {\r\n    const res = await axios.get(`${apiUrl}mahjong/groupmember/`, {\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    });\r\n    return res.data.reverse();\r\n});\r\n\r\n//グループ新規作成\r\nexport const fetchAsyncCreateGroup = createAsyncThunk(\r\n    \"group/post\",\r\n    async (newGroup: PROPS_CREATE_GROUP) => {\r\n      const groupData = new FormData();\r\n      groupData.append(\"title\",newGroup.title);\r\n      groupData.append(\"text\",newGroup.text);\r\n      groupData.append(\"password\",newGroup.password);\r\n      newGroup.img && groupData.append(\"img\", newGroup.img, newGroup.img.name);\r\n      const res = await axios.post(`${apiUrl}mahjong/group/`, groupData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      })\r\n      return res.data;\r\n});\r\n\r\n//お問い合わせ\r\nexport const fetchAsyncPostContact=createAsyncThunk(\r\n  \"contact/post\",\r\n  async (data:PROPS_CONTACT)=>{\r\n    const res = await axios.post(`${apiUrl}mahjong/contact/`, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  });\r\n\r\nexport const homeSlice=createSlice({\r\n    name:'home',\r\n    initialState:{\r\n        backUrl:\"\",\r\n        isOpenProfile:false,\r\n        isOpenImageTrimming:false,\r\n        belongToGroup:[{\r\n            id: 0,\r\n            title: \"\",\r\n            text:\"\",\r\n            password:\"\",\r\n            img:\"\",\r\n            profile:[\r\n                {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                    is_active:true,                    \r\n                }\r\n            ],\r\n        }],\r\n    },\r\n    reducers:{\r\n      setBackUrl(state,action){\r\n        state.backUrl=action.payload;\r\n      },\r\n      resetBackUrl(state){\r\n        state.backUrl=\"\";\r\n      },\r\n      setOpenProfile(state){\r\n        state.isOpenProfile=true;\r\n      },\r\n      resetOpenProfile(state){\r\n        state.isOpenProfile=false;\r\n      },\r\n      setImageTrimming(state){\r\n        state.isOpenImageTrimming=true;\r\n      },\r\n      resetImageTrimming(state){\r\n        state.isOpenImageTrimming=false;\r\n      }\r\n    },\r\n    extraReducers:(builder)=>{\r\n        builder.addCase(fetchAsyncGetBelongToGroup.fulfilled, (state, action) => {\r\n            state.belongToGroup = action.payload;\r\n        });\r\n      //   // builder.addCase(fetchAsyncCreateGroup.fulfilled, (state, action) => {\r\n      //   //   return {\r\n      //   //     ...state,\r\n      //   //     belongToGroup: [ action.payload,...state.belongToGroup],\r\n      //   // };\r\n      // });\r\n    },\r\n});\r\n\r\nexport const {\r\n setBackUrl,\r\n resetBackUrl,\r\n setOpenProfile,\r\n resetOpenProfile,\r\n setImageTrimming,\r\n resetImageTrimming,\r\n} = homeSlice.actions;\r\n\r\nexport const selectBelongToGroup=(state:RootState)=>state.home.belongToGroup;\r\nexport const selectBackUrl=(state:RootState)=>state.home.backUrl;\r\nexport const selectIsOpenProfile=(state:RootState)=>state.home.isOpenProfile;\r\nexport const selectIsOpenImageTrimming=(state:RootState)=>state.home.isOpenImageTrimming;\r\nexport default homeSlice.reducer;","import { Button, TextField } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncActivateUser, fetchAsyncCreateProf,fetchAsyncLogin } from './authSlice';\r\nimport * as Yup from \"yup\";\r\nimport { resetBackUrl, selectBackUrl } from '../home/homeSlice';\r\nimport styles from './Auth.module.css';\r\n\r\nconst Activate:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ token: string }>();\r\n    const backurl=useSelector(selectBackUrl);\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if(params.token!==\"\"){\r\n              console.log(params.token)\r\n              await dispatch(fetchAsyncActivateUser(params.token));   \r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.token]);\r\n    return (\r\n\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\"}}\r\n\r\n                onSubmit={async (values) => {\r\n                    const result = await dispatch(fetchAsyncLogin(values));\r\n                    console.log(result)\r\n                    if (fetchAsyncLogin.fulfilled.match(result)) {\r\n                        const res=await dispatch(fetchAsyncCreateProf({ nickName: \"no name\"}));\r\n                        if(fetchAsyncCreateProf.fulfilled.match(res)){\r\n                            if(backurl===\"\"){\r\n                                history.push('/home');\r\n                            }else{\r\n                                history.push(backurl);\r\n                                dispatch(resetBackUrl());\r\n                            }\r\n                        }\r\n                    }else{\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                    }   \r\n                }}\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email(\"メールアドレスのフォーマットが不正です。\")\r\n                    .required(\"メールアドレスは必須です。\"),\r\n                password: Yup.string().required(\"パスワードは必須です。\").min(4),\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    <div className={styles.auth_login_main_container}>\r\n                       <div className={styles.auth_login_main_body}>\r\n                           <p className={styles.auth_activate_p}> 登録が完了しました</p>\r\n                           <p className={styles.auth_activate_p}> 以下のログインフォームよりログインしてください</p>\r\n                        <div className={styles.auth_login_title_container}>\r\n                            <h2 className={styles.auth_login_h2}>ログイン</h2>\r\n                        </div>\r\n                    \r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className={styles.auth_login_title_container}>\r\n                                <TextField\r\n                                    placeholder=\"email\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                <div >{errors.email}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                <div >{errors.password}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                <div className={styles.activate_login_btn}>\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">ログイン</Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Activate\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport {Button,TextField} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport Modal from \"react-modal\";\r\nimport styles from './Auth.module.css';\r\nimport {\r\n    fetchAsyncGetUser,\r\n    fetchAsyncRegister,\r\n    setOpenSignIn,\r\n} from './authSlice';\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:4,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 180,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst SignUp:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [sendEmail,setSendEmail]=useState(false);\r\n    const [successCreateAccount,setSuccessCreateAccount]=useState(false);\r\n    return (\r\n        <>\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\",password2:\"\" }}\r\n                \r\n                onSubmit={async (values) => {\r\n                    const res=await dispatch(fetchAsyncGetUser(values.email));\r\n                    if(res.payload.length===0){\r\n                        setSendEmail(true);\r\n                        setSuccessCreateAccount(false);\r\n                        const auth_packet={email: values.email,password: values.password}\r\n                        const resultRegister = await dispatch(fetchAsyncRegister(auth_packet));\r\n                        //新規作成に成功したらログイン\r\n                        if (fetchAsyncRegister.fulfilled.match(resultRegister)) {\r\n                            if (resultRegister.payload.email===values.email){\r\n                                setSuccessCreateAccount(false);\r\n                            }else{\r\n                                values.email=\"\";\r\n                                values.password=\"\";\r\n                                values.password2=\"\";\r\n                                setSendEmail(false);\r\n                                setSuccessCreateAccount(true);\r\n                            }\r\n                        }else{\r\n                            values.email=\"\";\r\n                            values.password=\"\";\r\n                            values.password2=\"\";\r\n                            setSendEmail(false);\r\n                            setSuccessCreateAccount(true);\r\n                        }  \r\n                    } else{\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                        values.password2=\"\";\r\n                        setSendEmail(false);\r\n                        setSuccessCreateAccount(true);\r\n                    }  \r\n                }\r\n            }\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                            .email(\"メールアドレスのフォーマットが不正です。\")\r\n                            .required(\"メールアドレスは必須です。\"),\r\n                    password: Yup.string().required(\"パスワードは必須です。\").min(8),\r\n                    password2:Yup.string().required(\"確認パスワードは必須です。\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    <div className=\"auth_login_main_container\">\r\n                        {/* <div className=\"css_styles.auth_progress\">\r\n                            {isLoadingAuth && <CircularProgress />}\r\n                        </div> */}\r\n                        {successCreateAccount\r\n                        ?\r\n                            <div>\r\n                                <p className={styles.login_failure_p}>このメールアドレスは既に登録されています</p>\r\n                            </div>:null}\r\n                        <div className=\"\">\r\n                            <h2 className={styles.login_signup_h2}>アカウント作成</h2>\r\n                        </div>\r\n                        \r\n                        <form onSubmit={handleSubmit}>\r\n                            <div >\r\n                                <TextField\r\n                                    placeholder=\"email\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                    <div >{errors.email}</div>\r\n                                    ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                    <div >{errors.password}</div>\r\n                                    ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                <TextField\r\n                                    placeholder=\"confirm password\"\r\n                                    type=\"password\"\r\n                                    name=\"password2\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password2}\r\n                                />\r\n                                {touched.password2 && errors.password2 ? (\r\n                                    <div >{errors.password2}</div>\r\n                                    ) : null}\r\n                                <div className=\"\">\r\n                                    <br/>\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                        アカウント作成\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <span className={styles.switch_login_signup_btn} onClick={async () => {\r\n                                            dispatch(setOpenSignIn());              \r\n                                        }}>\r\n                                            アカウントをお持ちの方はこちら\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n        <Modal\r\n                isOpen={sendEmail}\r\n                onRequestClose={()=>{\r\n                    setSendEmail(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className={styles.send_mail_container}>\r\n                <div>\r\n                    <p className={styles.send_mail_p}>ご登録いただいたメールアドレスに確認メールを送信しました。</p>\r\n                    <p className={styles.send_mail_p}>メールより本登録をお願いします。</p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\" color=\"primary\"\r\n                        onClick={()=>{setSendEmail(false)}}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n                </div>\r\n                </div>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React,{useState} from 'react'\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport {CircularProgress,Button,TextField} from \"@material-ui/core\";\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    fetchAsyncLogin,\r\n    fetchAsyncGetMyProf,\r\n    fetchAsyncCreateProf,\r\n    resetOpenSignIn,\r\n} from './authSlice';\r\nimport { resetBackUrl, selectBackUrl } from '../home/homeSlice';\r\n\r\nconst Login:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [falseLogin,setfalseLogin]=useState(false);\r\n    const history = useHistory();\r\n    const backurl=useSelector(selectBackUrl);\r\n    const [isloginloading,setIsLoginLoading]=useState(false);\r\n    return (\r\n        <div　className=\"auth_container\">\r\n            <Formik\r\n                initialErrors={{ email: \"required\" }}\r\n                initialValues={{ email: \"\", password: \"\"}}\r\n\r\n                onSubmit={async (values) => {\r\n                    setIsLoginLoading(true);\r\n                    const result = await dispatch(fetchAsyncLogin(values));\r\n                    if (fetchAsyncLogin.fulfilled.match(result)) {\r\n                        if(result.payload.detail!==\"No active account found with the given credentials\"){\r\n                            const login=await dispatch(fetchAsyncGetMyProf());\r\n                            if(login.payload.length===0){\r\n                                await dispatch(fetchAsyncCreateProf({ nickName: \"no name\"}));\r\n                            }\r\n                            if(!backurl.includes('/group')){\r\n                                setIsLoginLoading(false);\r\n                                history.push('/home');\r\n                            }else{\r\n                                setIsLoginLoading(false);\r\n                                history.push(backurl);\r\n                                dispatch(resetBackUrl());\r\n                            }\r\n                        }else{\r\n                            //有効化されていない\r\n                            values.email=\"\";\r\n                            values.password=\"\";\r\n                            setfalseLogin(true);\r\n                            setIsLoginLoading(false);\r\n                        }\r\n                    }else{\r\n                        //fetch失敗\r\n                        values.email=\"\";\r\n                        values.password=\"\";\r\n                        setfalseLogin(true);\r\n                        setIsLoginLoading(false);\r\n                    } \r\n                    \r\n                }}\r\n                //バリデーション\r\n                validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email(\"メールアドレスのフォーマットが不正です。\")\r\n                    .required(\"メールアドレスは必須です。\"),\r\n                password: Yup.string().required(\"パスワードは必須です。\").min(4),\r\n                })}\r\n            >\r\n            {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n            }) => (\r\n                    <div className=\"auth_login_main_container\">\r\n                        {/* <div className=\"css_styles.auth_progress\">\r\n                            {isLoadingAuth && <CircularProgress />}\r\n                        </div> */}\r\n                        {falseLogin?<p className={styles.login_failure_p}>ログインに失敗しました</p>:null}\r\n                        <div className=\"\">\r\n                            <h2 className={styles.login_signup_h2}>ログイン</h2>\r\n                        </div>\r\n                        {isloginloading &&<CircularProgress/>}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div >\r\n                                <TextField\r\n                                    placeholder=\"email\"\r\n                                    type=\"input\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}//formikのバリデーションを走らせる\r\n                                    onBlur={handleBlur}//マウスが外れた時に走らせる\r\n                                    value={values.email}\r\n                                />\r\n                                <br />\r\n                                {touched.email && errors.email ? (\r\n                                <div >{errors.email}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <TextField\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                />\r\n                                {touched.password && errors.password ? (\r\n                                <div >{errors.password}</div>\r\n                                ) : null}\r\n                                <br />\r\n                                <br/>\r\n                                \r\n                                <div className=\"\">\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">ログイン</Button>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <span className={styles.switch_login_signup_btn} onClick={async () => {\r\n                                            dispatch(resetOpenSignIn());              \r\n                                        }}>\r\n                                            アカウントをお持ちでない方はこちら\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className={styles.switch_login_signup_btn_container}>\r\n                                        <Link to='/password/reset' className={styles.link_border}>\r\n                                            <span className={styles.switch_login_signup_btn}>パスワードをお忘れですか？</span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/fish_shark.2115d784.png\";","export default __webpack_public_path__ + \"static/media/login.abe58191.jpg\";","export default __webpack_public_path__ + \"static/media/home.3577b292.jpg\";","export default __webpack_public_path__ + \"static/media/grouphome.36919f52.jpg\";","export default __webpack_public_path__ + \"static/media/mahjong.b672d188.jpg\";","import React from 'react'\r\nimport { useSelector} from \"react-redux\";\r\nimport {selectOpenSignIn,} from './authSlice';\r\nimport SignUp from './SignUp';\r\nimport Login from './Login';\r\nimport styles from './Auth.module.css';\r\nimport img from './fish_shark.png';\r\nimport loginImage from './login.jpg';\r\nimport home from './home.jpg';\r\nimport grouphome from './grouphome.jpg';\r\nimport mahjong from './mahjong.jpg';\r\nconst Auth:React.FC = () => {\r\n    const openSignIn = useSelector(selectOpenSignIn); \r\n    return (\r\n        <>\r\n            <div className={styles.auth_container}>\r\n                <div className={styles.auth_body}>\r\n                    <div className={styles.auth_body_header}>\r\n                        <img src={img} className={styles.auth_body_header_img} alt='heade-img'/>\r\n                        <h1 className={styles.auth_title_h1}>グループ麻雀レコード</h1>\r\n                        <p className={styles.auth_title_p}>グループごとに麻雀の成績を管理</p>\r\n                    </div>\r\n                    <div className={styles.auth_login_signup}>\r\n                        {!openSignIn\r\n                        ?<>\r\n                            {/* サインアップ */}\r\n                            <SignUp/>\r\n                        </>\r\n                        :<> \r\n                            {/* サインイン  */}\r\n                            <Login/>\r\n                        </>}\r\n                    </div>\r\n                    <div className={styles.auth_what_container}>\r\n                        <div className={styles.auth_what}>\r\n                            <h2 className={styles.auth_what_h2}>グループ麻雀レコードとは</h2>\r\n                        </div>\r\n                        <p className={styles.auth_what_p}>グループを作成してグループごとに麻雀の成績を管理することができます。</p>\r\n                        <div className={styles.auth_how_to}>\r\n                            <h2 className={styles.auth_how_to_h2}>使い方</h2>\r\n                        </div>\r\n                        <div className={styles.auth_how_to_container}>\r\n                            <div className={styles.auth_how_to_body}>\r\n                                <div>\r\n                                    <p className={styles.how_to_p}>1. ログイン又はアカウントを作成します</p>\r\n                                    <img src={loginImage} className={styles.how_to_image_login} alt=\"img\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={styles.how_to_p}>2. グループを作成します。</p>\r\n                                    <img src={home} className={styles.how_to_image_login} alt=\"img\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={styles.how_to_p}>3. グループに参加します。</p>\r\n                                    <img src={grouphome} className={styles.how_to_image_login} alt=\"img\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={styles.how_to_p}>4. ルールを守って楽しく対局!!</p>\r\n                                    <img src={mahjong} className={styles.how_to_image_login}alt=\"img\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\n\r\nconst Auth_done:React.FC = () => {\r\n    return (\r\n        <div>\r\n            メールを送信しました。メールより本登録をお願いします。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth_done\r\n","import { Formik } from 'formik';\r\nimport React from 'react'\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button,TextField } from '@material-ui/core';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncPasswordConfirm } from './authSlice';\r\n\r\nconst PasswordConfirm:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ uid: string,token:string }>();\r\n    return (\r\n        <div className={styles.password_reset_container}>\r\n            <div className={styles.password_reset_body}>\r\n                <h3 className={styles.password_reset_h3}>新しいパスワードを入力</h3>\r\n                <p className={styles.password_reset_p}>新しいパスワードを入力してください。</p>\r\n                <p className={styles.password_reset_p}>パスワードは8文字以上です。</p>\r\n            <Formik\r\n                    initialErrors={{ password1: \"required\" }}\r\n                    initialValues={{ password1: \"\",password2:\"\"}}\r\n                    onSubmit={async (values) => {\r\n                        if(values.password1===values.password2){\r\n                            const packet={new_password1:values.password1,new_password2:values.password2,uid:params.uid,token:params.token};\r\n                            await dispatch(fetchAsyncPasswordConfirm(packet));\r\n                        }\r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        password1: Yup.string().required(\"パスワードは必須です。\").min(8),\r\n                        password2:Yup.string().required(\"確認パスワードは必須です。\").oneOf([Yup.ref(\"password1\"), null], \"Passwords must match\")\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"パスワード\"\r\n                                        placeholder=\"パスワード\"\r\n                                        type=\"password\"\r\n                                        name=\"password1\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password1}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.password1 && errors.password1 ? (\r\n                                        <div >{errors.password1}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"確認パスワード\"\r\n                                        placeholder=\"確認パスワード\"\r\n                                        type=\"password\"\r\n                                        name=\"password2\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password2}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.password2 && errors.password2 ? (\r\n                                        <div >{errors.password2}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                            \r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n                <div className=\"\">\r\n                    <p className={styles.password_reset_btn} onClick={()=>{history.push('/')}}>\r\n                        ログイン画面へ\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordConfirm\r\n","import { Formik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport styles from './Auth.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button,TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncPasswordReset } from './authSlice';\r\nconst PasswordReset:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [sendemal,setSendEmail]=useState(false);\r\n    return (\r\n        <div className={styles.password_reset_container}>\r\n            <div className={styles.password_reset_body}>\r\n            {!sendemal?\r\n            <>\r\n            <h3 className={styles.password_reset_h3}>パスワード再設定</h3>\r\n            <p className={styles.password_reset_p}>登録したメールアドレスを入力してください。</p>\r\n            <p className={styles.password_reset_p}>パスワード再設定用のURLをメールに送信します。</p>\r\n            <Formik\r\n                    initialErrors={{ email: \"required\" }}\r\n                    initialValues={{ email: \"\"}}\r\n                    \r\n                    onSubmit={async (values) => {\r\n                        setSendEmail(true);\r\n                        const result= await dispatch(fetchAsyncPasswordReset({email:values.email}));\r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string()\r\n                                .email(\"メールアドレスが不正です。\")\r\n                                .required(\"メールアドレスは必須です。\"),\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"メールアドレス\"\r\n                                        placeholder=\"メールアドレス\"\r\n                                        type=\"input\"\r\n                                        name=\"email\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.email && errors.email ? (\r\n                                        <div >{errors.email}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                            \r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n                </>:\r\n                    <div>\r\n                        <h3 className={styles.password_reset_h3}>メールを送信しました。</h3>\r\n                    </div>\r\n                }\r\n                <div className=\"\">\r\n                    <p className={styles.password_reset_btn} onClick={()=>{history.push('/')}}>\r\n                        ログイン画面へ\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport axios from \"axios\";\r\nimport {PROPS_CREATE_GAME,PROPS_CREATE_GAME_RESLTS, PROPS_CREATE_RATE, PROPS_EDIT_GAME_RESULTS, PROPS_PARTICIPATION, PROPS_RATE, PROPS_RATE_IS_ACTIVE, PROPS_UPDATE_GROUP, PROPS_UPDATE_GROUP_IMAGE} from '../types'\r\n\r\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\r\n\r\n//グループに参加\r\nexport const fetchAsyncParticipationGroup=createAsyncThunk(\r\n  \"group/patch\",\r\n  async(participations:PROPS_PARTICIPATION)=>{\r\n    const uploadData = new FormData();\r\n    participations.userGroup.forEach((member)=>{\r\n      uploadData.append(\"userGroup\", String(member));\r\n    })\r\n    const res = await axios.patch(`${apiUrl}mahjong/group/${participations.id}/`,uploadData ,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n        return error.response;\r\n    }); \r\n    return res.date;\r\n  });\r\n//レート作成\r\nexport const fetchAsyncCreateRate = createAsyncThunk(\r\n  \"rate/post\",\r\n  async (rate:PROPS_CREATE_RATE) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/rate/`, rate, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    .catch(error => {\r\n        return error.response;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n\r\n//所属しているグループを取得\r\nexport const fetchAsyncGetGroup = createAsyncThunk(\"group/get\", async (id:string) => {\r\n    const res = await axios.get(`${apiUrl}mahjong/selectgroupmember/`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n      params:{\r\n        id:`${id}`,\r\n      },\r\n    });\r\n    return res.data[0];\r\n });\r\n //グループ更新\r\n export const fetchAsyncUpdateGroup = createAsyncThunk(\r\n  \"groupinfo/patch\",\r\n  async (group:PROPS_UPDATE_GROUP) => {\r\n    const res = await axios.patch(\r\n      `${apiUrl}mahjong/group/${group.id}/`,\r\n      group,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    return res.data;\r\n  }\r\n);\r\nexport const fetchAsyncUpdateGroupImage = createAsyncThunk(\r\n  \"groupimage/patch\",\r\n  async (groupimage:PROPS_UPDATE_GROUP_IMAGE ) => {\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"title\", groupimage.title);\r\n    uploadData.append(\"text\", groupimage.text);\r\n    uploadData.append(\"password\",groupimage.password);\r\n    groupimage.img &&uploadData.append(\"img\",groupimage.img,groupimage.name);\r\n    const res = await axios.patch(\r\n      `${apiUrl}mahjong/group/${groupimage.id}/`,\r\n      uploadData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.localJWT}`,\r\n        },\r\n      }\r\n    )\r\n    return res.data;\r\n  }\r\n);\r\n //ゲーム結果\r\n export const fetchAsyncGetGameResults = createAsyncThunk(\"gameresults/get\", async (id:string) => {\r\n  const res = await axios.get(`${apiUrl}mahjong/results/`, {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.localJWT}`,\r\n    },\r\n    params:{\r\n      group_id:`${id}`,\r\n    },\r\n  });\r\n  return res.data;\r\n});\r\n//ゲーム開始\r\nexport const fetchAsyncCreateGame = createAsyncThunk(\r\n  \"game/post\",\r\n  async (id: PROPS_CREATE_GAME) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/game/`, id, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  }\r\n);\r\n//ゲーム削除\r\nexport const fetchAsyncDeleteGame = createAsyncThunk(\r\n  \"game/delete\",\r\n  async (id: number) => {\r\n    await axios.delete(`${apiUrl}mahjong/game/${id}`,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return id;\r\n  }\r\n);\r\n//スコア記録\r\nexport const fetchAsyncCreateGameResults=createAsyncThunk(\r\n  \"gameresults/post\",\r\n  async (score: PROPS_CREATE_GAME_RESLTS) => {\r\n    const res = await axios.post(`${apiUrl}mahjong/gameresults/`, score, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    })\r\n    return res.data;\r\n  }\r\n);\r\n//スコア更新\r\nexport const fetchAsyncEditGameResults=createAsyncThunk(\r\n  \"gameresults/patch\",\r\n  async (game_results: PROPS_EDIT_GAME_RESULTS) => {\r\n    const res = await axios.patch(`${apiUrl}mahjong/gameresults/${game_results.id}/`, game_results, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n        return error.response\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//レート更新\r\nexport const fetchAsyncPutRate=createAsyncThunk(\r\n  \"rate/patch\",\r\n  async(rate_info:PROPS_RATE)=>{\r\n    const res = await axios.patch(`${apiUrl}mahjong/rate/${rate_info.rate_id}/`, rate_info, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n      return error.renponse;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//グループからユーザーを脱退\r\nexport const fetchAsyncRateIsActive=createAsyncThunk(\r\n  \"rateisactive/patch\",\r\n  async(rate_info:PROPS_RATE_IS_ACTIVE)=>{\r\n    const res = await axios.patch(`${apiUrl}mahjong/rate/${rate_info.rate_id}/`, rate_info, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n    }).catch(error => {\r\n      return error.response;\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n//選択したユーザー\r\nexport const fetchAsyncGetSelectProfile=createAsyncThunk(\r\n  \"selectprof/get\",\r\n  async(id:string)=>{\r\n    const res=await axios.get(`${apiUrl}mahjong/selectuserprofile/`,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.localJWT}`,\r\n      },\r\n      params:{\r\n        id:`${id}`,\r\n      },\r\n    });\r\n    return res.data[0];\r\n  }\r\n);\r\n\r\nexport const groupSlice=createSlice({\r\n    name:'home',\r\n    initialState:{\r\n      isOpenSettings:false,\r\n      isopengroupimagetrimming:false,\r\n      isload:false,\r\n      isloadresults:false,\r\n        group:{\r\n            id: 0,\r\n            title: \"\",\r\n            text:\"\",\r\n            password:\"\",\r\n            img:\"\",\r\n            profile:[\r\n                {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                    rate_id:0,\r\n                    group_id:0,\r\n                    user_id: 0,\r\n                    rate: 1500,\r\n                    is_active:false,\r\n                }\r\n            ],\r\n        },\r\n        gameresults:[\r\n          {\r\n            id:0,\r\n            group_id:0,\r\n            created_at:\"\",\r\n            results:[\r\n              {\r\n                id:0,\r\n                game_id:0,\r\n                user_id:0,\r\n                rank:0,\r\n                score:0,\r\n                profile:\r\n                  {\r\n                    id: 0,\r\n                    nickName: \"\",\r\n                    text:\"\",\r\n                    userProfile: 0,\r\n                    created_on: \"\",\r\n                    img: \"\",\r\n                  }\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        profile:\r\n          {\r\n            id: 0,\r\n            nickName: \"\",\r\n            text:\"\",\r\n            userProfile: 0,\r\n            created_on: \"\",\r\n            img: \"\",\r\n          }\r\n    },\r\n    reducers:{\r\n      setOpenSettings(state) {\r\n        state.isOpenSettings = true;\r\n      },\r\n      resetOpenSettings(state) {\r\n        state.isOpenSettings = false;\r\n      },\r\n      setOpenGroupImageTrimming(state) {\r\n        state.isopengroupimagetrimming = true;\r\n      },\r\n      resetOpenGroupImageTrimming(state) {\r\n        state.isopengroupimagetrimming = false;\r\n      },\r\n      startLoad(state){\r\n        state.isload=true;\r\n      },\r\n      endLoad(state){\r\n        state.isload=false;\r\n      },\r\n      startLoadResults(state){\r\n        state.isloadresults=true;\r\n      },\r\n      endLoadResults(state){\r\n        state.isloadresults=false;\r\n      }\r\n    },\r\n    extraReducers:(builder)=>{\r\n      builder.addCase(fetchAsyncGetGroup.fulfilled, (state, action) => {\r\n        state.group = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncGetSelectProfile.fulfilled, (state, action) => {\r\n        state.profile = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncGetGameResults.fulfilled, (state, action) => {\r\n        state.gameresults = action.payload;\r\n      });\r\n      builder.addCase(fetchAsyncUpdateGroupImage.fulfilled, (state, action) => {\r\n        state.group.img = action.payload.img;\r\n        state.group.title = action.payload.title;\r\n        state.group.text=action.payload.text;\r\n        state.group.password=action.payload.password;\r\n      });\r\n      builder.addCase(fetchAsyncUpdateGroup.fulfilled, (state, action) => {\r\n        state.group.title = action.payload.title;\r\n        state.group.text=action.payload.text;\r\n        state.group.password=action.payload.password;\r\n      });\r\n      // builder.addCase(fetchAsyncDeleteGame.fulfilled,(state,action)=>{\r\n      //     return {\r\n      //       ...state,\r\n      //       gameresults:state.gameresults.filter((g)=>g.id!==action.payload),\r\n      //     };\r\n      // });\r\n\r\n    },\r\n});\r\n\r\nexport const {\r\n setOpenSettings,\r\n resetOpenSettings,\r\n setOpenGroupImageTrimming,\r\n resetOpenGroupImageTrimming,\r\n startLoad,\r\n endLoad,\r\n startLoadResults,\r\n endLoadResults,\r\n} = groupSlice.actions;\r\n\r\nexport const selecGroup=(state:RootState)=>state.group.group;\r\nexport const selectGameResults=(state:RootState)=>state.group.gameresults;\r\nexport const selectOpenSettings=(state:RootState)=>state.group.isOpenSettings;\r\nexport const selectOpenGroupImageTrimming=(state:RootState)=>state.group.isopengroupimagetrimming;\r\nexport const selectSelectProfile=(state:RootState)=>state.group.profile;\r\nexport const selectIsStartLoad=(state:RootState)=>state.group.isload;\r\nexport const selectIsLoadResults=(state:RootState)=>state.group.isloadresults;\r\nexport default groupSlice.reducer;","import { Avatar, TextField,} from '@material-ui/core';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGroup, selecGroup,fetchAsyncCreateGame,fetchAsyncPutRate, fetchAsyncCreateGameResults } from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport Modal from \"react-modal\";\r\n\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst Game:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const [openModal,setOpenModal]=useState(false);\r\n    const [score1,setScore1]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score2,setScore2]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score3,setScore3]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score4,setScore4]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [memts,setMemts]=useState<number[]>([]);\r\n    const [uma, setUma] = useState('5-10');\r\n    \r\n    let ratelist:{\r\n        rate_id: number;\r\n        group_id: number;\r\n        user_id: number;\r\n        rate: number;\r\n    }[]=[]\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGroup(params.id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n    \r\n    const setUserId=(id:number):void=>{\r\n        if(!memts.includes(id)){\r\n            setMemts([\r\n                ...memts,\r\n                id,\r\n            ]);\r\n        }else{\r\n            setMemts(memts.filter((i) => i !== id));\r\n        }\r\n    }\r\n    //選択したメンバーのプロフィール\r\n    const memberprofile=memts.map((m)=>{\r\n         return groupmember.filter((gr)=>{\r\n            return gr.userProfile===m;\r\n        })[0]\r\n    })\r\n\r\n    const newGame = async (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        setOpenModal(true);\r\n    };\r\n    //スコア計算\r\n    function culcScore(ranklist:{id:number,score:number}[]):{id:number,score:number,rank:number}[]{\r\n        let score:{id:number,score:number,rank:number}[]=[]\r\n        ratelist=[]\r\n        let i=1;\r\n        ranklist.forEach((rank)=>{\r\n            let culcscore:number=0\r\n            if(rank.score>=0){\r\n                let cscore=(rank.score+400)/1000;\r\n                cscore=Math.floor(cscore);\r\n                culcscore=cscore-30;\r\n            }else{\r\n                let cscore=(rank.score-400)/1000;\r\n                cscore=Math.ceil(cscore);\r\n                culcscore=cscore-30;\r\n            }\r\n            // ウマの計算\r\n            if(uma===\"5-10\"){\r\n                if(i===1){culcscore=culcscore+20+10;}\r\n                if(i===2){culcscore=culcscore+5;}\r\n                if(i===3){culcscore=culcscore-5;}\r\n                if(i===4){culcscore=culcscore-10};\r\n            }else if(uma===\"10-20\"){\r\n                if(i===1){culcscore=culcscore+20+20;}\r\n                if(i===2){culcscore=culcscore+10;}\r\n                if(i===3){culcscore=culcscore-10;}\r\n                if(i===4){culcscore=culcscore-20};\r\n            }else if(uma===\"10-30\"){\r\n                if(i===1){culcscore=culcscore+20+30;}\r\n                if(i===2){culcscore=culcscore+10;}\r\n                if(i===3){culcscore=culcscore-10;}\r\n                if(i===4){culcscore=culcscore-30};\r\n            }\r\n\r\n            let r:{id:number,score:number,rank:number}={id:rank.id,score:culcscore,rank:i}\r\n            i=i+1;\r\n            score.push(r);\r\n            //レート計算\r\n            const profile=memberprofile.filter((pro)=>{\r\n                return pro.userProfile===rank.id\r\n            })[0]\r\n            const rate={rate_id:profile.rate_id,group_id:profile.group_id,user_id:profile.user_id,rate:profile.rate}\r\n            ratelist.push(rate)\r\n        });\r\n        return score;\r\n    }\r\n\r\n    const recodeScore=async(e:React.MouseEvent<HTMLElement>)=>{\r\n        e.preventDefault();\r\n        let ranklist:{id:number,score:number}[]=[]\r\n        if(score1.score+score2.score+score3.score+score4.score===100000){\r\n            ranklist.push(score1,score2,score3,score4);\r\n            ranklist.sort(function(a, b) {\r\n                let comp=0;\r\n                if (a.score < b.score) {\r\n                    comp= 1;\r\n                } else if(a.score>b.score){\r\n                    comp= -1;\r\n                }\r\n                return comp;\r\n             });\r\n\r\n            let score=culcScore(ranklist);//計算済みのスコア\r\n \r\n            //レート計算\r\n            if(ratelist.length===4){\r\n                let ratesum=0;\r\n                ratelist.forEach((r)=>{\r\n                    ratesum+=r.rate;\r\n                })\r\n                let rateave=Math.round(ratesum/4);\r\n                let i=1;\r\n                ratelist.forEach((r)=>{\r\n                    if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                    i+=1;\r\n                });\r\n                ratelist.map(async(r)=>{\r\n                    await dispatch(fetchAsyncPutRate(r));\r\n                });\r\n            };\r\n            //ゲームを作る\r\n            const packet={group_id:params.id};\r\n            const results=await dispatch(fetchAsyncCreateGame(packet));\r\n            if(fetchAsyncCreateGame.fulfilled.match(results)){\r\n                score.map(async(s)=>{\r\n                    const resultspacket={game_id:results.payload.id,user_id:s.id,rank:s.rank,score:s.score}\r\n                    await dispatch(fetchAsyncCreateGameResults(resultspacket));\r\n                })\r\n            }\r\n            setOpenModal(false);\r\n            history.push(`/group/${params.id}`)\r\n        };\r\n    }\r\n    return (\r\n        <>  \r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.game_main_container}>\r\n                <div className={styles.game_main_body}>\r\n                    <div className={styles.page_title_select_member}>\r\n                        <h2 className={styles.group_title_h2}>対局者を選択</h2>\r\n                    </div>\r\n                    <div className={styles.game_container}>        \r\n                        {groupmember.map((member)=>(\r\n                            member.is_active &&\r\n                                <div key={member.id} >\r\n                                    <Button  onClick={()=>setUserId(member.userProfile)} className={styles.game_user_btn}>\r\n                                        <div className={styles.game_body}>\r\n                                            {!memts.includes(member.userProfile)\r\n                                            ?\r\n                                                <div>\r\n                                                    <div className={styles.game_avater}>\r\n                                                        {member.img!==\"\"?\r\n                                                        <Avatar alt=\"who?\" src={member.img} style={{height:'70px',width:'70px'}}/>\r\n                                                        :null}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {member.nickName}\r\n                                                        <br/>\r\n                                                        {member.rate}\r\n                                                    </div>\r\n                                                </div>\r\n                                            :\r\n                                                <div className={styles.game_selected_profile}>\r\n                                                    <div className={styles.game_avater}>\r\n                                                        {member.img!==\"\"?\r\n                                                        <Avatar alt=\"who?\" src={member.img} style={{height:'70px',width:'70px'}}/>\r\n                                                        :null}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {member.nickName}\r\n                                                        <br/>\r\n                                                        {member.rate}\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </Button>\r\n                                </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.game_start_btn}>\r\n                        <Button\r\n                            disabled={memts.length!==4}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={newGame}\r\n                        >\r\n                            対局開始\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                    setMemts([]);\r\n                    setScore1({id:0,score:0})\r\n                    setScore2({id:0,score:0})\r\n                    setScore3({id:0,score:0})\r\n                    setScore4({id:0,score:0})\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <h2>対局結果</h2>\r\n                {/* {startLoad && <CircularProgress/>} */}\r\n                {memberprofile.length===4?\r\n                    <div>\r\n                        <div>\r\n                            東: {memberprofile[0].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                onChange={(e) => setScore1({id:memberprofile[0].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            南: {memberprofile[1].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                onChange={(e) => setScore2({id:memberprofile[1].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            西: {memberprofile[2].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                onChange={(e) => setScore3({id:memberprofile[2].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            北: {memberprofile[3].nickName}\r\n                            <br/>\r\n                            <TextField\r\n                                placeholder=\"点数\"\r\n                                type=\"number\"\r\n                                onChange={(e) => setScore4({id:memberprofile[3].userProfile,score:Number(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <div> \r\n                    </div>\r\n                }\r\n                <div>\r\n                    <p>合計:{score1.score+score2.score+score3.score+score4.score}</p>\r\n                    <div className={styles.match_radio_box_container}>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"5-10\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '5-10'}\r\n                            />\r\n                            5-10\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"10-20\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '10-20'}\r\n                            />\r\n                            10-20\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                            type=\"radio\"\r\n                            value=\"10-30\"\r\n                            onChange={(e)=>{setUma(e.target.value)}}\r\n                            checked={uma === '10-30'}\r\n                            />\r\n                            10-30\r\n                        </label>\r\n                    </div>\r\n                    <div className={styles.game_start_btn}>\r\n                        <Button\r\n                            disabled={score1.score+score2.score+score3.score+score4.score!==100000}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={recodeScore}\r\n                        >\r\n                            記録\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Game\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { PROPS_GAME_RESULTS } from '../types'\r\nimport { fetchAsyncDeleteGame, fetchAsyncEditGameResults, fetchAsyncGetGameResults, fetchAsyncPutRate, selecGroup, selectGameResults } from './groupSlice';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport styles from \"./Group.module.css\";\r\nimport { Button,TableRow, TextField } from '@material-ui/core';\r\nimport Modal from \"react-modal\";\r\n\r\nconst GameResults:React.FC<PROPS_GAME_RESULTS> = (gameresults) => {\r\n    const params = useParams<{ id: string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    let results=gameresults.results;\r\n    const [openModal,setOpenModal]=useState(false);\r\n    const [opendeleteresults,setOpenDeleteResults]=useState(false);\r\n    const created_at=gameresults.created_at.slice(0,10);\r\n    const allgameresults=useSelector(selectGameResults);\r\n    const [score1,setScore1]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score2,setScore2]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score3,setScore3]=useState<{id:number,score:number}>({id:0,score:0});\r\n    const [score4,setScore4]=useState<{id:number,score:number}>({id:0,score:0});\r\n    \r\n    function rateInfo(){\r\n        let rateinfo:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n        groupmember.forEach((gm)=>{\r\n            const rate={rate_id:gm.rate_id,group_id:gm.group_id,user_id:gm.user_id,rate:1500}\r\n            rateinfo.push(rate)\r\n        })\r\n        return rateinfo\r\n    }\r\n    const deletegame=async(id:number)=>{\r\n        let rate=rateInfo()//1500に初期化\r\n        //レート更新\r\n        allgameresults.forEach((all)=>{\r\n            let gameRate:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n            let ratesum=0;\r\n            \r\n            all.results.forEach((ar)=>{\r\n                if(ar.game_id!==id){\r\n                    const rm=rate.filter((r)=>{\r\n                        return r.user_id===ar.user_id\r\n                    })[0];\r\n                    ratesum+=rm.rate;\r\n                    gameRate.push(rm);\r\n                }\r\n            })\r\n            \r\n            if(gameRate.length!==0){\r\n                let rateave=Math.round(ratesum/4);//レートの平均\r\n                //レート更新\r\n                let i=1;\r\n                gameRate.forEach((r)=>{\r\n                    if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                    if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                    i+=1;\r\n                });\r\n            }\r\n        })\r\n        rate.map(async(r)=>{\r\n                await dispatch(fetchAsyncPutRate(r));\r\n        });\r\n        const result=await dispatch(fetchAsyncDeleteGame(id));\r\n        if(fetchAsyncDeleteGame.fulfilled.match(result)){\r\n            setScore1({id:0,score:0});\r\n            setScore2({id:0,score:0});\r\n            setScore3({id:0,score:0});\r\n            setScore4({id:0,score:0});\r\n        }\r\n        setOpenModal(false);\r\n        setOpenDeleteResults(false);\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    const editGame=async()=>{\r\n        let score:{id:number,score:number}[]=[]\r\n        score.push(score1,score2,score3,score4);\r\n        score.sort(function(a, b) {\r\n            let comp=0;\r\n            if (a.score < b.score) {\r\n                comp= 1;\r\n            } else if(a.score>b.score){\r\n                comp= -1;\r\n            }\r\n            return comp;\r\n         });\r\n        let editscore:{id:number,score:number,rank:number}[]=[]\r\n        let i=1;\r\n        score.forEach((s)=>{\r\n            let es={id:s.id,score:s.score,rank:i}\r\n            editscore.push(es);\r\n            i+=1;\r\n        });\r\n        editscore.map(async(edits)=>{\r\n            await dispatch(fetchAsyncEditGameResults(edits));\r\n        });\r\n        await dispatch(fetchAsyncGetGameResults(params.id));\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const modalStyle={\r\n        overlay: {\r\n            background: 'rgba(0, 0, 0, 0.2)',\r\n            zIndex:2,\r\n          },\r\n        content: {   \r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          backgroundColor: 'white',\r\n          width: 260,\r\n          height: 520,\r\n          transform: \"translate(-50%, -50%)\",\r\n          },\r\n    };\r\n    const modalStyle2={\r\n        overlay: {\r\n            background: 'rgba(0, 0, 0, 0.2)',\r\n            zIndex:6,\r\n          },\r\n        content: {  \r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          backgroundColor: 'white',\r\n          width: 280,\r\n          height: 180,\r\n          transform: \"translate(-50%, -50%)\",\r\n          },\r\n    };\r\n    function setcss(score:number){\r\n        if(score>=0){\r\n            return styles.results_table_p_blue\r\n        }else{\r\n            return styles.results_table_p_red\r\n        }\r\n    }\r\n\r\n    const openConfirmModal=()=>{\r\n        setOpenDeleteResults(true);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <TableRow key={gameresults.id+gameresults.group_id} onClick={()=>{\r\n                    setOpenModal(true)\r\n                    setScore1({id:results[0].id,score:results[0].score});\r\n                    setScore2({id:results[1].id,score:results[1].score});\r\n                    setScore3({id:results[2].id,score:results[2].score});\r\n                    setScore4({id:results[3].id,score:results[3].score});\r\n                }} className={styles.gameresult_container}>\r\n                <TableCell  >{created_at}</TableCell>\r\n                {results.map((result)=>(\r\n                    <TableCell component=\"th\" scope=\"row\" key={result.id} >\r\n                        <p className={setcss(result.score)}>{result.score} </p>\r\n                        <p className={styles.results_table_p}>{result.profile.nickName}</p>\r\n                    </TableCell> \r\n                ))}\r\n            </TableRow>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <h2>記録編集</h2>\r\n                    <div>\r\n                        {results.length===4?\r\n                        <>\r\n                            <div>\r\n                                {results[0].profile.nickName}\r\n                                <br/>\r\n                                <TextField\r\n                                    placeholder=\"点数\"\r\n                                    type=\"number\"\r\n                                    defaultValue={results[0].score}\r\n                                    onChange={(e) => setScore1({id:results[0].id,score:Number(e.target.value)})}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {results[1].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[1].score}\r\n                                        onChange={(e) => setScore2({id:results[1].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                            <div>\r\n                                {results[2].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[2].score}\r\n                                        onChange={(e) => setScore3({id:results[2].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                            <div>\r\n                                {results[3].profile.nickName}\r\n                                    <br/>\r\n                                    <TextField\r\n                                        placeholder=\"点数\"\r\n                                        type=\"number\"\r\n                                        defaultValue={results[3].score}\r\n                                        onChange={(e) => setScore4({id:results[3].id,score:Number(e.target.value)})}\r\n                                    />\r\n                            </div>\r\n                        </>\r\n                    :null}\r\n                    </div>\r\n                <div>\r\n                    <p>合計:{score1.score+score2.score+score3.score+score4.score}</p>\r\n                    <div className={styles.gameresults_btn_container}>\r\n                        <Button\r\n                            disabled={score1.score+score2.score+score3.score+score4.score!==0}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{editGame()}}\r\n                        >\r\n                            記録\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            //onClick={()=>{deletegame(results[0].game_id)}}\r\n                            onClick={()=>{openConfirmModal()}}\r\n                        >\r\n                            削除\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={opendeleteresults}\r\n                onRequestClose={()=>{\r\n                    setOpenDeleteResults(false);\r\n                }}\r\n                style={modalStyle2}\r\n                ariaHideApp={false}\r\n            >\r\n                <div>\r\n                    <p className={styles.leavegroup_p}>本当に記録を削除しますか？</p>\r\n                </div>\r\n                <div className={styles.leavegroup_container}>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\" color=\"secondary\"\r\n                            onClick={()=>{deletegame(results[0].game_id)}}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{setOpenDeleteResults(false)}}\r\n                        >\r\n                            キャンセル\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameResults\r\n","import {Button, IconButton, Slider } from '@material-ui/core'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport Cropper from 'react-easy-crop'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch } from '../../app/store'\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport styles from \"../home/Home.module.css\";\r\nimport { fetchAsyncUpdateGroupImage, resetOpenGroupImageTrimming, selecGroup, selectOpenGroupImageTrimming } from './groupSlice';\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:100,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 480,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupImageTrimming:React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const isopengroupimagetrimming=useSelector(selectOpenGroupImageTrimming);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const group=useSelector(selecGroup);\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, []);\r\n\r\n  const [src, setSrc] = useState<any>(null);  \r\n\r\n  const onSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== null) {\r\n        if(event.target.files.length!==0){\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () =>{\r\n                setSrc(reader.result);\r\n            });\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n  }; \r\n//トリミング\r\nconst createImage = (url: string) =>\r\n  new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\nconst getCroppedImg=async(imageSrc: any, pixelCrop: { width: number; height: number; x: number; y: number; }|null)=>{\r\n    const image = await createImage(imageSrc)\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    if(pixelCrop!==null){\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        if(ctx !== null){\r\n            ctx.drawImage(\r\n                image,\r\n                pixelCrop.x * scaleX,\r\n                pixelCrop.y * scaleY,\r\n                pixelCrop.width * scaleX,\r\n                pixelCrop.height * scaleY,\r\n                0,\r\n                0,\r\n                pixelCrop.width,\r\n                pixelCrop.height\r\n            );\r\n        }\r\n    }\r\n    return new Promise((resolve, reject)=>{\r\n        canvas.toBlob((blob) => {\r\n            if (!blob) {\r\n                return;\r\n            }\r\n            resolve(blob)\r\n        }, \"image/jpeg\");\r\n    });\r\n}\r\n\r\nasync function updateImage(croppedImage:any){\r\n    const name:string=String(group.id)+String(Date.now())+\".jpg\";\r\n    if(createImage!==null){\r\n        const newImage=new File([croppedImage],name,{type:\"image/jpg\",lastModified:Date.now()});\r\n        const packet = { id: group.id,title:group.title,text:group.text,password:group.password,img: newImage,name:name,};\r\n        const results=await dispatch(fetchAsyncUpdateGroupImage(packet)); \r\n        if(fetchAsyncUpdateGroupImage.fulfilled.match(results)){\r\n            dispatch(resetOpenGroupImageTrimming());\r\n        }\r\n    }  \r\n};\r\n\r\nasync function showCroppedImage(){\r\n    const croppedImage =  await getCroppedImg(\r\n        src,\r\n        croppedAreaPixels,\r\n    )\r\n    await updateImage(croppedImage);\r\n};\r\n\r\nconst handlerEditPicture = () => {\r\n    const fileInput = document.getElementById(\"editInputImage\");\r\n    fileInput?.click();\r\n};\r\n  \r\n  return (\r\n        <Modal\r\n            isOpen={isopengroupimagetrimming}\r\n            onRequestClose={async () => {\r\n                dispatch(resetOpenGroupImageTrimming());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div className={styles.image_trimming_container}>\r\n                <div className={styles.image_trimming_body}>\r\n                    <Cropper\r\n                    image={src}\r\n                    crop={crop}\r\n                    zoom={zoom}\r\n                    aspect={1.5 / 1.7}\r\n                    onCropChange={setCrop}\r\n                    onCropComplete={onCropComplete}\r\n                    onZoomChange={setZoom}\r\n                    />\r\n                    <div className={styles.image_tring_select}>\r\n                        <input type=\"file\" id=\"editInputImage\" className={styles.profile_image_icon_input}\r\n                            accept=\".jpg,.gif,.png,image/gif,image/jpeg,image/png\"\r\n                            onChange={onSelectFile}\r\n                        />\r\n                        <IconButton onClick={handlerEditPicture}>\r\n                            <PhotoLibraryIcon /> 画像を選択\r\n                        </IconButton>    \r\n                        <Button\r\n                            // disabled={!profile?.nickName}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={showCroppedImage}\r\n                        >\r\n                        適応\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.image_slider}>\r\n                        <Slider\r\n                            value={zoom}\r\n                            min={1}\r\n                            max={4}\r\n                            step={0.1}\r\n                            aria-labelledby=\"Zoom\"\r\n                            onChange={(e,zoom) => {\r\n                                let z=Number(zoom)\r\n                                setZoom(z)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupImageTrimming\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAsyncRateIsActive, fetchAsyncUpdateGroup, resetOpenSettings, selecGroup, selectOpenSettings, setOpenGroupImageTrimming } from './groupSlice';\r\nimport { Button, IconButton, TextField } from '@material-ui/core';\r\nimport GroupImageTrimming from './GroupImageTrimming';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport { selectLoginUserProfile } from '../auth/authSlice';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styles from \"./Group.module.css\";\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:4,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 520,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst modalStyle2={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:6,\r\n      },\r\n    content: {  \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 280,\r\n      height: 180,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupSettings:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const isopensettings=useSelector(selectOpenSettings);\r\n    const group=useSelector(selecGroup);\r\n    const [title,setTitle]=useState(\"\");\r\n    const [text,setText]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [openleavegroup,setOpenLeaveGroup]=useState(false);\r\n    const groupmember=group.profile;\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    \r\n    const updateGroup = async () => {\r\n        let updateTitle=title;\r\n        let updateText=text;\r\n        let updatePassword=password;\r\n        if(updateTitle===\"\"){updateTitle=group.title}\r\n        if(updateText===\"\"){updateText=group.text}\r\n        if(updatePassword===\"\"){updatePassword=group.password}\r\n        const packet = { id: group.id, title:updateTitle,text:updateText,password:updatePassword};\r\n        await dispatch(fetchAsyncUpdateGroup(packet));   \r\n        dispatch(resetOpenSettings());\r\n    };\r\n\r\n    const openConfirmModal=()=>{\r\n        setOpenLeaveGroup(true);\r\n    }\r\n\r\n    const leaveGroup=async()=>{\r\n        let rate_id:number=0;\r\n            groupmember.forEach((gm)=>{\r\n                if(gm.userProfile===loginuserprofile.userProfile){\r\n                    rate_id=gm.rate_id\r\n                }\r\n            })\r\n        const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:false}\r\n        const results=await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n        if(fetchAsyncRateIsActive.fulfilled.match(results)){\r\n            dispatch(resetOpenSettings());\r\n            history.push('/home');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isopensettings}\r\n                onRequestClose={()=>{\r\n                    dispatch(resetOpenSettings());\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >   \r\n                {group.img!==null?\r\n                    <img src={group.img} onClick={()=>{dispatch(setOpenGroupImageTrimming())}} width=\"150px\" height=\"170px\" className={styles.groupsetting_modal_img} alt=\"setting_img\"/>\r\n                :\r\n                <IconButton onClick={()=>{dispatch(setOpenGroupImageTrimming())}}>\r\n                    <PhotoLibraryIcon /> 画像を選択\r\n                </IconButton>}\r\n                <GroupImageTrimming/>\r\n                <br/>\r\n                <div>\r\n                    <TextField placeholder=\"名前\" type=\"text\" defaultValue={group.title} label=\"グループ名\" \r\n                        helperText={`${title.length}/30`}\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=30){\r\n                                setTitle(e.target.value)\r\n                            }\r\n                        }}/>\r\n                </div>\r\n                    <TextField placeholder=\"紹介\" type=\"text\" defaultValue={group.text} multiline fullWidth label=\"紹介\"\r\n                        helperText={`${text.length}/200`}\r\n                        onChange={(event) => {\r\n                            if(event.target.value.length<=199){\r\n                                setText(event.target.value)\r\n                            }\r\n                        }}/>\r\n                <br />\r\n                <br />\r\n                    <TextField placeholder=\"パスワード\" type=\"text\" defaultValue={group.password} multiline fullWidth label=\"パスワード\"\r\n                        onChange={(event) => {\r\n                            if(event.target.value.length<=199){\r\n                                setPassword(event.target.value)\r\n                            }\r\n                        }}/>\r\n                <br />\r\n                <div className={styles.groupsetting_btn}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={updateGroup}\r\n                    >\r\n                        更新\r\n                    </Button>\r\n                </div>\r\n                <br/>\r\n                <p\r\n                    onClick={()=>{openConfirmModal()}}\r\n                    className={styles.leavegroup}\r\n                >\r\n                    グループから抜ける\r\n                </p>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={openleavegroup}\r\n                onRequestClose={()=>{\r\n                    setOpenLeaveGroup(false);\r\n                }}\r\n                style={modalStyle2}\r\n                ariaHideApp={false}\r\n            >\r\n                <div>\r\n                    <p className={styles.leavegroup_p}>本当にグループを抜けますか？</p>\r\n                    <p className={styles.leavegroup_p_c}> ※ グループを抜けても対局記録は消えません</p>\r\n                </div>\r\n                <div className={styles.leavegroup_container}>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\" color=\"secondary\"\r\n                            onClick={()=>{leaveGroup()}}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.leavegroup_body}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{setOpenLeaveGroup(false)}}\r\n                        >\r\n                            キャンセル\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupSettings\r\n","import React,{useLayoutEffect,useState }  from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n    endLoad,\r\n    fetchAsyncCreateRate, \r\n    fetchAsyncGetGameResults, \r\n    fetchAsyncGetGroup,\r\n    fetchAsyncParticipationGroup,\r\n    fetchAsyncRateIsActive,selecGroup, \r\n    selectGameResults, \r\n    selectIsStartLoad, \r\n    setOpenSettings, \r\n    startLoad \r\n} from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nimport GameResults from './GameResults';\r\nimport { Button, CircularProgress, makeStyles, TextField,} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { fetchAsyncGetMyProf, selectLoginUserProfile } from '../auth/authSlice';\r\nimport { \r\n    FacebookShareButton, \r\n    FacebookIcon,\r\n    TwitterShareButton, \r\n    TwitterIcon,\r\n    LineShareButton,\r\n    LineIcon,\r\n    EmailShareButton,\r\n    EmailIcon,\r\n} from 'react-share'\r\nimport Modal from \"react-modal\";\r\nimport GroupSettings from './GroupSettings';\r\nimport groupImage from '../auth/fish_shark.png';\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 150,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst GroupHome:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const gameresults=useSelector(selectGameResults);\r\n    const isload=useSelector(selectIsStartLoad);\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const [istrue,setIsTrue]=useState(false);\r\n    const [password,setPassword]=useState(\"\");\r\n    const [isopenpasswordwindow,setIsOpenPasswordWindow]=useState(false);\r\n    const [notmatchpass,setNotMatchPass]=useState(false);\r\n    useLayoutEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            dispatch(startLoad())\r\n            if (localStorage.localJWT) {\r\n                const results=await dispatch(fetchAsyncGetGroup(params.id));\r\n                if(fetchAsyncGetGroup.fulfilled.match(results)){\r\n                    const member:{\r\n                        id: number;\r\n                        nickName: string;\r\n                        text: string;\r\n                        userProfile: number;\r\n                        created_on: string;\r\n                        img: string;\r\n                        rate_id: number;\r\n                        group_id: number;\r\n                        user_id: number;\r\n                        rate: number;\r\n                        is_active:boolean;\r\n                    }[]=results.payload.profile\r\n                    const profileresults=await dispatch(fetchAsyncGetMyProf());\r\n                    if(fetchAsyncGetMyProf.fulfilled.match(profileresults)){\r\n                        const profile: {\r\n                            id: number;\r\n                            nickName: string;\r\n                            text: string;\r\n                            userProfile: number;\r\n                            created_at: string;\r\n                            img: string;\r\n                        }=profileresults.payload;\r\n                        const isParti=member.map((m)=>{\r\n                            return (m.userProfile===profile.userProfile && m.is_active)\r\n                        })\r\n                        setIsTrue(isParti.includes(true))\r\n                    }\r\n                }\r\n                const res=await dispatch(fetchAsyncGetGameResults(params.id));\r\n                if(fetchAsyncGetGameResults.fulfilled.match(res)){\r\n                    dispatch(endLoad())\r\n                }\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n\r\n\r\n    //グループに参加\r\n    const participationGroup=async()=>{\r\n        if(group.password===\"\" || group.password===null){\r\n            let member:number[]=[]\r\n            let flag=true;\r\n            let rate_id=0;\r\n            groupmember.forEach((gm)=>{\r\n                member.push(gm.user_id);\r\n                if((!gm.is_active) && (gm.userProfile===loginuserprofile.userProfile)){\r\n                    flag=false;\r\n                    rate_id=gm.rate_id;\r\n                }\r\n            })\r\n            if(flag){\r\n                member.push(loginuserprofile.userProfile);\r\n                const pkt={id:group.id,userGroup:member}\r\n                const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n                if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                    const rate_pkt={group_id:group.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                    await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                }\r\n            }else{\r\n                const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n            }\r\n            setIsTrue(true);\r\n            \r\n        }else{\r\n            setIsOpenPasswordWindow(true);\r\n        }\r\n    }\r\n    const participationGroupWithPassword=async()=>{\r\n        if (password===group.password){\r\n            let member:number[]=[]\r\n            let flag=true;\r\n            let rate_id=0;\r\n            groupmember.forEach((gm)=>{\r\n                member.push(gm.userProfile);\r\n                if((!gm.is_active)&& (gm.userProfile===loginuserprofile.userProfile)){\r\n                    flag=false;\r\n                    rate_id=gm.rate_id;\r\n                }\r\n            })\r\n            if(flag){\r\n                member.push(loginuserprofile.userProfile);\r\n                const pkt={id:group.id,userGroup:member}\r\n                const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n                if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                    const rate_pkt={group_id:group.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                    await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                }\r\n            }else{\r\n                const rate_pkt={rate_id:rate_id,group_id:params.id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                await dispatch(fetchAsyncRateIsActive(rate_pkt));\r\n            }\r\n            setIsTrue(true);\r\n            setNotMatchPass(false);\r\n            setPassword(\"\");\r\n            setIsOpenPasswordWindow(false);\r\n        }else{\r\n            setNotMatchPass(true);\r\n            setPassword(\"\");\r\n        }\r\n    }\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 300,\r\n            maxWidth:700,\r\n            background:'white',\r\n        },\r\n        });\r\n        const classes = useStyles();\r\n    return (\r\n        <>\r\n            <GroupSettings/>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/home/`)}>ホーム</Button>\r\n            {isload?\r\n                <div className={styles.group_home_body_circular_container}>\r\n                    <div>\r\n                        <CircularProgress />\r\n                    </div>\r\n                </div>\r\n            :         \r\n                <div className={styles.group_home_container}>\r\n                    <div className={styles.group_home_body_container}>\r\n                        <div className={styles.group_home_body_top}>\r\n                            <div  className={styles.group_home_body_top_groupinfo}>\r\n                                <div className={styles.group_home_body_top_groupinfo_container}>\r\n                                    <div>\r\n                                        {group.img!==null?\r\n                                            <img src={group.img} className={styles.group_img} alt=\"group_img\"/>\r\n                                        :   <img src={groupImage} className={styles.group_img} alt=\"group_img\"/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={styles.group_home_body_top_groupinfo_title}>\r\n                                        <div className={styles.group_home_title}>\r\n                                            <h2 className={styles.group_title_h2}>{group.title}</h2>\r\n                                        </div>\r\n                                        {group.text}\r\n                                        <div className={styles.share_btn}>\r\n                                            <div>\r\n                                            <FacebookShareButton url={`https://groupmahjongrecode.com/group/${params.id}` } >\r\n                                                <FacebookIcon  round size='50px'/>\r\n                                            </FacebookShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <TwitterShareButton url={`https://groupmahjongrecode.com/group/${params.id}`}>\r\n                                                <TwitterIcon  round size='50px'/>\r\n                                            </TwitterShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <LineShareButton url={`https://groupmahjongrecode.com/group/${params.id}`}>\r\n                                                <LineIcon size='50px'/>\r\n                                            </LineShareButton>\r\n                                            </div>\r\n                                            <div className={styles.share_btn_icon}>\r\n                                            <EmailShareButton url={`https://groupmahjongrecode.com/group/${params.id}`}>\r\n                                                <EmailIcon size='50px'/>\r\n                                            </EmailShareButton>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                        </div>\r\n                        <div className={styles.group_home_body}>\r\n                            {istrue?\r\n                            <>\r\n                                <div className={styles.group_home_container_left}>\r\n                                    <div className={styles.group_home_menu}>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/game`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>対局 </h3>　\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/member`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>メンバー</h3>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{history.push(`/group/${params.id}/matchrecord`);window.scrollTo(0, 0);}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>対局記録</h3>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={styles.grouphome_btn} onClick={()=>{dispatch(setOpenSettings())}}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>　設定　</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles.group_home_container_right}>\r\n                                    <div className={styles.group_home_container_right_bottom}>\r\n                                        <div className={styles.group_home_results}>\r\n                                            <h3 className={styles.hgrouphome_menu_btn_h3}>直近の対局記録</h3>\r\n                                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\" >\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell><p className={styles.results_table_p}>日付</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>1位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>2位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>3位</p></TableCell>\r\n                                                        <TableCell><p className={styles.results_table_p}>4位</p></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                {gameresults.slice(0,7).map((gameresult)=>(\r\n                                                <TableBody  key={gameresult.id} className={styles.gameresult_container}>\r\n                                                    <GameResults  {...gameresult}/>\r\n                                                </TableBody>\r\n                                                ))}\r\n                                                </Table>\r\n                                            {/* </TableContainer> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>:\r\n                                <div className={styles.participation_btn_container}>\r\n                                    <div className={styles.participation_btn_body}>\r\n                                        <Button className={styles.participation_btn} onClick={()=>{participationGroup()}}>\r\n                                            <h3 className={styles.participation_btn_h3}>グループに参加</h3>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n            }\r\n            <Modal\r\n                isOpen={isopenpasswordwindow}\r\n                onRequestClose={()=>{\r\n                    setIsOpenPasswordWindow(false);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className={styles.group_home_modal_container}>\r\n                    {notmatchpass && <p className={styles.results_table_p_red}>パスワードが一致しません</p>}\r\n                    <TextField\r\n                        placeholder=\"パスワード\"\r\n                        type=\"text\"\r\n                        defaultValue={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <div className={styles.group_home_modal_btn}>\r\n                        <Button\r\n                            // disabled={password!==group.password}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{participationGroupWithPassword()}}\r\n                        >\r\n                            グループに参加\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupHome\r\n","import { Avatar, Button } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGameResults, fetchAsyncGetGroup, fetchAsyncPutRate,  selecGroup, selectGameResults } from './groupSlice';\r\nimport styles from \"./Group.module.css\";\r\nconst GroupMember:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string ,user_id:string}>();\r\n    const group=useSelector(selecGroup);\r\n    const groupmember=group.profile;\r\n    const allgameresults=useSelector(selectGameResults);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGroup(params.id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n\r\n    function rateInfo(){\r\n        let rateinfo:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n        groupmember.forEach((gm)=>{\r\n            const rate={rate_id:gm.rate_id,group_id:gm.group_id,user_id:gm.user_id,rate:1500}\r\n            rateinfo.push(rate)\r\n        })\r\n        return rateinfo\r\n    }\r\n\r\n    const updateRate=async()=>{\r\n        const res=await dispatch(fetchAsyncGetGameResults(params.id));\r\n        if(fetchAsyncGetGameResults.fulfilled.match(res)){\r\n            let rate=rateInfo()//1500に初期化\r\n            //レート更新\r\n            allgameresults.forEach((all)=>{\r\n                let gameRate:{rate_id:number,group_id:number,user_id:number,rate:number}[]=[];\r\n                let ratesum=0;\r\n                all.results.forEach((ar)=>{\r\n                    const rm=rate.filter((r)=>{\r\n                        return r.user_id===ar.user_id\r\n                    })[0];\r\n                    ratesum+=rm.rate;\r\n                    gameRate.push(rm);\r\n                    \r\n                })\r\n                if(gameRate.length!==0){\r\n                    let rateave=Math.round(ratesum/4);//レートの平均\r\n                    //レート更新\r\n                    let i=1;\r\n                    gameRate.forEach((r)=>{\r\n                        if(i===1){r.rate=Math.round(r.rate+(50+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===2){r.rate=Math.round(r.rate+(10+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===3){r.rate=Math.round(r.rate+(-20+((rateave-r.rate)/70)*0.2));}\r\n                        if(i===4){r.rate=Math.round(r.rate+(-40+((rateave-r.rate)/70)*0.2));}\r\n                        i+=1;\r\n                    });\r\n                }\r\n            })\r\n            rate.map(async(r)=>{\r\n                await dispatch(fetchAsyncPutRate(r));\r\n            });\r\n            await dispatch(fetchAsyncGetGroup(params.id));\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.game_main_container}>\r\n            <div className={styles.game_main_body}>\r\n                <div className={styles.page_title_group_member}>\r\n                    <h2 className={styles.group_title_h2}>グループメンバー</h2> \r\n                    <div className={styles.update_rate_btn}>\r\n                        <Button color=\"primary\" onClick={()=>{updateRate()}}>\r\n                            レート更新\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.game_container}> \r\n                    {groupmember.map((mem)=>(\r\n                        mem.is_active &&\r\n                            <div key={mem.id}>\r\n                                <div className={styles.game_body}>\r\n                                    <Button onClick={()=>{history.push(`/group/${params.id}/member/${mem.user_id}/`)}}>\r\n                                        <div>\r\n                                            <div className={styles.game_avater}>\r\n                                                {mem.img!==\"\"?\r\n                                                <Avatar alt=\"who?\" src={mem.img} style={{height:'70px',width:'70px'}}/>\r\n                                                :null}\r\n                                            </div>\r\n                                            <div>\r\n                                                {mem.nickName}\r\n                                                <br/>\r\n                                                {mem.rate}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    ))}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupMember\r\n","import { Button, CircularProgress, TextField } from '@material-ui/core';\r\nimport React, { useLayoutEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport GameResults from './GameResults';\r\nimport { endLoadResults, fetchAsyncGetGameResults, selectGameResults, selectIsLoadResults, startLoadResults } from './groupSlice';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from \"./Group.module.css\";\r\n\r\n\r\nconst MatchRecord:React.FC = () => {\r\n    const params = useParams<{ id: string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const gameresults=useSelector(selectGameResults);\r\n    const [date,setDate]=useState(\"\");\r\n    const [enddate,setEndDate]=useState(\"\");\r\n    const isloadresults=useSelector(selectIsLoadResults);\r\n    const history = useHistory();\r\n    useLayoutEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                dispatch(startLoadResults())\r\n                await dispatch(fetchAsyncGetGameResults(params.id));\r\n                dispatch(endLoadResults())\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id]);\r\n    let startday = 0;\r\n    let endday = 99999935200000;\r\n    if(date!==\"\"){startday = Date.parse(date);}\r\n    if(enddate!==\"\"){ endday = Date.parse(enddate);}\r\n    const selectgameresults=gameresults.filter((result)=>{\r\n        let tartgetday=Date.parse(result.created_at.slice(0,10));\r\n        return startday<=tartgetday && tartgetday<=endday\r\n    });\r\n\r\n    let profile:{user_id:number,nickName:string,score:number,gamecount:number,rank1:number,rank2:number,rank3:number,rank4:number}[]=[];\r\n    selectgameresults.forEach((selectresult)=>{\r\n        selectresult.results.forEach((r)=>{\r\n            if(profile.length!==0){\r\n                let selectprof=profile.filter((pro)=>{\r\n                return pro.user_id===r.profile.userProfile;\r\n                })\r\n                //プロフィールがない時\r\n                if(selectprof.length===0){\r\n                    if(r.rank===1){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:1,rank2:0,rank3:0,rank4:0});}\r\n                    if(r.rank===2){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:1,rank3:0,rank4:0});}\r\n                    if(r.rank===3){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:1,rank4:0});}\r\n                    if(r.rank===4){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:0,rank4:1});}\r\n                }else{\r\n                //　情報更新\r\n                    selectprof[0].gamecount+=1;\r\n                    if(r.rank===1){selectprof[0].rank1+=1;}\r\n                    if(r.rank===2){selectprof[0].rank2+=1;}\r\n                    if(r.rank===3){selectprof[0].rank3+=1;}\r\n                    if(r.rank===4){selectprof[0].rank4+=1;}\r\n                    selectprof[0].score+=r.score;\r\n                }\r\n            }else{\r\n                if(r.rank===1){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:1,rank2:0,rank3:0,rank4:0});}\r\n                if(r.rank===2){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:1,rank3:0,rank4:0});}\r\n                if(r.rank===3){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:1,rank4:0});}\r\n                if(r.rank===4){profile.push({user_id:r.user_id,nickName:r.profile.nickName,score:r.score,gamecount:1,rank1:0,rank2:0,rank3:0,rank4:1});}\r\n            }\r\n        })\r\n    })\r\n    \r\n      \r\n    const useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n        maxWidth:1200,\r\n    },\r\n    table2:{\r\n        minWidth: 300,\r\n        maxWidth:700,\r\n        background:'white',\r\n    }\r\n    });\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/`)}>戻る</Button>\r\n            <br/>\r\n            <div className={styles.matchresult_title}>\r\n                <h2 className={styles.group_title_h2}>対局記録</h2>\r\n            </div>\r\n            <div className={styles.selectdate_container}>\r\n                <div className={styles.selectdate_body}>\r\n                    <TextField\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        onChange={(e)=>setDate(e.target.value)}\r\n                        defaultValue={date}\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <div className={styles.selectdate_container_div}>\r\n                        <h3　className={styles.selectdate_container_h3}>～</h3>\r\n                    </div>\r\n                     <TextField\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        onChange={(e)=>setEndDate(e.target.value)}\r\n                        defaultValue={enddate}\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {isloadresults?\r\n                <div className={styles.group_home_body_circular_container}>\r\n                    <div>\r\n                        <CircularProgress />\r\n                    </div>\r\n                </div>\r\n            :      \r\n             profile.length!==0?\r\n                <div >\r\n                    <div className={styles.match_recode_table}>\r\n                        <div>\r\n                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><p className={styles.results_table_p}>成績集計結果</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>合計スコア</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>平均スコア</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>平均順位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>1位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>2位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>3位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>4位回数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>対局数</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>トップ率</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>ラス率</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>連対率</p></TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {profile.map((prof)=>(\r\n                                        <TableRow key={prof.user_id}>\r\n                                            <TableCell component=\"th\" scope=\"row\"><p className={styles.results_table_p}>{prof.nickName}</p></TableCell>\r\n                                            <TableCell>\r\n                                                {prof.score>=0?\r\n                                                    <p className={styles.results_table_p_blue}>{prof.score}</p>\r\n                                                :<p className={styles.results_table_p_red}>{prof.score}</p>}\r\n                                            </TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(prof.score/prof.gamecount).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{((1*prof.rank1+2*prof.rank2+3*prof.rank3+4*prof.rank4)/prof.gamecount).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank1}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank2}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank3}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.rank4}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{prof.gamecount}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank1)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank4)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                            <TableCell><p className={styles.results_table_p}>{(((prof.rank1+prof.rank2)/prof.gamecount)*100).toFixed(1)}</p></TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className={styles.result_matchrecode}>\r\n                        <Table className={classes.table2} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><p className={styles.results_table_p}>日付</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>1位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>2位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>3位</p></TableCell>\r\n                                    <TableCell><p className={styles.results_table_p}>4位</p></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            {selectgameresults.map((gameresult)=>(\r\n                            <TableBody  key={gameresult.id} className={styles.gameresult_container}>\r\n                                \r\n                                <GameResults {...gameresult}/>\r\n                                \r\n                            </TableBody>\r\n                            ))}\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className={styles.results_table_not_exist_div}>\r\n                    <p className={styles.results_table_p}>対局記録がありません</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchRecord\r\n","import { Avatar, Button } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncGetGameResults, fetchAsyncGetSelectProfile, selectGameResults, selectSelectProfile } from './groupSlice';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PolarAngleAxis, PolarGrid, PolarRadiusAxis, Radar, RadarChart,} from 'recharts';\r\nimport styles from \"./Group.module.css\";\r\n\r\nconst MemberDetail:React.FC = () => {\r\n    const params = useParams<{ id: string,user_id:string }>();\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const gameresults=useSelector(selectGameResults);\r\n    const history = useHistory();\r\n    const prof=useSelector(selectSelectProfile);\r\n\r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetGameResults(params.id));\r\n                await dispatch(fetchAsyncGetSelectProfile(params.user_id));\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,params.id,params.user_id]);\r\n\r\n    let rank1:number=0;\r\n    let rank2:number=0;\r\n    let rank3:number=0;\r\n    let rank4:number=0;\r\n    let score:number=0;\r\n    let gamecount:number=0;\r\n    let nickname:string=\"\";\r\n    let img:string=\"\";\r\n    let text:string=\"\";\r\n    let finduser=false;\r\n    gameresults.map((gameresult)=>{\r\n       return gameresult.results.forEach((r)=>{\r\n            if(String(r.user_id)===params.user_id){\r\n                gamecount+=1;\r\n                score+=r.score;\r\n                if(r.rank===1){rank1+=1}\r\n                if(r.rank===2){rank2+=1}\r\n                if(r.rank===3){rank3+=1}\r\n                if(r.rank===4){rank4+=1}\r\n                nickname=r.profile.nickName;\r\n                text=r.profile.text;\r\n                img=r.profile.img;\r\n                finduser=true;\r\n            }\r\n        })\r\n    });\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 700,\r\n            maxWidth:1200,\r\n        },\r\n        });\r\n    \r\n    const classes = useStyles();\r\n    \r\n    //平均ランク\r\n    let average_rank=0;\r\n    let top_rate=0;\r\n    let las_rate=0;\r\n    let rentai_rate=0;\r\n    let average_score=0;\r\n    if(finduser){\r\n        let rank=(1*rank1+2*rank2+3*rank3+4*rank4)/gamecount;\r\n        if((rank)<=2.3){\r\n            average_rank=100;\r\n        }else if((rank)>2.3 && (rank)<2.5){\r\n            average_rank=75;\r\n        }else if((rank)>=2.5 && (rank)<2.7){\r\n            average_rank=50;\r\n        }else{\r\n            average_rank=25;\r\n        }\r\n        //トップ率\r\n        let top=((rank1)/gamecount)*100;\r\n        \r\n        if(top>=30){\r\n            top_rate=100;\r\n        }else if(top<30 && top>25){\r\n            top_rate=75;\r\n        }else if(top<=25 && top >20){\r\n            top_rate=50;\r\n        }else{\r\n            top_rate=25;\r\n        }\r\n        //ラス回避率\r\n        let las=100-(((rank4)/gamecount)*100);\r\n        if(las>=80){\r\n            las_rate=100;\r\n        }else if(las<80 && las>75){\r\n            las_rate=75;\r\n        }else if(las<=75 && las >70){\r\n            las_rate=50;\r\n        }else{\r\n            las_rate=25;\r\n        }\r\n        //連対\r\n        let rentai=((rank1+rank2)/gamecount)*100;\r\n        if(rentai>=60){\r\n            rentai_rate=100;\r\n        }else if(rentai<60 && rentai >55){\r\n            rentai_rate=75;\r\n        }else if(rentai <=55 && rentai>=50){\r\n            rentai_rate=50;\r\n        }else{\r\n            rentai_rate=25;\r\n        }\r\n        //スコア\r\n        let setscore=score/gamecount;\r\n        if(setscore>=20){\r\n            average_score=100;\r\n        }else if(setscore<20 && setscore>=10){\r\n            average_score=75;\r\n        }else if(setscore<10 && setscore>=0){\r\n            average_score=50;\r\n        }else{\r\n            average_score=25;\r\n        }\r\n    }else{\r\n        nickname=prof.nickName;\r\n        text=prof.text;\r\n        img=prof.img;\r\n    }\r\n    const data = [\r\n        { rank: '平均スコア', value: average_score},\r\n        { rank: '平均順位', value: average_rank },\r\n        { rank: 'トップ率', value: top_rate },\r\n        { rank: 'ラス回避率', value: las_rate },\r\n        { rank: '連対率', value:rentai_rate },\r\n        ];\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>history.push(`/group/${params.id}/member/`)}>戻る</Button>\r\n            <div className={styles.memberdetail_container_top}>\r\n                <div className={styles.memberdetail_container_top_body}>\r\n                <div className={styles.memberdetail_prof}>\r\n                    {img!==\"\"?\r\n                        <div className={styles.memberdetail_prof_avatar}>\r\n                            \r\n                            <Avatar alt=\"who?\" src={img} style={{height:'80px',width:'80px'}}/>\r\n                            \r\n                        </div>\r\n                    :null}\r\n                    <div className={styles.memberdetail_prof_p_container}>\r\n                        <p className={styles.memberdetail_prof_p_name}>{nickname}</p>\r\n                        <p className={styles.memberdetail_prof_p}>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.memberdetail_chart}>\r\n                    <RadarChart // レーダーチャートのサイズや位置、データを指定\r\n                        height={250} //レーダーチャートの全体の高さを指定\r\n                        width={340} //レーダーチャートの全体の幅を指定\r\n                        cx=\"50%\" //要素の左を基準に全体の50%移動\r\n                        cy=\"50%\" //要素の上を基準に全体の50%移動\r\n                        outerRadius={100}\r\n                        data={data} //ここにArray型のデータを指定\r\n                        >\r\n                        <PolarGrid /> \r\n                        <PolarAngleAxis\r\n                            dataKey=\"rank\" //Array型のデータの、数値を表示したい値のキーを指定\r\n                            domain={[100]}\r\n                        />\r\n                        <PolarRadiusAxis \r\n                            tick={false}\r\n                            axisLine={false}\r\n                            domain={[0,100]}\r\n                        />\r\n                        <Radar //レーダーの色や各パラメーターのタイトルを指定\r\n                            name=\"Mike\"  //hoverした時に表示される名前を指定 \r\n                            dataKey=\"value\" //Array型のデータのパラメータータイトルを指定\r\n                            stroke=\"#8884d8\"  //レーダーの線の色を指定\r\n                            fill=\"#8884d8\" //レーダーの中身の色を指定\r\n                            fillOpacity={0.6} //レーダーの中身の色の薄さを指定\r\n                        />\r\n                        {/* <Tooltip /> //hoverすると各パラメーターの値が表示される */}\r\n                    </RadarChart>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            {finduser?\r\n            <div>\r\n                <br/>\r\n                <div className={styles.match_recode_table}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>合計スコア</TableCell>\r\n                            <TableCell>平均スコア</TableCell>\r\n                            <TableCell>平均順位</TableCell>\r\n                            <TableCell>1位回数</TableCell>\r\n                            <TableCell>2位回数</TableCell>\r\n                            <TableCell>3位回数</TableCell>\r\n                            <TableCell>4位回数</TableCell>\r\n                            <TableCell>対局数</TableCell>\r\n                            <TableCell>トップ率</TableCell>\r\n                            <TableCell>ラス回避率</TableCell>\r\n                            <TableCell>連対率</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\" align=\"center\">{score}</TableCell>\r\n                                <TableCell align=\"center\">{(score/gamecount).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{((1*rank1+2*rank2+3*rank3+4*rank4)/gamecount).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{rank1}</TableCell>\r\n                                <TableCell align=\"center\">{rank2}</TableCell>\r\n                                <TableCell align=\"center\">{rank3}</TableCell>\r\n                                <TableCell align=\"center\">{rank4}</TableCell>\r\n                                <TableCell align=\"center\">{gamecount}</TableCell>\r\n                                <TableCell align=\"center\">{(((rank1)/gamecount)*100).toFixed(1)}</TableCell>\r\n                                <TableCell align=\"center\">{100-Number((((rank4)/gamecount)*100).toFixed(1))}</TableCell>\r\n                                <TableCell align=\"center\">{(((rank1+rank2)/gamecount)*100).toFixed(1)}</TableCell>\r\n                            </TableRow>   \r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            :<div className={styles.match_recode_not_exist}>対局記録がありません</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberDetail\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React,{useState} from 'react'\r\nimport styles from \"./Home.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport { AppDispatch } from '../../app/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAsyncPostContact } from './homeSlice';\r\n\r\nconst Contact:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [sendmail,setSendMail]=useState(false);\r\n    return (\r\n        <div className={styles.contact_container}>\r\n            {!sendmail?\r\n            <div className={styles.contact_body}>\r\n                <h3>お問い合わせ</h3>\r\n                <Formik\r\n                    initialErrors={{ email: \"required\" }}\r\n                    initialValues={{ email: \"\",text: \"\",title:\"\"}}\r\n                    \r\n                    onSubmit={async (values) => {\r\n                        setSendMail(true);\r\n                        const contact_packet={sender: values.email,title:values.title,message:values.text}\r\n                        await dispatch(fetchAsyncPostContact(contact_packet));\r\n                        \r\n                    }}\r\n                    //バリデーション\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string()\r\n                                .email(\"メールアドレスが不正です。\")\r\n                                .required(\"メールアドレスは必須です。\"),\r\n                        title: Yup.string().required(\"件名は必須です。\"),\r\n                        text: Yup.string().required(\"内容は必須です。\"),\r\n                    })}\r\n                >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isValid,\r\n                }) => (\r\n                        <div className=\"auth_login_main_container\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div >\r\n                                    <TextField\r\n                                        label=\"メールアドレス\"\r\n                                        placeholder=\"メールアドレス\"\r\n                                        type=\"input\"\r\n                                        name=\"email\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.email && errors.email ? (\r\n                                        <div >{errors.email}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"件名\"\r\n                                        placeholder=\"件名(必須)\"\r\n                                        type=\"input\"\r\n                                        name=\"title\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.title}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                    <br />\r\n                                    {touched.title && errors.title ? (\r\n                                        <div >{errors.title}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <TextField\r\n                                        label=\"お問い合わせ内容(必須)\"\r\n                                        type=\"input\"\r\n                                        name=\"text\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        fullWidth\r\n                                        value={values.text}\r\n                                        multiline\r\n                                        rows={10}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <br/>\r\n                                    {touched.text && errors.text ? (\r\n                                        <div >{errors.text}</div>\r\n                                        ) : null}\r\n                                    <br />\r\n                                    <br/>\r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={!isValid} type=\"submit\">\r\n                                    送信\r\n                                </Button>\r\n                            </form>\r\n                        </div>  \r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            :<div><h3>送信が完了しました。</h3></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport styles from \"./Home.module.css\";\r\n\r\nconst Disclaimer:React.FC = () => {\r\n    return (\r\n        <div className={styles.contact_container}>\r\n            <div className={styles.contact_body}>\r\n                <h1>免責事項</h1>\r\n                <p>・本サイトにおける内容の変更、中断、終了によって生じたいかなる損害についても一切責任を負いません。</p>\r\n                <p>・本サービスを利用したことにより直接的または間接的に利用者に発生した損害について、一切賠償責任を負いません。</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\nimport styles from \"./Home.module.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer:React.FC = () => {\r\n    return (\r\n        <footer className={styles.footer_container}>\r\n            <div className={styles.footer_p_div}>\r\n                <p className={styles.footer_p}>\r\n                    <Link to=\"/contact\" className={styles.footer_link} onClick={()=>{window.scrollTo(0, 0);}}>お問い合わせ</Link>\r\n                </p>\r\n            </div>\r\n            <div className={styles.footer_p_div}>\r\n                <p className={styles.footer_p}>\r\n                    <Link to=\"/disclaimer\" className={styles.footer_link} onClick={()=>{window.scrollTo(0, 0);}}>免責事項</Link>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/same.a406120e.svg\";","import {Button, IconButton, Slider } from '@material-ui/core'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport Cropper from 'react-easy-crop'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch } from '../../app/store'\r\nimport { resetImageTrimming, selectIsOpenImageTrimming } from './homeSlice'\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport styles from \"./Home.module.css\";\r\nimport { fetchAsyncUpdateProfImage, selectLoginUserProfile } from '../auth/authSlice';\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:99,\r\n      },\r\n    content: {\r\n        \r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 480,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst ImageTrimming:React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const isopenimagetrimming=useSelector(selectIsOpenImageTrimming);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const profile=useSelector(selectLoginUserProfile);\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n    \r\n  }, []);\r\n\r\n  const [src, setSrc] = useState<any>(null);  \r\n\r\n  const onSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== null) {\r\n        if(event.target.files.length!==0){\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () =>{\r\n                setSrc(reader.result);\r\n            });\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n  }; \r\n//トリミング\r\nconst createImage = (url: string) =>\r\n  new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\nconst getCroppedImg=async(imageSrc: any, pixelCrop: { width: number; height: number; x: number; y: number; }|null)=>{\r\n    const image = await createImage(imageSrc)\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    if(pixelCrop!==null){\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        canvas.width = pixelCrop.width\r\n        canvas.height = pixelCrop.height\r\n        if(ctx !== null){\r\n            ctx.drawImage(\r\n                image,\r\n                pixelCrop.x * scaleX,\r\n                pixelCrop.y * scaleY,\r\n                pixelCrop.width * scaleX,\r\n                pixelCrop.height * scaleY,\r\n                0,\r\n                0,\r\n                pixelCrop.width,\r\n                pixelCrop.height\r\n            );\r\n        }\r\n    }\r\n    return new Promise((resolve, reject)=>{\r\n        canvas.toBlob((blob) => {\r\n            if (!blob) {\r\n                \r\n                return;\r\n            }\r\n            resolve(blob)\r\n        }, \"image/jpeg\");\r\n    });\r\n}\r\n\r\nasync function updateImage(croppedImage:any){\r\n    const name:string=String(profile.id)+String(Date.now())+\".jpg\";\r\n    if(createImage!==null){\r\n        const newImage=new File([croppedImage],name,{type:\"image/jpg\",lastModified:Date.now()});\r\n        const packet = { id: profile.id,nickName:profile.nickName,text:profile.text,img: newImage,name:name,};\r\n        const results=await dispatch(fetchAsyncUpdateProfImage(packet)); \r\n        if(fetchAsyncUpdateProfImage.fulfilled.match(results)){\r\n            dispatch(resetImageTrimming());\r\n        }\r\n    }  \r\n};\r\n\r\nasync function showCroppedImage(){\r\n    const croppedImage =  await getCroppedImg(\r\n        src,\r\n        croppedAreaPixels,\r\n    )\r\n    await updateImage(croppedImage);\r\n};\r\n\r\nconst handlerEditPicture = () => {\r\n    const fileInput = document.getElementById(\"editInputImage\");\r\n    fileInput?.click();\r\n};\r\n  \r\n  return (\r\n        <Modal\r\n            isOpen={isopenimagetrimming}\r\n            onRequestClose={async () => {\r\n                dispatch(resetImageTrimming());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div className={styles.image_trimming_container}>\r\n                <div className={styles.image_trimming_body}>\r\n                    <Cropper\r\n                    image={src}\r\n                    crop={crop}\r\n                    zoom={zoom}\r\n                    aspect={1 / 1}\r\n                    onCropChange={setCrop}\r\n                    onCropComplete={onCropComplete}\r\n                    onZoomChange={setZoom}\r\n                    />\r\n                    <div className={styles.image_tring_select}>\r\n                        <input type=\"file\" id=\"editInputImage\" className={styles.profile_image_icon_input}\r\n                            accept=\".jpg,.gif,.png,image/gif,image/jpeg,image/png\"\r\n                            onChange={onSelectFile}\r\n                        />\r\n                        <IconButton onClick={handlerEditPicture}>\r\n                            <PhotoLibraryIcon /> 画像を選択\r\n                        </IconButton>    \r\n                        <Button\r\n                            // disabled={!profile?.nickName}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={showCroppedImage}\r\n                        >\r\n                        適応\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.image_slider}>\r\n                        <Slider\r\n                            value={zoom}\r\n                            min={1}\r\n                            max={4}\r\n                            step={0.1}\r\n                            aria-labelledby=\"Zoom\"\r\n                            onChange={(e,zoom) => {\r\n                                let z=Number(zoom)\r\n                                setZoom(z)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImageTrimming\r\n","import { Avatar, Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport Modal from \"react-modal\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncUpdateProf, selectLoginUserProfile } from '../auth/authSlice';\r\nimport { resetBackUrl, resetOpenProfile, selectIsOpenProfile, setImageTrimming } from './homeSlice';\r\nimport ImageTrimming from './ImageTrimming';\r\nimport styles from \"./Home.module.css\";\r\nimport { ContactsOutlined } from '@material-ui/icons';\r\n\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:8,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\nconst Profile:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const isopenprofile=useSelector(selectIsOpenProfile);\r\n    const profile=useSelector(selectLoginUserProfile);\r\n    const [name,setName]=useState(\"\");\r\n    const [text,setText]=useState(\"\");\r\n    const history = useHistory();\r\n    let proftext=profile.text;\r\n    if(proftext){\r\n        proftext=\"\"\r\n    }\r\n    const updateProfile = async () => {\r\n        let updateName=name;\r\n        let updateText=text;\r\n        if(updateName===\"\"){updateName=profile.nickName}\r\n        if(updateText===\"\"){updateText=profile.text}\r\n        if(updateText===null){updateText=\"\"}\r\n        const packet = { id: profile.id, nickName: updateName,text:updateText};\r\n        await dispatch(fetchAsyncUpdateProf(packet));   \r\n        dispatch(resetOpenProfile());\r\n    };\r\n    function logout(){\r\n        localStorage.removeItem(\"localJWT\");\r\n        dispatch(resetBackUrl());\r\n        dispatch(resetOpenProfile());\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={isopenprofile}\r\n            onRequestClose={async () => {\r\n                dispatch(resetOpenProfile());\r\n            }}\r\n            style={modalStyle}\r\n            ariaHideApp={false}\r\n        >\r\n            <div>\r\n                <h2>プロフィールを編集</h2>\r\n                <div>\r\n                    <Button onClick={()=>{dispatch(setImageTrimming())}}>\r\n                        <Avatar alt=\"who?\" src={profile.img} style={{height:'70px',width:'70px'}}/>\r\n                    </Button>\r\n                    <ImageTrimming/>\r\n                    <div>\r\n                        <TextField placeholder=\"名前\" type=\"text\" defaultValue={profile.nickName} label=\"名前\"\r\n                            onChange={(e) => {\r\n                                if(e.target.value.length<=20){\r\n                                    setName(e.target.value)}\r\n                                }\r\n                            }/>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <TextField placeholder=\"自己紹介\" type=\"text\" defaultValue={proftext} multiline fullWidth label=\"自己紹介\"\r\n                    onChange={(event) => {\r\n                        if(event.target.value.length<=200){\r\n                            setText(event.target.value)\r\n                        }\r\n                    }}/>\r\n                \r\n                <div className={styles.profile_btn_container}>\r\n                    <div className={styles.profile_btn}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={updateProfile}\r\n                        >\r\n                            プロフィール更新\r\n                        </Button>\r\n                    </div>\r\n                    <div className={styles.profile_btn}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={logout}\r\n                        >\r\n                            ログアウト\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory, useLocation} from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { fetchAsyncGetMyProf, selectLoginUserProfile } from '../auth/authSlice';\r\nimport { setBackUrl, setOpenProfile } from './homeSlice';\r\nimport styles from \"./Home.module.css\";\r\nimport { Avatar, Button} from '@material-ui/core';\r\nimport img from './same.svg'\r\nimport Profile from './Profile';\r\n\r\n\r\n\r\nconst Header:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const loginUserProfile=useSelector(selectLoginUserProfile);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            //ログインしていたら\r\n            if (localStorage.localJWT) {\r\n                await dispatch(fetchAsyncGetMyProf());//ログインしているユーザーのプロフィールを取得する\r\n                //await dispatch(fetchAsyncGetBelongToGroup());\r\n                if(location.pathname==='/'){\r\n                    history.push('/home');\r\n                }\r\n            }else{\r\n                if(!location.pathname.includes('/activate')){\r\n                    dispatch(setBackUrl(location.pathname));\r\n                    if(\r\n                        !(\r\n                            location.pathname.includes('/password_confirm') || \r\n                            location.pathname.includes('/contact') || \r\n                            location.pathname.includes('/disclaimer') || \r\n                            location.pathname.includes('/password/reset')\r\n                        )\r\n                    ){\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        fetchLoader();\r\n    },[dispatch,history,location.pathname]);\r\n\r\n    return (\r\n        <>\r\n            {location.pathname!=='/'?\r\n            <div className={styles.header_container}>\r\n                <div className={styles.header_body}>\r\n                    <Link to='/home' className={styles.header_link}>\r\n                        <div className={styles.header_body_left}>\r\n                            <h3 className={styles.header_title_h3} >\r\n                                グループ麻雀レコード\r\n                            </h3>\r\n                            <img src={img} className={styles.header_img} width=\"70px\" height=\"70px\" alt=\"header_img\"/>    \r\n                        </div>\r\n                    </Link>\r\n                    {location.pathname.includes('/activate') || location.pathname.includes('/password') || location.pathname.includes('/contact') || location.pathname.includes('/disclaimer')?\r\n                    <div></div>\r\n                    :\r\n                        <div className={styles.header_body_right}>\r\n                            <div>\r\n                                <p className={styles.header_nickname}>{loginUserProfile.nickName}</p>  \r\n                            </div>\r\n                            <div>\r\n                                <Button\r\n                                    onClick={()=>{dispatch(setOpenProfile())}}\r\n                                >\r\n                                    <Avatar alt=\"who?\" src={loginUserProfile.img} style={{height:'55px',width:'55px'}}/>\r\n                                </Button>\r\n                            </div>\r\n                            <Profile />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            :null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Button,  } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {PROPS_BELONG_TO_GROUP} from '../types';\r\nimport styles from \"./Home.module.css\";\r\nimport groupImage from '../auth/fish_shark.png';\r\n\r\nconst BelongToGroupList:React.FC<PROPS_BELONG_TO_GROUP> = (group) => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Button onClick={()=>{history.push(`/group/${group.id}`)}}> \r\n                <div className={styles.belong_to_group_container}>\r\n                    <div className={styles.belong_to_group_body_top}>\r\n                        {group.img!==null?\r\n                            <img src={group.img} className={styles.belong_to_group_img} alt=\"group_img\"/>\r\n                        :   <img src={groupImage} className={styles.belong_to_group_img} alt=\"group_img\"/>\r\n                        }\r\n                    </div>\r\n                    <div className={styles.belong_to_group_body_bottom}>\r\n                        <h3 className={styles.belong_to_group_h3}>{group.title}</h3>\r\n                    </div>    \r\n                </div>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BelongToGroupList\r\n","import { IconButton, TextField } from '@material-ui/core'\r\nimport React,{useState} from 'react'\r\nimport Modal from \"react-modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport { File } from \"../types\";\r\nimport { AppDispatch } from '../../app/store';\r\nimport { fetchAsyncCreateGroup } from './homeSlice';\r\nimport { selectLoginUserProfile } from '../auth/authSlice';\r\nimport { fetchAsyncCreateRate, fetchAsyncParticipationGroup } from '../group/groupSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from \"./Home.module.css\";\r\nconst modalStyle={\r\n    overlay: {\r\n        background: 'rgba(0, 0, 0, 0.2)',\r\n        zIndex:2,\r\n      },\r\n    content: {\r\n        \r\n        top: \"50%\",\r\n      left: \"50%\",\r\n      backgroundColor: 'white',\r\n      width: 260,\r\n      height: 450,\r\n      transform: \"translate(-50%, -50%)\",\r\n      },\r\n};\r\n\r\nconst Search:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const [openModal,setOpenModal]=useState<boolean>(false);\r\n    const [groupName,setGroupName]=useState(\"\")\r\n    const [text,setText]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [image, setImage] = useState<File | null>(null);\r\n    const loginuserprofile=useSelector(selectLoginUserProfile);\r\n    const history = useHistory();\r\n    let url=\"\";\r\n    const handlerEditPicture = () => {\r\n        const fileInput = document.getElementById(\"imageInput\");\r\n        fileInput?.click();\r\n    };\r\n\r\n    const newGroup = async (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        const packet = { title: groupName,text:text,password:password,img: image,};\r\n        const results=await dispatch(fetchAsyncCreateGroup(packet));\r\n        const group_id=results.payload.id;\r\n        if(fetchAsyncCreateGroup.fulfilled.match(results)){\r\n            let member:number[]=[]\r\n            member.push(loginuserprofile.userProfile);\r\n            const pkt={id:group_id,userGroup:member}\r\n            const results=await dispatch(fetchAsyncParticipationGroup(pkt));\r\n            if(fetchAsyncParticipationGroup.fulfilled.match(results)){\r\n                const rate_pkt={group_id:group_id,user_id:loginuserprofile.userProfile,is_active:true}\r\n                const rate_results=await dispatch(fetchAsyncCreateRate(rate_pkt));\r\n                if(fetchAsyncCreateRate.fulfilled.match(rate_results)){\r\n                    setGroupName(\"\");\r\n                    setImage(null);\r\n                    setOpenModal(false);\r\n                    history.push(`/group/${group_id}`)\r\n                }\r\n            }   \r\n        }\r\n        setGroupName(\"\");\r\n        setImage(null);\r\n        setOpenModal(false);\r\n    };\r\n\r\n      if(image!==null){\r\n        var binaryData = [];\r\n        binaryData.push(image);\r\n        url=window.URL.createObjectURL(new Blob(binaryData, {type: \"image/*\"}))\r\n      }\r\n    return (\r\n        <>\r\n            <div className={styles.create_group_container}>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>setOpenModal(true)}>グループを作る</Button>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={()=>{\r\n                    setOpenModal(false);\r\n                    url=\"\";\r\n                    setImage(null);\r\n                }}\r\n                style={modalStyle}\r\n                ariaHideApp={false}\r\n            >\r\n                <form >\r\n                    <h2>グループ作成</h2>\r\n                    <br />\r\n                    <TextField\r\n                        placeholder=\"グループ名\"\r\n                        helperText={`${groupName.length}/30`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=30){\r\n                                setGroupName(e.target.value)\r\n                            }\r\n                        }}\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                        placeholder=\"紹介文\"\r\n                        type=\"text\"\r\n                        helperText={`${text.length}/200`}\r\n                        onChange={(e) => {\r\n                            if(e.target.value.length<=200){\r\n                                setText(e.target.value)\r\n                            }\r\n                        }}\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                        placeholder=\"パスワード\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"imageInput\"\r\n                        hidden={true}\r\n                        onChange={(e) => setImage(e.target.files![0])}\r\n                    />\r\n                    <br />\r\n                    <IconButton onClick={handlerEditPicture}>\r\n                        <PhotoIcon />\r\n                    </IconButton>\r\n                    <div>\r\n                        {url!==\"\"?<img src={url} height=\"90px\" alt=\"same_img\"/>:null}\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                        disabled={!(groupName &&groupName.length<=30)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={newGroup}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{ useEffect} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { fetchAsyncGetMyProf,selectLoginUserProfile } from '../auth/authSlice';\r\nimport { fetchAsyncGetBelongToGroup, selectBelongToGroup } from './homeSlice';\r\nimport BelongToGroupList from './BelongToGroupList';\r\nimport styles from \"./Home.module.css\";\r\nimport Search from './Search';\r\n\r\nconst Home:React.FC = () => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginUserProfile=useSelector(selectLoginUserProfile);\r\n    const belongtogroup=useSelector(selectBelongToGroup);\r\n    \r\n    useEffect(()=>{\r\n        const fetchLoader = async ()=>{\r\n            //ログインしていたら\r\n            if (localStorage.localJWT) {\r\n                const result = await dispatch(fetchAsyncGetMyProf());//ログインしているユーザーのプロフィールを取得する\r\n                await dispatch(fetchAsyncGetBelongToGroup());\r\n                if (fetchAsyncGetMyProf.rejected.match(result)) {\r\n                    history.push('/')\r\n                }\r\n              }else{\r\n                history.push('/')\r\n              }\r\n            };\r\n        fetchLoader();\r\n    },[dispatch,history]);\r\n\r\n    return (\r\n        <div>\r\n            <Search/>\r\n            <div className={styles.home_container}>\r\n                {belongtogroup.length!==0 && belongtogroup[0].id!==0?\r\n                <div className={styles.home_grouplist_container}>\r\n                    {belongtogroup.map((group)=>( \r\n                        group.profile.map((prof)=>(\r\n                            prof.is_active &&prof.userProfile===loginUserProfile.userProfile && <BelongToGroupList key={group.id} {...group}/>\r\n                        ))\r\n                    ))}\r\n                </div>\r\n                :<>参加しているグループはありません</>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router, \r\n    Route,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport Activate from './features/auth/Activate';\r\nimport Auth from './features/auth/Auth';\r\nimport Auth_done from './features/auth/Auth_done';\r\nimport PasswordConfirm from './features/auth/PasswordConfirm';\r\nimport PasswordReset from './features/auth/PasswordReset';\r\nimport Game from './features/group/Game';\r\nimport GroupHome from './features/group/GroupHome';\r\nimport GroupMember from './features/group/GroupMember';\r\nimport MatchRecord from './features/group/MatchRecord';\r\nimport MemberDetail from './features/group/MemberDetail';\r\nimport Contact from './features/home/Contact';\r\nimport Disclaimer from './features/home/Disclaimer';\r\nimport Footer from './features/home/Footer';\r\nimport Header from './features/home/Header';\r\nimport Home from './features/home/Home';\r\n\r\n\r\nfunction App(){\r\n    return (\r\n        <div className=\"App\">\r\n            <Router basename = {process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path='/activate/:token' component={Activate}/>\r\n                    <Route path='/password/reset' component={PasswordReset}/>\r\n                    <Route path='/password_confirm/:uid/:token'component={PasswordConfirm}/>\r\n                    <Route path=\"/contact\" component={Contact}/>\r\n                    <Route path=\"/disclaimer\" component={Disclaimer}/>\r\n                    <Route exact path=\"/\" component={Auth}/>\r\n                    <Route path=\"/create_done\" component={Auth_done}/>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route exact path=\"/group/:id\" component={GroupHome}/>\r\n                    <Route exact path=\"/group/:id/member\" component={GroupMember}/>\r\n                    <Route exact path=\"/group/:id/member/:user_id\" component={MemberDetail}/>\r\n                    <Route exact path=\"/group/:id/matchrecord\" component={MatchRecord}/>\r\n                    <Route path=\"/group/:id/game\" component={Game}/>\r\n                    <Route component = {()=>(<div> 404 Not found </div>)} />\r\n                </Switch>\r\n                <Footer/>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport homeReducer from '../features/home/homeSlice';\r\nimport groupReducer from '../features/group/groupSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    home: homeReducer,\r\n    group:groupReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nexport type AppDispatch =typeof store.dispatch;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group_home_container\":\"Group_group_home_container__r_smr\",\"group_img\":\"Group_group_img__hYq5q\",\"group_home_body\":\"Group_group_home_body__3w_6g\",\"group_home_body_circular_container\":\"Group_group_home_body_circular_container__2GjBX\",\"group_title_h2\":\"Group_group_title_h2__2Qphc\",\"group_home_body_top\":\"Group_group_home_body_top__38Lh2\",\"group_home_body_top_groupinfo_container\":\"Group_group_home_body_top_groupinfo_container__1lKgx\",\"group_home_title\":\"Group_group_home_title__1--Fg\",\"group_home_title_p\":\"Group_group_home_title_p__1MFY7\",\"group_home_body_top_groupinfo_title\":\"Group_group_home_body_top_groupinfo_title__1r13h\",\"share_btn\":\"Group_share_btn__28Y9b\",\"share_btn_icon\":\"Group_share_btn_icon__3jXCp\",\"group_home_container_left\":\"Group_group_home_container_left__UULfs\",\"grouphome_btn\":\"Group_grouphome_btn__3YU7m\",\"group_home_menu\":\"Group_group_home_menu__2UKlF\",\"hgrouphome_menu_btn_h3\":\"Group_hgrouphome_menu_btn_h3__3mc4Q\",\"group_home_container_right\":\"Group_group_home_container_right__2eoVs\",\"results_table_p\":\"Group_results_table_p__1I_MU\",\"results_table_p_blue\":\"Group_results_table_p_blue__2s5vv\",\"results_table_p_red\":\"Group_results_table_p_red__3MrsX\",\"group_home_results\":\"Group_group_home_results__G0UVA\",\"participation_btn_container\":\"Group_participation_btn_container__CGaic\",\"participation_btn_h3\":\"Group_participation_btn_h3__2oSHE\",\"participation_btn\":\"Group_participation_btn__1yniX\",\"page_title_group_member\":\"Group_page_title_group_member__MvhLf\",\"update_rate_btn\":\"Group_update_rate_btn__S4aJL\",\"gameresult_container\":\"Group_gameresult_container__KnvM2\",\"gameresult_body\":\"Group_gameresult_body__3DzBp\",\"match_recode_table\":\"Group_match_recode_table__3fFhD\",\"selectdate_container\":\"Group_selectdate_container__21Jbq\",\"selectdate_body\":\"Group_selectdate_body__15xgc\",\"result_matchrecode\":\"Group_result_matchrecode__paI2n\",\"selectdate_container_h3\":\"Group_selectdate_container_h3__2eGrt\",\"gameresults_btn_container\":\"Group_gameresults_btn_container__31P_3\",\"gameresults_circular\":\"Group_gameresults_circular__ekbTH\",\"matchresult_title\":\"Group_matchresult_title__1hlVi\",\"results_table_not_exist_div\":\"Group_results_table_not_exist_div__1n299\",\"game_main_container\":\"Group_game_main_container__1Ovz3\",\"game_main_body\":\"Group_game_main_body__2EAVW\",\"page_title_select_member\":\"Group_page_title_select_member__YvqeU\",\"game_container\":\"Group_game_container__3EKRP\",\"game_body\":\"Group_game_body__q7XLF\",\"game_avater\":\"Group_game_avater__3A5bi\",\"game_user_btn\":\"Group_game_user_btn__2eu12\",\"game_selected_profile\":\"Group_game_selected_profile__2vXPn\",\"game_start_btn\":\"Group_game_start_btn__1QHi_\",\"radar_chart\":\"Group_radar_chart__9kv0Y\",\"memberdetail_container_top\":\"Group_memberdetail_container_top__1YLSu\",\"memberdetail_container_top_body\":\"Group_memberdetail_container_top_body__319tk\",\"memberdetail_prof\":\"Group_memberdetail_prof__LhRQC\",\"memberdetail_prof_p_container\":\"Group_memberdetail_prof_p_container__-DKUM\",\"memberdetail_prof_p_name\":\"Group_memberdetail_prof_p_name__1tH9f\",\"memberdetail_prof_p\":\"Group_memberdetail_prof_p__29AZm\",\"memberdetail_prof_avatar\":\"Group_memberdetail_prof_avatar__37qXz\",\"match_recode_not_exist\":\"Group_match_recode_not_exist__1x3ue\",\"leavegroup\":\"Group_leavegroup__iBDmv\",\"leavegroup_p_c\":\"Group_leavegroup_p_c__2ikg-\",\"leavegroup_container\":\"Group_leavegroup_container__1Fk36\",\"leavegroup_body\":\"Group_leavegroup_body__3etTs\",\"groupsetting_modal_img\":\"Group_groupsetting_modal_img__zZ03E\",\"groupsetting_btn\":\"Group_groupsetting_btn__AxY6y\",\"group_home_modal_container\":\"Group_group_home_modal_container__b7A9Z\",\"group_home_modal_btn\":\"Group_group_home_modal_btn__1JHXa\",\"memberdetail_chart\":\"Group_memberdetail_chart__4bu12\"};"],"sourceRoot":""}